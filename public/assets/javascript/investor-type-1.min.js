/*!
   JW Player version 8.23.1
   Copyright (c) 2021, JW Player, All Rights Reserved
   This source code and its use and distribution is subject to the terms
   and conditions of the applicable license agreement.
   https://www.jwplayer.com/tos/
   This product includes portions of other software. For the full text of licenses, see
   https://ssl.p.jwpcdn.com/player/v/8.23.1/notice.txt
*/
window.jwplayer=function(t){function e(e){for(var n,i,o=e[0],u=e[1],a=0,s=[];a<o.length;a++)i=o[a],Object.prototype.hasOwnProperty.call(r,i)&&r[i]&&s.push(r[i][0]),r[i]=0;for(n in u)Object.prototype.hasOwnProperty.call(u,n)&&(t[n]=u[n]);for(c&&c(e);s.length;)s.shift()()}var n={},r={0:0};function i(e){if(n[e])return n[e].exports;var r=n[e]={i:e,l:!1,exports:{}};return t[e].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.e=function(t){var e=[],n=r[t];if(0!==n)if(n)e.push(n[2]);else{var o=new Promise((function(e,i){n=r[t]=[e,i]}));e.push(n[2]=o);var u,a=document.createElement("script");a.charset="utf-8",a.timeout=55,i.nc&&a.setAttribute("nonce",i.nc),a.src=function(t){return i.p+""+({1:"jwplayer.amp",2:"jwplayer.controls",3:"jwplayer.controls.tizen",4:"jwplayer.core",5:"jwplayer.core.controls",6:"jwplayer.core.controls.html5",7:"jwplayer.core.controls.polyfills",8:"jwplayer.core.controls.polyfills.html5",9:"jwplayer.stats",10:"polyfills.intersection-observer",11:"polyfills.webvtt",12:"provider.airplay",13:"provider.cast",14:"provider.hlsjs",15:"provider.hlsjs-alt",16:"provider.html5",17:"provider.shaka",18:"related",19:"vttparser"}[t]||t)+".js"}(t);var c=new Error;u=function(e){a.onerror=a.onload=null,clearTimeout(s);var n=r[t];if(0!==n){if(n){var i=e&&("load"===e.type?"missing":e.type),o=e&&e.target&&e.target.src;c.message="Loading chunk "+t+" failed.\n("+i+": "+o+")",c.name="ChunkLoadError",c.type=i,c.request=o,n[1](c)}r[t]=void 0}};var s=setTimeout((function(){u({type:"timeout",target:a})}),55e3);a.onerror=a.onload=u,document.head.appendChild(a)}return Promise.all(e)},i.m=t,i.c=n,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var r in t)i.d(n,r,function(e){return t[e]}.bind(null,r));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i.oe=function(t){throw console.error(t),t};var o=window.webpackJsonpjwplayer=window.webpackJsonpjwplayer||[],u=o.push.bind(o);o.push=e,o=o.slice();for(var a=0;a<o.length;a++)e(o[a]);var c=u;return i(i.s=51)}([function(t,e,n){"use strict";n.d(e,"i",(function(){return k})),n.d(e,"A",(function(){return P})),n.d(e,"E",(function(){return T})),n.d(e,"l",(function(){return _})),n.d(e,"k",(function(){return I})),n.d(e,"a",(function(){return L})),n.d(e,"b",(function(){return R})),n.d(e,"F",(function(){return B})),n.d(e,"n",(function(){return H})),n.d(e,"G",(function(){return Q})),n.d(e,"e",(function(){return W})),n.d(e,"I",(function(){return Y})),n.d(e,"m",(function(){return $})),n.d(e,"h",(function(){return J})),n.d(e,"p",(function(){return K})),n.d(e,"c",(function(){return G})),n.d(e,"H",(function(){return it})),n.d(e,"q",(function(){return at})),n.d(e,"g",(function(){return ct})),n.d(e,"j",(function(){return st})),n.d(e,"C",(function(){return lt})),n.d(e,"w",(function(){return dt})),n.d(e,"t",(function(){return gt})),n.d(e,"v",(function(){return mt})),n.d(e,"x",(function(){return bt})),n.d(e,"s",(function(){return yt})),n.d(e,"u",(function(){return jt})),n.d(e,"r",(function(){return wt})),n.d(e,"y",(function(){return Ot})),n.d(e,"o",(function(){return Ct})),n.d(e,"d",(function(){return Pt})),n.d(e,"D",(function(){return xt})),n.d(e,"B",(function(){return St})),n.d(e,"z",(function(){return Et}));var r=n(18),i={},o=Array.prototype,u=Object.prototype,a=Function.prototype,c=o.slice,s=o.concat,l=u.toString,f=u.hasOwnProperty,d=o.map,p=o.reduce,h=o.forEach,v=o.filter,g=o.every,m=o.some,b=o.indexOf,y=Array.isArray,j=Object.keys,w=a.bind,O=window.isFinite,k=function(t,e,n){var r,o;if(null==t)return t;if(h&&t.forEach===h)t.forEach(e,n);else if(t.length===+t.length){for(r=0,o=t.length;r<o;r++)if(e.call(n,t[r],r,t)===i)return}else{var u=ot(t);for(r=0,o=u.length;r<o;r++)if(e.call(n,t[u[r]],u[r],t)===i)return}return t},C=k,P=function(t,e,n){var r=[];return null==t?r:d&&t.map===d?t.map(e,n):(k(t,(function(t,i,o){r.push(e.call(n,t,i,o))})),r)},x=P,S="Reduce of empty array with no initial value",T=function(t,e,n,r){var i=arguments.length>2;if(null==t&&(t=[]),p&&t.reduce===p)return r&&(e=G(e,r)),i?t.reduce(e,n):t.reduce(e);if(k(t,(function(t,o,u){i?n=e.call(r,n,t,o,u):(n=t,i=!0)})),!i)throw new TypeError(S);return n},E=T,A=T,_=function(t,e,n){var r;return R(t,(function(t,i,o){if(e.call(n,t,i,o))return r=t,!0})),r},F=_,I=function(t,e,n){var r=[];return null==t?r:v&&t.filter===v?t.filter(e,n):(k(t,(function(t,i,o){e.call(n,t,i,o)&&r.push(t)})),r)},M=I,L=function(t,e,n){e||(e=Ct);var r=!0;return null==t?r:g&&t.every===g?t.every(e,n):(k(t,(function(t,o,u){if(!(r=r&&e.call(n,t,o,u)))return i})),!!r)},N=L,R=function(t,e,n){e||(e=Ct);var r=!1;return null==t?r:m&&t.some===m?t.some(e,n):(k(t,(function(t,o,u){if(r||(r=e.call(n,t,o,u)))return i})),!!r)},D=R,B=function(t){return null==t?0:t.length===+t.length?t.length:ot(t).length},q=function(t,e){var n;return function(){return--t>0&&(n=e.apply(this,arguments)),t<=1&&(e=null),n}},z=function(t){return null==t?Ct:gt(t)?t:xt(t)},V=function(t){return function(e,n,r){var i={};return n=z(n),k(e,(function(o,u){var a=n.call(r,o,u,e);t(i,a,o)})),i}},H=V((function(t,e,n){kt(t,e)?t[e].push(n):t[e]=[n]})),U=V((function(t,e,n){t[e]=n})),Q=function(t,e,n,r){for(var i=(n=z(n)).call(r,e),o=0,u=t.length;o<u;){var a=o+u>>>1;n.call(r,t[a])<i?o=a+1:u=a}return o},W=function(t,e){return null!=t&&(t.length!==+t.length&&(t=ut(t)),K(t,e)>=0)},X=W,Y=function(t,e){return I(t,St(e))},$=function(t,e){return _(t,St(e))},J=function(t){var e=s.apply(o,c.call(arguments,1));return I(t,(function(t){return!W(e,t)}))},K=function(t,e,n){if(null==t)return-1;var r=0,i=t.length;if(n){if("number"!=typeof n)return t[r=Q(t,e)]===e?r:-1;r=n<0?Math.max(0,i+n):n}if(b&&t.indexOf===b)return t.indexOf(e,n);for(;r<i;r++)if(t[r]===e)return r;return-1},Z=function(){},G=function(t,e){var n,r;if(w&&t.bind===w)return w.apply(t,c.call(arguments,1));if(!gt(t))throw new TypeError;return n=c.call(arguments,2),r=function(){if(!(this instanceof r))return t.apply(e,n.concat(c.call(arguments)));Z.prototype=t.prototype;var i=new Z;Z.prototype=null;var o=t.apply(i,n.concat(c.call(arguments)));return Object(o)===o?o:i}},tt=function(t){var e=c.call(arguments,1);return function(){for(var n=0,r=e.slice(),i=0,o=r.length;i<o;i++)kt(r[i],"partial")&&(r[i]=arguments[n++]);for(;n<arguments.length;)r.push(arguments[n++]);return t.apply(this,r)}},et=tt(q,2),nt=function(t,e){var n=c.call(arguments,2);return setTimeout((function(){return t.apply(null,n)}),e)},rt=tt(nt,{partial:tt},1),it=function(t,e,n){var r,i,o,u=null,a=0;n||(n={});var c=function(){a=!1===n.leading?0:Tt(),u=null,o=t.apply(r,i),r=i=null};return function(){var s=Tt();a||!1!==n.leading||(a=s);var l=e-(s-a);return r=this,i=arguments,l<=0?(clearTimeout(u),u=null,a=s,o=t.apply(r,i),r=i=null):u||!1===n.trailing||(u=setTimeout(c,l)),o}},ot=function(t){if(!dt(t))return[];if(j)return j(t);var e=[];for(var n in t)kt(t,n)&&e.push(n);return e},ut=function(t){for(var e=ot(t),n=ot.length,r=Array(n),i=0;i<n;i++)r[i]=t[e[i]];return r},at=function(t){for(var e={},n=ot(t),r=0,i=n.length;r<i;r++)e[t[n[r]]]=n[r];return e},ct=function(t){return k(c.call(arguments,1),(function(e){if(e)for(var n in e)void 0===t[n]&&(t[n]=e[n])})),t},st=Object.assign||function(t){return k(c.call(arguments,1),(function(e){if(e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})),t},lt=function(t){var e={},n=s.apply(o,c.call(arguments,1));return k(n,(function(n){n in t&&(e[n]=t[n])})),e},ft=y||function(t){return"[object Array]"==l.call(t)},dt=function(t){return t===Object(t)},pt=[];k(["Function","String","Number","Date","RegExp"],(function(t){pt[t]=function(e){return l.call(e)=="[object "+t+"]"}})),pt.Function=function(t){return"function"==typeof t};var ht=pt.Date,vt=pt.RegExp,gt=pt.Function,mt=pt.Number,bt=pt.String,yt=function(t){return O(t)&&!jt(parseFloat(t))},jt=function(t){return mt(t)&&t!=+t},wt=function(t){return!0===t||!1===t||"[object Boolean]"==l.call(t)},Ot=function(t){return void 0===t},kt=function(t,e){return f.call(t,e)},Ct=function(t){return t},Pt=function(t){return function(){return t}},xt=function(t){return function(e){return e[t]}},St=function(t){return function(e){if(e===t)return!0;for(var n in t)if(t[n]!==e[n])return!1;return!0}},Tt=r.a,Et=function(t){return mt(t)&&!jt(t)};e.f={after:function(t,e){return function(){if(--t<1)return e.apply(this,arguments)}},all:L,any:R,before:q,bind:G,clone:function(t){return dt(t)?ft(t)?t.slice():st({},t):t},collect:x,compact:function(t){return I(t,Ct)},constant:Pt,contains:W,debounce:function(t,e){var n;return void 0===e&&(e=100),function(){for(var r=this,i=arguments.length,o=new Array(i),u=0;u<i;u++)o[u]=arguments[u];clearTimeout(n),n=setTimeout((function(){t.apply(r,o)}),e)}},defaults:ct,defer:rt,delay:nt,detect:F,difference:J,each:k,every:N,extend:st,filter:I,find:_,findWhere:$,foldl:E,forEach:C,groupBy:H,has:kt,identity:Ct,include:X,indexBy:U,indexOf:K,inject:A,invert:at,isArray:ft,isBoolean:wt,isDate:ht,isFinite:yt,isFunction:gt,isNaN:jt,isNull:function(t){return null===t},isNumber:mt,isObject:dt,isRegExp:vt,isString:bt,isUndefined:Ot,isValidNumber:Et,keys:ot,last:function(t,e,n){if(null!=t)return null==e||n?t[t.length-1]:c.call(t,Math.max(t.length-e,0))},map:P,matches:St,max:function(t,e,n){if(!e&&ft(t)&&t[0]===+t[0]&&t.length<65535)return Math.max.apply(Math,t);var r=-1/0,i=-1/0;return k(t,(function(t,o,u){var a=e?e.call(n,t,o,u):t;a>i&&(r=t,i=a)})),r},memoize:function(t,e){var n={};return e||(e=Ct),function(){var r=e.apply(this,arguments);return kt(n,r)?n[r]:n[r]=t.apply(this,arguments)}},now:Tt,omit:function(t){var e={},n=s.apply(o,c.call(arguments,1));for(var r in t)W(n,r)||(e[r]=t[r]);return e},once:et,partial:tt,pick:lt,pluck:function(t,e){return P(t,xt(e))},property:xt,propertyOf:function(t){return null==t?function(){}:function(e){return t[e]}},reduce:T,reject:function(t,e,n){return I(t,(function(t,r,i){return!e.call(n,t,r,i)}),n)},result:function(t,e){if(null!=t){var n=t[e];return gt(n)?n.call(t):n}},select:M,size:B,some:D,sortedIndex:Q,throttle:it,where:Y,without:function(t){return J(t,c.call(arguments,1))}}},function(t,e,n){"use strict";n.d(e,"x",(function(){return i})),n.d(e,"w",(function(){return o})),n.d(e,"v",(function(){return u})),n.d(e,"s",(function(){return a})),n.d(e,"t",(function(){return c})),n.d(e,"r",(function(){return s})),n.d(e,"b",(function(){return l})),n.d(e,"d",(function(){return f})),n.d(e,"u",(function(){return d})),n.d(e,"e",(function(){return p})),n.d(e,"i",(function(){return h})),n.d(e,"a",(function(){return v})),n.d(e,"f",(function(){return g})),n.d(e,"c",(function(){return m})),n.d(e,"g",(function(){return b})),n.d(e,"h",(function(){return y})),n.d(e,"m",(function(){return j})),n.d(e,"j",(function(){return w})),n.d(e,"k",(function(){return O})),n.d(e,"l",(function(){return k})),n.d(e,"n",(function(){return C})),n.d(e,"o",(function(){return P})),n.d(e,"p",(function(){return x})),n.d(e,"q",(function(){return S})),n.d(e,"z",(function(){return T})),n.d(e,"y",(function(){return E})),n.d(e,"A",(function(){return A}));var r=n(0),i=1e5,o=100001,u=100002,a=101e3,c=102e3,s=102700,l=200001,f=202e3,d=104e3,p=203e3,h=203640,v=203700,g=204e3,m=306e3,b=308e3,y=308640,j="cantPlayVideo",w="badConnection",O="cantLoadPlayer",k="cantPlayInBrowser",C="liveStreamDown",P="protectedContent",x="technicalError",S=function(){function t(t,e,n){this.code=Object(r.z)(e)?e:0,this.sourceError=n||null,t&&(this.key=t)}return t.logMessage=function(t){var e=t%1e3,n=Math.floor((t-e)/1e3),r=t.toString();return e>=400&&e<600&&(r=n+"400-"+n+"599"),"JW Player "+(t>299999&&t<4e5?"Warning":"Error")+" "+t+". For more information see https://developer.jwplayer.com/jw-player/docs/developer-guide/api/errors-reference#"+r},t}();function T(t,e,n){return n instanceof S&&n.code?n:new S(t,e,n)}function E(t,e){var n=T(x,e,t);return n.code=(t&&t instanceof S&&t.code||0)+e,n}function A(t){var e=t.name,n=t.message;switch(e){case"AbortError":return/pause/.test(n)?303213:/load/.test(n)?303212:303210;case"NotAllowedError":return 303220;case"NotSupportedError":return 303230;default:return 303200}}},function(t,e,n){"use strict";n.d(e,"i",(function(){return o})),n.d(e,"e",(function(){return u})),n.d(e,"j",(function(){return a})),n.d(e,"a",(function(){return c})),n.d(e,"b",(function(){return s})),n.d(e,"g",(function(){return l})),n.d(e,"d",(function(){return f})),n.d(e,"f",(function(){return d})),n.d(e,"h",(function(){return p})),n.d(e,"c",(function(){return h}));var r=n(0),i=window.parseFloat;function o(t){return t.replace(/^\s+|\s+$/g,"")}function u(t,e,n){for(t=""+t,n=n||"0";t.length<e;)t=n+t;return t}function a(t,e){for(var n=t.attributes,r=0;r<n.length;r++)if(n[r].name&&n[r].name.toLowerCase()===e.toLowerCase())return n[r].value.toString();return""}function c(t){if(!t||"rtmp"===t.substr(0,4))return"";var e=/[(,]format=(m3u8|mpd)-/i.exec(t);if(e)return e[1];var n=t.replace(/^.+?\.(\w+)(?:[;].*)?(?:[?#].*)?$/,"$1");return n!==t?n.toLowerCase():(t=t.split("?")[0].split("#")[0]).lastIndexOf(".")>-1?t.substr(t.lastIndexOf(".")+1,t.length).toLowerCase():""}function s(t){var e=(t/60|0)%60,n=t%60;return u((t/3600|0).toString(),2)+":"+u(e.toString(),2)+":"+u(n.toFixed(3),6)}function l(t,e){if(!t)return 0;if(Object(r.z)(t))return t;var n=t.replace(",","."),o=n.slice(-1),u=n.split(":"),a=u.length,c=0;if("s"===o)c=i(n);else if("m"===o)c=60*i(n);else if("h"===o)c=3600*i(n);else if(a>1){var s=a-1;4===a&&(e&&(c=i(u[s])/e),s-=1),c+=i(u[s]),c+=60*i(u[s-1]),a>=3&&(c+=3600*i(u[s-2]))}else c=i(n);return Object(r.z)(c)?c:0}function f(t,e,n){if(Object(r.x)(t)&&"%"===t.slice(-1)){var o=i(t);return e&&Object(r.z)(e)&&Object(r.z)(o)?e*o/100:null}return l(t,n)}function d(t,e){return t.map((function(t){return e+t}))}function p(t,e){return t.map((function(t){return t+e}))}function h(t){return!!t&&Object(r.x)(t)&&"%"===t.slice(-1)}},function(t,e,n){"use strict";n.d(e,"jb",(function(){return r})),n.d(e,"mb",(function(){return i})),n.d(e,"kb",(function(){return o})),n.d(e,"ob",(function(){return u})),n.d(e,"pb",(function(){return a})),n.d(e,"lb",(function(){return c})),n.d(e,"nb",(function(){return s})),n.d(e,"qb",(function(){return l})),n.d(e,"s",(function(){return f})),n.d(e,"u",(function(){return d})),n.d(e,"t",(function(){return p})),n.d(e,"o",(function(){return h})),n.d(e,"r",(function(){return v})),n.d(e,"Z",(function(){return g})),n.d(e,"W",(function(){return m})),n.d(e,"v",(function(){return b})),n.d(e,"Y",(function(){return y})),n.d(e,"w",(function(){return j})),n.d(e,"ub",(function(){return w})),n.d(e,"a",(function(){return O})),n.d(e,"b",(function(){return k})),n.d(e,"c",(function(){return C})),n.d(e,"d",(function(){return P})),n.d(e,"e",(function(){return x})),n.d(e,"f",(function(){return S})),n.d(e,"i",(function(){return T})),n.d(e,"F",(function(){return E})),n.d(e,"gb",(function(){return A})),n.d(e,"Q",(function(){return _})),n.d(e,"C",(function(){return F})),n.d(e,"B",(function(){return I})),n.d(e,"E",(function(){return M})),n.d(e,"q",(function(){return L})),n.d(e,"cb",(function(){return N})),n.d(e,"n",(function(){return R})),n.d(e,"G",(function(){return D})),n.d(e,"H",(function(){return B})),n.d(e,"N",(function(){return q})),n.d(e,"O",(function(){return z})),n.d(e,"R",(function(){return V})),n.d(e,"ib",(function(){return H})),n.d(e,"bb",(function(){return U})),n.d(e,"D",(function(){return Q})),n.d(e,"S",(function(){return W})),n.d(e,"P",(function(){return X})),n.d(e,"T",(function(){return Y})),n.d(e,"V",(function(){return $})),n.d(e,"M",(function(){return J})),n.d(e,"L",(function(){return K})),n.d(e,"K",(function(){return Z})),n.d(e,"I",(function(){return G})),n.d(e,"J",(function(){return tt})),n.d(e,"U",(function(){return et})),n.d(e,"p",(function(){return nt})),n.d(e,"y",(function(){return rt})),n.d(e,"hb",(function(){return it})),n.d(e,"db",(function(){return ot})),n.d(e,"eb",(function(){return ut})),n.d(e,"g",(function(){return at})),n.d(e,"h",(function(){return ct})),n.d(e,"rb",(function(){return st})),n.d(e,"sb",(function(){return lt})),n.d(e,"ab",(function(){return ft})),n.d(e,"A",(function(){return dt})),n.d(e,"m",(function(){return pt})),n.d(e,"l",(function(){return ht})),n.d(e,"fb",(function(){return vt})),n.d(e,"tb",(function(){return gt})),n.d(e,"z",(function(){return mt})),n.d(e,"k",(function(){return bt})),n.d(e,"X",(function(){return yt})),n.d(e,"j",(function(){return jt})),n.d(e,"x",(function(){return wt}));var r="buffering",i="idle",o="complete",u="paused",a="playing",c="error",s="loading",l="stalled",f="drag",d="dragStart",p="dragEnd",h="click",v="doubleClick",g="over",m="move",b="enter",y="out",j=c,w="warning",O="adClick",k="mediaLoaded",C="adPause",P="adPlay",x="adSkipped",S="adTime",T="autostartNotAllowed",E=o,A="ready",_="seek",F="beforePlay",I="beforeComplete",M="bufferFull",L="displayClick",N="playlistComplete",R="cast",D="mediaError",B="firstFrame",q="playAttempt",z="playAttemptFailed",V="seeked",H="setupError",U="state",Q="bufferChange",W="time",X="ratechange",Y="mediaType",$="volume",J="mute",K="metadataCueParsed",Z="meta",G="levels",tt="levelsChanged",et="visualQuality",nt="controls",rt="fullscreen",it="resize",ot="playlistItem",ut="playlist",at="audioTracks",ct="audioTrackChanged",st="subtitlesTracks",lt="subtitlesTrackChanged",ft="playbackRateChanged",dt="logoClick",pt="captionsList",ht="captionsChanged",vt="providerFirstFrame",gt="userAction",mt="instreamClick",bt="breakpoint",yt="fullscreenchange",jt="bandwidthEstimate",wt="float"},function(t,e,n){"use strict";n.d(e,"b",(function(){return i})),n.d(e,"d",(function(){return o})),n.d(e,"a",(function(){return u})),n.d(e,"c",(function(){return a}));var r=n(2);function i(t){var e="";return t&&(t.localName?e=t.localName:t.baseName&&(e=t.baseName)),e}function o(t){var e="";return t&&(t.textContent?e=Object(r.i)(t.textContent):t.text&&(e=Object(r.i)(t.text))),e}function u(t,e){return t.childNodes[e]}function a(t){return t.childNodes?t.childNodes.length:0}},function(t,e,n){"use strict";n.r(e);var r=n(6);function i(t,e){var n=t.exec(e);if(n&&n.length>1)return n[1]}n.d(e,"Browser",(function(){return a})),n.d(e,"OS",(function(){return c})),n.d(e,"Features",(function(){return s}));var o=navigator.userAgent,u=function(){};var a={get androidNative(){return Object(r.c)()},get chrome(){return Object(r.d)()},get edge(){return Object(r.e)()},get facebook(){return Object(r.g)()},get firefox(){return Object(r.f)()},get ie(){return Object(r.i)()},get msie(){return Object(r.n)()},get safari(){return Object(r.q)()},get version(){return function(t,e){var n,r,i,o;if(t.chrome)n=-1!==e.indexOf("Chrome")?e.substring(e.indexOf("Chrome")+7):e.substring(e.indexOf("CriOS")+6);else if(t.safari)n=e.substring(e.indexOf("Version")+8);else if(t.firefox)n=e.substring(e.indexOf("Firefox")+8);else if(t.edge){var u=e.indexOf("Edge");-1===u?u=e.indexOf("Edg")+4:u+=5,n=e.substring(u)}else t.ie&&(-1!==e.indexOf("rv:")?n=e.substring(e.indexOf("rv:")+3):-1!==e.indexOf("MSIE")&&(n=e.substring(e.indexOf("MSIE")+5)));return n&&(-1!==(o=n.indexOf(";"))&&(n=n.substring(0,o)),-1!==(o=n.indexOf(" "))&&(n=n.substring(0,o)),-1!==(o=n.indexOf(")"))&&(n=n.substring(0,o)),r=parseInt(n,10),i=parseInt(n.split(".")[1],10)),{version:n,major:r,minor:i}}(this,o)}},c={get android(){return Object(r.b)()},get iOS(){return Object(r.j)()},get mobile(){return Object(r.o)()},get mac(){return Object(r.p)()},get iPad(){return Object(r.k)()},get iPhone(){return Object(r.l)()},get windows(){return o.indexOf("Windows")>-1},get tizen(){return Object(r.r)()},get tizenApp(){return Object(r.s)()},get version(){return function(t,e){var n,r,o;if(t.windows)switch(n=i(/Windows(?: NT|)? ([._\d]+)/,e)){case"6.1":n="7.0";break;case"6.2":n="8.0";break;case"6.3":n="8.1"}else t.android?n=i(/Android ([._\d]+)/,e):t.iOS?n=i(/OS ([._\d]+)/,e):t.mac?n=i(/Mac OS X ([._\d]+)/,e):t.tizen&&(n=i(/Tizen ([._\d]+)/,e));if(n){r=parseInt(n,10);var u=n.split(/[._]/);u&&(o=parseInt(u[1],10))}return{version:n,major:r,minor:o}}(this,o)}},s={get flash(){return Object(r.h)()},get flashVersion(){return Object(r.a)()},get iframe(){return Object(r.m)()},get passiveEvents(){return function(){var t=!1;try{var e=Object.defineProperty({},"passive",{get:function(){return t=!0}});window.addEventListener("testPassive",u,e),window.removeEventListener("testPassive",u,e)}catch(t){}return t}()},get backgroundLoading(){return!(c.iOS||a.safari||c.tizen)}}},function(t,e,n){"use strict";function r(t){return null!==navigator.userAgent.match(t)}n.d(e,"f",(function(){return o})),n.d(e,"l",(function(){return u})),n.d(e,"k",(function(){return a})),n.d(e,"p",(function(){return c})),n.d(e,"g",(function(){return s})),n.d(e,"e",(function(){return l})),n.d(e,"n",(function(){return f})),n.d(e,"r",(function(){return d})),n.d(e,"s",(function(){return p})),n.d(e,"d",(function(){return h})),n.d(e,"i",(function(){return v})),n.d(e,"q",(function(){return g})),n.d(e,"j",(function(){return m})),n.d(e,"c",(function(){return b})),n.d(e,"b",(function(){return y})),n.d(e,"o",(function(){return j})),n.d(e,"m",(function(){return w})),n.d(e,"h",(function(){return O})),n.d(e,"a",(function(){return k}));var i=function(){return"MacIntel"===navigator.platform&&navigator.maxTouchPoints>1},o=function(){return r(/firefox\//i)},u=function(){return r(/iP(hone|od)/i)},a=function(){return r(/iPad/i)||i()},c=function(){return r(/Macintosh/i)&&!i()},s=function(){return r(/FBAV/i)},l=function(){return r(/\sEdge?\/\d+/i)},f=function(){return r(/msie/i)},d=function(){return r(/SMART-TV/)},p=function(){return d()&&!r(/SamsungBrowser/)},h=function(){return r(/\s(?:(?:Headless)?Chrome|CriOS)\//i)&&!l()&&!r(/UCBrowser/i)},v=function(){return!r(/\sEdg\/\d+/i)&&(l()||r(/trident\/.+rv:\s*11/i)||f())},g=function(){return r(/safari/i)&&!r(/(?:Chrome|CriOS|chromium|android|phantom)/i)&&!d()},m=function(){return r(/iP(hone|ad|od)/i)||i()};function b(){return!(r(/chrome\/[123456789]/i)&&!r(/chrome\/18/i)&&!o())&&y()}var y=function(){return r(/Android/i)&&!r(/Windows Phone/i)},j=function(){return m()||y()||r(/Windows Phone/i)};function w(){try{return window.self!==window.top}catch(t){return!0}}var O=function(){return!1},k=function(){return 0}},function(t,e,n){"use strict";n.d(e,"j",(function(){return s})),n.d(e,"f",(function(){return l})),n.d(e,"r",(function(){return f})),n.d(e,"k",(function(){return d})),n.d(e,"t",(function(){return p})),n.d(e,"s",(function(){return v})),n.d(e,"v",(function(){return g})),n.d(e,"e",(function(){return y})),n.d(e,"b",(function(){return j})),n.d(e,"p",(function(){return w})),n.d(e,"q",(function(){return O})),n.d(e,"w",(function(){return k})),n.d(e,"u",(function(){return C})),n.d(e,"i",(function(){return P})),n.d(e,"c",(function(){return x})),n.d(e,"h",(function(){return S})),n.d(e,"d",(function(){return T})),n.d(e,"n",(function(){return E})),n.d(e,"l",(function(){return A})),n.d(e,"o",(function(){return _})),n.d(e,"m",(function(){return F})),n.d(e,"g",(function(){return I})),n.d(e,"a",(function(){return M}));var r,i=n(0),o=n(2),u=n(5),a=window.DOMParser,c=!0;function s(t,e){return t.classList.contains(e)}function l(t){return d(t).firstChild}function f(t,e){P(t),function(t,e){if(!e)return;for(var n=document.createDocumentFragment(),r=d(e).childNodes,i=0;i<r.length;i++)n.appendChild(r[i].cloneNode(!0));t.appendChild(n)}(t,e)}function d(t){var e=function(t){r||(r=new a,c=function(){try{if(r.parseFromString("","text/html"))return!0}catch(t){}return!1}());if(c)return r.parseFromString(t,"text/html").body;var e=document.implementation.createHTMLDocument("");t.toLowerCase().indexOf("<!doctype")>-1?e.documentElement.innerHTML=t:e.body.innerHTML=t;return e.body}(t);p(e);for(var n=e.querySelectorAll("*"),i=n.length;i--;){v(n[i])}return e}function p(t){for(var e=t.querySelectorAll("script,object,iframe,meta"),n=e.length;n--;){var r=e[n];r.parentNode.removeChild(r)}return t}var h=new RegExp(/^((((https?):\/\/)|(mailto:))(%[0-9A-Fa-f]{2}|[-()_.!~*';/?:@&=+$,A-Za-z0-9])+)([).!';/?:,][[:blank:|:blank:]])?$/);function v(t){for(var e=t.attributes,n=e.length;n--;){var r=e[n].name;if(/^on/.test(r)&&t.removeAttribute(r),/href/.test(r)){var i=e[n].value;/javascript:|javascript&colon;/.test(i)||!h.test(i)?t.removeAttribute(r):console.warn("Invalid or unsafe URL")}}return t}function g(t){return t+(t.toString().indexOf("%")>0?"":"px")}function m(t){return Object(i.x)(t.className)?t.className.split(" "):[]}function b(t,e){e=Object(o.i)(e),t.className!==e&&(t.className=e)}function y(t){return t.classList?t.classList:m(t)}function j(t,e){var n=m(t);(Array.isArray(e)?e:e.split(" ")).forEach((function(t){Object(i.e)(n,t)||n.push(t)})),b(t,n.join(" "))}function w(t,e){var n=m(t),r=Array.isArray(e)?e:e.split(" ");b(t,Object(i.h)(n,r).join(" "))}function O(t,e,n){var r=t.className||"";e.test(r)?r=r.replace(e,n):n&&(r+=" "+n),b(t,r)}function k(t,e,n){var r=s(t,e);(n=Object(i.r)(n)?n:!r)!==r&&(n?j(t,e):w(t,e))}function C(t,e,n){t.setAttribute(e,n)}function P(t){for(;t.firstChild;)t.removeChild(t.firstChild)}function x(t){var e=document.createElement("link");e.rel="stylesheet",e.href=t,document.getElementsByTagName("head")[0].appendChild(e)}function S(t){t&&P(t)}function T(t){var e={left:0,right:0,width:0,height:0,top:0,bottom:0};if(!t||!document.body.contains(t))return e;var n=t.getBoundingClientRect(),r=window.pageYOffset,i=window.pageXOffset;return n.width||n.height||n.left||n.top?(e.left=n.left+i,e.right=n.right+i,e.top=n.top+r,e.bottom=n.bottom+r,e.width=n.right-n.left,e.height=n.bottom-n.top,e):e}function E(t,e){t.insertBefore(e,t.firstChild)}function A(t){return t.nextElementSibling}function _(t){return t.previousElementSibling}function F(t,e,n){if(void 0===n&&(n={}),h.test(t)){var r=document.createElement("a");r.href=t,r.target=e,r=v(Object(i.j)(r,n)),u.Browser.firefox?r.dispatchEvent(new MouseEvent("click",{bubbles:!0,cancelable:!0,view:window})):r.click()}}function I(){var t=window.screen.orientation;return!!t&&("landscape-primary"===t.type||"landscape-secondary"===t.type)||90===window.orientation||-90===window.orientation}function M(t){return function(t){var e=document.createElement("textarea");return e.innerHTML=t,e.value}(t).replace(/&|<|>|"|''/gm,(function(t){return"&#"+t.charCodeAt(0)+";"})).replace(/&#60;(\/?)(b|strong|i|em|p|br|ul|ol|li|h.)&#62;/gim,"<$1$2>")}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return u})),n.d(e,"d",(function(){return a}));var r=n(1),i={};function o(t,e){return function(){throw new r.q(r.k,t,e)}}function u(t,e){return function(){throw new r.q(null,t,e)}}function a(){return n.e(4).then(function(t){return n(72).default}.bind(null,n)).catch(o(r.s+101))}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"c",(function(){return i})),n.d(e,"d",(function(){return o})),n.d(e,"b",(function(){return u})),n.d(e,"e",(function(){return a})),n.d(e,"f",(function(){return c}));var r=function(){function t(){}var e=t.prototype;return e.on=function(t,e,n){if(!l(this,"on",t,[e,n])||!e)return this;var r=this._events||(this._events={});return(r[t]||(r[t]=[])).push({callback:e,context:n}),this},e.once=function(t,e,n){if(!l(this,"once",t,[e,n])||!e)return this;var r=0,i=this,o=function n(){r++||(i.off(t,n),e.apply(this,arguments))};return o._callback=e,this.on(t,o,n)},e.off=function(t,e,n){if(!this._events||!l(this,"off",t,[e,n]))return this;if(!t&&!e&&!n)return delete this._events,this;for(var r=t?[t]:Object.keys(this._events),i=0,o=r.length;i<o;i++){t=r[i];var u=this._events[t];if(u){var a=this._events[t]=[];if(e||n)for(var c=0,s=u.length;c<s;c++){var f=u[c];(e&&e!==f.callback&&e!==f.callback._callback||n&&n!==f.context)&&a.push(f)}a.length||delete this._events[t]}}return this},e.trigger=function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];if(!this._events)return this;if(!l(this,"trigger",t,n))return this;var i=this._events[t],o=this._events.all;return i&&f(i,n,this),o&&f(o,arguments,this),this},e.triggerSafe=function(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];if(!this._events)return this;if(!l(this,"trigger",t,n))return this;var i=this._events[t],o=this._events.all;return i&&f(i,n,this,t),o&&f(o,arguments,this,t),this},t}(),i=r.prototype.on,o=r.prototype.once,u=r.prototype.off,a=r.prototype.trigger,c=r.prototype.triggerSafe;r.on=i,r.once=o,r.off=u,r.trigger=a;var s=/\s+/;function l(t,e,n,r){if(!n)return!0;if("object"==typeof n){for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&t[e].apply(t,[i,n[i]].concat(r));return!1}if(s.test(n)){for(var o=n.split(s),u=0,a=o.length;u<a;u++)t[e].apply(t,[o[u]].concat(r));return!1}return!0}function f(t,e,n,r){for(var i=-1,o=t.length;++i<o;){var u=t[i];if(r)try{u.callback.apply(u.context||n,e)}catch(t){console.log('Error in "'+r+'" event handler:',t)}else u.callback.apply(u.context||n,e)}}},function(t,e,n){"use strict";n.r(e),n.d(e,"exists",(function(){return i})),n.d(e,"isHTTPS",(function(){return o})),n.d(e,"isFileProtocol",(function(){return u})),n.d(e,"isRtmp",(function(){return a})),n.d(e,"isYouTube",(function(){return c})),n.d(e,"typeOf",(function(){return s})),n.d(e,"isDeepKeyCompliant",(function(){return l}));var r=window.location.protocol;function i(t){switch(typeof t){case"string":return t.length>0;case"object":return null!==t;case"undefined":return!1;default:return!0}}function o(){return"https:"===r}function u(){return"file:"===r}function a(t,e){return 0===t.indexOf("rtmp:")||"rtmp"===e}function c(t,e){return"youtube"===e||/^(http|\/\/).*(youtube\.com|youtu\.be)\/.+/.test(t)}function s(t){if(null===t)return"null";var e=typeof t;return"object"===e&&Array.isArray(t)?"array":e}function l(t,e,n){var r=Object.keys(t);return Object.keys(e).length>=r.length&&r.every((function(r){var i=t[r],o=e[r];return i&&"object"==typeof i?!(!o||"object"!=typeof o)&&l(i,o,n):n(r,t)}))}},function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return c})),n.d(e,"d",(function(){return s})),n.d(e,"e",(function(){return d})),n.d(e,"c",(function(){return p}));var r,i=n(2),o=n(41),u=n.n(o),a=u.a.clear;function c(t,e,n,r){n=n||"all-players";var i="";if("object"==typeof e){var o=document.createElement("div");s(o,e);var a=o.style.cssText;Object.prototype.hasOwnProperty.call(e,"content")&&a&&(a=a+' content: "'+e.content+'";'),r&&a&&(a=a.replace(/;/g," !important;")),i="{"+a+"}"}else"string"==typeof e&&(i=e);""!==i&&"{}"!==i?u.a.style([[t,t+i]],n):u.a.clear(n,t)}function s(t,e){if(null!=t){var n;void 0===t.length&&(t=[t]);var r={};for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&(r[n]=f(n,e[n]));for(var i=0;i<t.length;i++){var o=t[i],u=void 0;if(null!=o)for(n in r)Object.prototype.hasOwnProperty.call(r,n)&&(u=l(n),o.style[u]!==r[n]&&(o.style[u]=r[n]))}}}function l(t){t=t.split("-");for(var e=1;e<t.length;e++)t[e]=t[e].charAt(0).toUpperCase()+t[e].slice(1);return t.join("")}function f(t,e){return""===e||null==e?"":"string"==typeof e&&isNaN(e)?/png|gif|jpe?g/i.test(e)&&e.indexOf("url")<0?"url("+e+")":e:0===e||"z-index"===t||"opacity"===t?""+e:/color/i.test(t)?"#"+Object(i.e)(e.toString(16).replace(/^0x/i,""),6):Math.ceil(e)+"px"}function d(t,e){s(t,{transform:e})}function p(t,e){var n="rgb",i=void 0!==e&&100!==e;if(i&&(n+="a"),!r){var o=document.createElement("canvas");o.height=1,o.width=1,r=o.getContext("2d")}t?isNaN(parseInt(t,16))||(t="#"+t):t="#000000",r.clearRect(0,0,1,1),r.fillStyle=t,r.fillRect(0,0,1,1);var u=r.getImageData(0,0,1,1).data;return n+="("+u[0]+", "+u[1]+", "+u[2],i&&(n+=", "+e/100),n+")"}},function(t,e,n){"use strict";n.r(e),n.d(e,"getAbsolutePath",(function(){return o})),n.d(e,"isAbsolutePath",(function(){return u})),n.d(e,"parseXML",(function(){return a})),n.d(e,"serialize",(function(){return c})),n.d(e,"parseDimension",(function(){return s})),n.d(e,"timeFormat",(function(){return l})),n.d(e,"timeFormatAria",(function(){return f}));var r=n(10),i=n(0);function o(t,e){if(e&&Object(r.exists)(e)||(e=document.location.href),!Object(r.exists)(t))return"";if(u(t))return t;var n,i=e.substring(0,e.indexOf("://")+3),o=e.substring(i.length,e.indexOf("/",i.length+1));if(0===t.indexOf("/"))n=t.split("/");else{var a=e.split("?")[0];n=(a=a.substring(i.length+o.length+1,a.lastIndexOf("/"))).split("/").concat(t.split("/"))}for(var c=[],s=0;s<n.length;s++)n[s]&&Object(r.exists)(n[s])&&"."!==n[s]&&(".."===n[s]?c.pop():c.push(n[s]));return i+o+"/"+c.join("/")}function u(t){return/^(?:(?:https?|file):)?\/\//.test(t)}function a(t){var e=null;try{(e=(new window.DOMParser).parseFromString(t,"text/xml")).querySelector("parsererror")&&(e=null)}catch(t){}return e}function c(t){if(void 0===t)return null;if("string"==typeof t&&t.length<6){var e=t.toLowerCase();if("true"===e)return!0;if("false"===e)return!1;if(!Object(i.u)(Number(t))&&!Object(i.u)(parseFloat(t)))return Number(t)}return t}function s(t){return Object(i.z)(t)?t:""===t?0:t.lastIndexOf("%")>-1?t:parseInt(t.replace("px",""),10)}function l(t,e){if(Object(i.u)(t)&&(t=parseInt(t.toString())),Object(i.u)(t)||!isFinite(t)||t<=0&&!e)return"00:00";var n=t<0?"-":"";t=Math.abs(t);var r=Math.floor(t/3600),o=Math.floor((t-3600*r)/60),u=Math.floor(t%60);return n+(r?r+":":"")+(o<10?"0":"")+o+":"+(u<10?"0":"")+u}function f(t){if(Object(i.u)(t)&&(t=parseInt(t.toString())),Object(i.u)(t)||!isFinite(t)||t<=0)return"0 seconds";var e=Math.floor(t/3600),n=Math.floor((t-3600*e)/60),r=Math.floor(t%60);return(e?e+(e>1?" hours, ":1===e?" hour, ":""):"")+(n?n+(n>1?" minutes, ":1===n?" minute, ":""):"")+r+(1!==r?" seconds":1===r?" second":"")}},function(t,e,n){"use strict";n.d(e,"j",(function(){return p})),n.d(e,"d",(function(){return h})),n.d(e,"b",(function(){return v})),n.d(e,"e",(function(){return m})),n.d(e,"g",(function(){return y})),n.d(e,"h",(function(){return j})),n.d(e,"c",(function(){return w})),n.d(e,"f",(function(){return k})),n.d(e,"i",(function(){return C})),n.d(e,"a",(function(){return P}));var r=n(0),i=n(6),o=n(27),u=n(10),a=n(40),c={},s={zh:"Chinese",nl:"Dutch",en:"English",fr:"French",de:"German",it:"Italian",ja:"Japanese",pt:"Portuguese",ru:"Russian",es:"Spanish",el:"Greek",fi:"Finnish",id:"Indonesian",ko:"Korean",th:"Thai",vi:"Vietnamese"},l=Object(r.q)(s);function f(t){var e=d(t),n=e.indexOf("_");return-1===n?e:e.substring(0,n)}function d(t){return t.toLowerCase().replace("-","_")}function p(t){return t?Object.keys(t).reduce((function(e,n){return e[d(n)]=t[n],e}),{}):{}}function h(t){if(t)return 3===t.length?t:s[f(t)]||t}function v(t){return l[t]||""}function g(t){var e=t.querySelector("html");return e?e.getAttribute("lang"):null}function m(){var t=g(document);if(!t&&Object(i.m)())try{t=g(window.top.document)}catch(t){}return t||navigator.language||"en"}var b=["ar","da","de","el","es","fi","fr","he","id","it","ja","ko","nb","nl","nn","no","oc","pt","ro","ru","sl","sv","th","tr","vi","zh"];function y(t){return 8207===t.charCodeAt(0)||/^[\u0591-\u07FF\uFB1D-\uFDFD\uFE70-\uFEFC]/.test(t)}function j(t){return b.indexOf(f(t))>=0}function w(t,e,n){return Object(r.j)({},function(t){var e=t.advertising,n=t.related,i=t.sharing,o=t.abouttext,u=Object(r.j)({},t.localization);e&&(u.advertising=u.advertising||{},O(u.advertising,e,"admessage"),O(u.advertising,e,"cuetext"),O(u.advertising,e,"loadingAd"),O(u.advertising,e,"podmessage"),O(u.advertising,e,"skipmessage"),O(u.advertising,e,"skiptext"));"string"==typeof u.related?u.related={heading:u.related}:u.related=u.related||{};n&&O(u.related,n,"autoplaymessage");i&&(u.sharing=u.sharing||{},O(u.sharing,i,"heading"),O(u.sharing,i,"copied"));o&&O(u,t,"abouttext");var a=u.close||u.nextUpClose;a&&(u.close=a);return u}(t),e[f(n)],e[d(n)])}function O(t,e,n){var r=t[n]||e[n];r&&(t[n]=r)}function k(t){return Object(u.isDeepKeyCompliant)(a.a,t,(function(t,e){return"string"==typeof e[t]}))}function C(t,e){var n,r=c[e];if(!r){var i=t+"translations/"+(n=f(e),(/^n[bn]$/.test(n)?"no":n)+".json");c[e]=r=new Promise((function(t,n){Object(o.b)({url:i,oncomplete:t,onerror:function(t,r,i,o){c[e]=null,n(o)},responseType:"json"})}))}return r}function P(t,e){var n=Object(r.j)({},t,e);return x(n,"errors",t,e),x(n,"related",t,e),x(n,"sharing",t,e),x(n,"advertising",t,e),x(n,"shortcuts",t,e),x(n,"captionsStyles",t,e),n}function x(t,e,n,i){t[e]=Object(r.j)({},n[e],i[e])}},function(t,e,n){"use strict";e.a=[]},function(t,e,n){"use strict";e.a={debug:!1}},function(t,e,n){"use strict";n.d(e,"a",(function(){return p}));var r=n(31),i=n(5),o=n(20),u=n(0),a=n(37),c=n(22),s=Object(u.l)(r.a,Object(u.B)({name:"html5"})),l=s.supports;function f(t){var e=window.MediaSource;return Object(u.a)(t,(function(t){return!!e&&!!e.isTypeSupported&&e.isTypeSupported(t)}))}function d(t){if(t.drm)return!1;var e=t.file.indexOf(".m3u8")>-1,n="hls"===t.type||"m3u8"===t.type;if(!e&&!n)return!1;var r=i.Browser.chrome||i.Browser.firefox||i.Browser.edge||i.Browser.ie&&11===i.Browser.version.major||i.OS.tizen,o=i.Browser.safari&&(!c.a.canPlayType||!c.a.canPlayType("application/vnd.apple.mpegURL")),u=i.OS.android&&!1===t.hlsjsdefault,a=i.Browser.safari&&!!t.safarihlsjs;return f(t.mediaTypes||['video/mp4;codecs="avc1.4d400d,mp4a.40.2"'])&&(r||a||o)&&!u}s.supports=function(t,e){var n=l.apply(this,arguments);if(n&&t.drm&&"hls"===t.type){var r=Object(o.a)(e),i=r("drm");if(i&&t.drm.fairplay){var u=window.WebKitMediaKeys;return u&&u.isTypeSupported&&u.isTypeSupported("com.apple.fps.1_0","video/mp4")}return i}return n},r.a.push({name:"shaka",supports:function(t){return!(t.drm&&!Object(a.a)(t.drm))&&(!(!window.HTMLVideoElement||!window.MediaSource)&&(f(t.mediaTypes)&&("dash"===t.type||"mpd"===t.type||(t.file||"").indexOf("mpd-time-csf")>-1)))}}),r.a.unshift({name:"hlsjs",supports:function(t){return d(t)}}),r.a.unshift({name:"hlsjsAlt",supports:function(t){return t._hlsjsProgressive&&d(t)}});var p=r.a},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(32),i=n(16),o=n(57),u=n(0);n(9);function a(t){var e=t.getName().name;if(!r.a[e]){if(!Object(u.l)(i.a,Object(u.B)({name:e}))){if(!Object(u.t)(t.supports))throw new Error("Tried to register a provider with an invalid object");i.a.unshift({name:e,supports:t.supports})}0,Object(u.g)(t.prototype,o.a),r.a[e]=t}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r=Date.now||function(){return(new Date).getTime()}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i})),n.d(e,"c",(function(){return o})),n.d(e,"b",(function(){return u}));var r=n(38),i=r.a,o=r.c;function u(t){var e=Object(r.b)(t);if(!t)return e;switch(Object(r.c)(t)){case"jwpsrv":e=305001;break;case"googima":e=305002;break;case"vast":e=305003;break;case"freewheel":e=305004;break;case"dai":e=305005;break;case"gapro":e=305006;break;case"bidding":e=305007}return e}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));function r(t){var e={setup:["free","starter","business","premium","enterprise","developer","ads","unlimited","trial","platinum"],drm:["enterprise","developer","ads","unlimited","trial"],ads:["ads","unlimited","trial","platinum","enterprise","developer","business"],jwpsrv:["free","starter","business","premium","enterprise","developer","ads","trial","platinum","invalid"],discovery:["ads","enterprise","developer","trial","unlimited"]};return function(n){return e[n]&&e[n].indexOf(t)>-1}}},function(t,e,n){"use strict";n.r(e),n.d(e,"getScriptPath",(function(){return o})),n.d(e,"repo",(function(){return u})),n.d(e,"versionCheck",(function(){return a})),n.d(e,"loadFrom",(function(){return c}));var r=n(29),i=n(10),o=function(t){for(var e=document.getElementsByTagName("script"),n=0;n<e.length;n++){var r=e[n].src;if(r){var i=r.lastIndexOf("/"+t);if(i>=0)return r.substr(0,i+1)}}return""},u=function(){var t="//ssl.p.jwpcdn.com/player/v/8.23.1/";return""+(Object(i.isFileProtocol)()?"https:":"")+t},a=function(t){var e=("0"+t).split(/\W/),n=r.a.split(/\W/),i=parseFloat(e[0]),o=parseFloat(n[0]);return!(i>o)&&!(i===o&&parseFloat("0"+e[1])>parseFloat(n[1]))},c=function(){return u()}},function(t,e,n){"use strict";var r=document.createElement("video");e.a=r},function(t,e,n){"use strict";var r=n(0),i={none:!0,metadata:!0,auto:!0};function o(t,e){return i[t]?t:i[e]?e:"metadata"}var u=n(28),a=n(33),c=n(42),s=n(1);n.d(e,"b",(function(){return l})),n.d(e,"e",(function(){return f})),n.d(e,"d",(function(){return d})),n.d(e,"f",(function(){return p})),n.d(e,"c",(function(){return h}));function l(t,e,n){var i=Object(r.j)({},n);return delete i.playlist,t.map((function(t){return d(e,t,i)})).filter((function(t){return!!t}))}function f(t){if(!Array.isArray(t)||0===t.length)throw new s.q(s.m,630)}function d(t,e,n){var i=t.getProviders(),u=t.get("preload"),a=Object(r.j)({},e);if(a.preload=o(e.preload,u),a.allSources=v(a,t),a.sources=g(a.allSources,i),a.sources.length)return a.file=a.sources[0].file,a.feedData=n,function(t){var e=t.sources[0].liveSyncDuration;e&&(t.liveSyncDuration=t.dvrSeekLimit=e);return t}(a)}function p(t,e){var n=(parseInt(t,10)||0)%e;return n<0&&(n+=e),n}var h=function(t,e){return g(v(t,e),e.getProviders())};function v(t,e){var n=e.attributes,r=t.sources,i=t.allSources,u=t.preload,c=t.drm,s=m(t.withCredentials,n.withCredentials);return(i||r).map((function(e){if(e!==Object(e))return null;b(e,n,"androidhls"),b(e,n,"hlsjsdefault"),b(e,n,"safarihlsjs"),function(t,e,n){if(t.liveSyncDuration)return;var r=e.liveSyncDuration?e:n;b(t,r,"liveSyncDuration")}(e,t,n),b(e,n,"_hlsjsProgressive"),e.preload=o(e.preload,u);var r=e.drm||c||n.drm;r&&(e.drm=r);var i=m(e.withCredentials,s);return void 0!==i&&(e.withCredentials=i),Object(a.a)(e)})).filter((function(t){return!!t}))}function g(t,e){e&&e.choose||(e=new c.a);var n=function(t,e){for(var n=0;n<t.length;n++){var r=t[n],i=e.choose(r).providerToCheck;if(i)return{type:r.type,provider:i}}return null}(t,e);if(!n)return[];var r=n.provider,i=n.type;return t.filter((function(t){return t.type===i&&e.providerSupports(r,t)}))}function m(t,e){return void 0===t?e:t}function b(t,e,n){n in e&&(t[n]=e[n])}e.a=function(t){return(Array.isArray(t)?t:[t]).map(u.a)}},function(t,e,n){"use strict";var r=n(0),i=n(9),o=n(3),u={};function a(t){var e=document.createElement("link");return e.type="text/css",e.rel="stylesheet",e.href=t,e}function c(t,e){var n=document.createElement("script");return n.type="text/javascript",n.charset="utf-8",n.async=!0,n.timeout=e||45e3,n.src=t,n}var s=function(t,e,n){var r=this,i=0;function s(t){i=2,r.trigger(o.w,t).off()}function l(t){i=3,r.trigger(o.kb,t).off()}this.getStatus=function(){return i},this.load=function(){var r=u[t];return 0!==i||(r&&r.then(l).catch(s),i=1,r=new Promise((function(r,i){var o=(e?a:c)(t,n),u=function(){o.onerror=o.onload=null,clearTimeout(d)},f=function(t){u(),s(t),i(t)},d=setTimeout((function(){f(new Error("Network timeout "+t))}),45e3);o.onerror=function(){f(new Error("Failed to load "+t))},o.onload=function(t){u(),l(t),r(t)};var p=document.getElementsByTagName("head")[0]||document.documentElement;p.insertBefore(o,p.firstChild)})),u[t]=r),r}};Object(r.j)(s.prototype,i.a),e.a=s},function(t,e,n){"use strict";n.d(e,"a",(function(){return a}));var r=n(48),i=n(20),o=n(45),u=n(1),a=100013;e.b=function(t){var e,n,c;try{var s=Object(r.a)(t||"",Object(o.a)("NDh2aU1Cb0NHRG5hcDFRZQ==")).split("/");if("pro"===(e=s[0])&&(e="premium"),Object(i.a)(e)("setup")||(e="invalid"),s.length>2){n=s[1];var l=parseInt(s[2]);l>0&&(c=new Date).setTime(l)}}catch(t){e="invalid"}this.edition=function(){return e},this.token=function(){return n},this.expiration=function(){return c},this.duration=function(){return c?c.getTime()-(new Date).getTime():0},this.error=function(){var r;return void 0===t?r=100011:"invalid"!==e&&n?this.duration()<0&&(r=a):r=100012,r?new u.q(u.k,r):null}}},function(t,e,n){"use strict";var r=n(1),i=n(19),o=function(){this.load=function(t,e,n,o){return n&&"object"==typeof n?Promise.all(Object.keys(n).filter((function(t){return t})).map((function(u){var a=n[u];return e.setupPlugin(u).then((function(e){if(!o.attributes._destroyed)return Object(i.a)(e,a,t)})).catch((function(t){return e.removePlugin(u),t.code?t:new r.q(null,Object(i.b)(u),t)}))}))):Promise.resolve()}},u=n(58),a=n(47),c={},s=function(){function t(){}var e=t.prototype;return e.setupPlugin=function(t){var e=this.getPlugin(t);return e?(e.url!==t&&Object(a.a)('JW Plugin "'+Object(i.c)(t)+'" already loaded from "'+e.url+'". Ignoring "'+t+'."'),e.promise):this.addPlugin(t).load()},e.addPlugin=function(t){var e=Object(i.c)(t),n=c[e];return n||(n=new u.a(t),c[e]=n),n},e.getPlugin=function(t){return c[Object(i.c)(t)]},e.removePlugin=function(t){delete c[Object(i.c)(t)]},e.getPlugins=function(){return c},t}();n.d(e,"b",(function(){return f})),n.d(e,"a",(function(){return d}));var l=new s,f=function(t,e,n){var r=l.addPlugin(t);r.js||r.registerPlugin(t,e,n)};function d(t,e){var n=t.get("plugins");return window.jwplayerPluginJsonp=f,(t.pluginLoader=t.pluginLoader||new o).load(e,l,n,t).then((function(e){if(!t.attributes._destroyed)return delete window.jwplayerPluginJsonp,e}))}},function(t,e,n){"use strict";n.d(e,"b",(function(){return c})),n.d(e,"a",(function(){return s}));var r=n(0),i=n(12),o=n(10),u=n(1),a=function(){};function c(t,e,n,d){var p;t===Object(t)&&(t=(d=t).url);var h=Object(r.j)({xhr:null,url:t,withCredentials:!1,retryWithoutCredentials:!1,timeout:6e4,timeoutId:-1,oncomplete:e||a,onerror:n||a,mimeType:d&&!d.responseType?"text/xml":"",requireValidXML:!1,responseType:d&&d.plainText?"text":"",useDomParser:!1,requestFilter:null},d),v=function(t,e){return function(t,n){var i=t.currentTarget||e.xhr;if(clearTimeout(e.timeoutId),e.retryWithoutCredentials&&e.xhr.withCredentials)return s(i),void c(Object(r.j)({},e,{xhr:null,withCredentials:!1,retryWithoutCredentials:!1}));!n&&i.status>=400&&i.status<600&&(n=i.status),l(e,n?u.m:u.p,n||6,t)}}(0,h);if("XMLHttpRequest"in window){if(p=h.xhr=h.xhr||new window.XMLHttpRequest,"function"==typeof h.requestFilter){var g;try{g=h.requestFilter({url:t,xhr:p})}catch(t){return v(t,5),p}g&&"open"in g&&"send"in g&&(p=h.xhr=g)}p.onreadystatechange=function(t){return function(e){var n=e.currentTarget||t.xhr;if(4===n.readyState){clearTimeout(t.timeoutId);var a=n.status;if(a>=400)return void l(t,u.m,a<600?a:6);if(200===a)return function(t){return function(e){var n=e.currentTarget||t.xhr;if(clearTimeout(t.timeoutId),t.responseType){if("json"===t.responseType)return function(t,e){if(!t.response||"string"==typeof t.response&&'"'!==t.responseText.substr(1))try{t=Object(r.j)({},t,{response:JSON.parse(t.responseText)})}catch(t){return void l(e,u.m,611,t)}return e.oncomplete(t)}(n,t)}else{var o,a=n.responseXML;if(a)try{o=a.firstChild}catch(t){}if(a&&o)return f(n,a,t);if(t.useDomParser&&n.responseText&&!a&&(a=Object(i.parseXML)(n.responseText))&&a.firstChild)return f(n,a,t);if(t.requireValidXML)return void l(t,u.m,602)}t.oncomplete(n)}}(t)(e);0===a&&Object(o.isFileProtocol)()&&!/^[a-z][a-z0-9+.-]*:/.test(t.url)&&l(t,u.m,7)}}}(h),p.onerror=v,"overrideMimeType"in p?h.mimeType&&p.overrideMimeType(h.mimeType):h.useDomParser=!0;try{t=t.replace(/#.*$/,""),p.open("GET",t,!0)}catch(t){return v(t,3),p}if(h.responseType)try{p.responseType=h.responseType}catch(t){}h.timeout&&(h.timeoutId=setTimeout((function(){s(p),l(h,u.p,1)}),h.timeout),p.onabort=function(){clearTimeout(h.timeoutId)});try{h.withCredentials&&"withCredentials"in p&&(p.withCredentials=!0),p.send()}catch(t){v(t,4)}return p}l(h,u.p,2)}function s(t){t.onload=null,t.onprogress=null,t.onreadystatechange=null,t.onerror=null,"abort"in t&&t.abort()}function l(t,e,n,r){t.onerror(e,t.url,t.xhr,new u.q(e,n,r))}function f(t,e,n){var i=e.documentElement;if(!n.requireValidXML||"parsererror"!==i.nodeName&&!i.getElementsByTagName("parsererror").length)return t.responseXML||(t=Object(r.j)({},t,{responseXML:e})),n.oncomplete(t);l(n,u.m,601)}},function(t,e,n){"use strict";var r=n(0),i=n(33),o=["captions","metadata","thumbnails","chapters"];var u=function(t){if(t&&t.file){var e,n=Object(r.j)({},{kind:"captions",default:!1},t);return n.kind=(e=n.kind,-1!==o.indexOf(e)?n.kind:"captions"),n.default=!!n.default,n}},a=n(35),c=Array.isArray;e.a=function(t){c((t=t||{}).tracks)||delete t.tracks;var e=Object(r.j)({},{sources:[],tracks:[],minDvrWindow:a.b},t);e.sources!==Object(e.sources)||c(e.sources)||(e.sources=[Object(i.a)(e.sources)]),c(e.sources)&&0!==e.sources.length||(t.levels?e.sources=t.levels:e.sources=[Object(i.a)(t)]);for(var n=0;n<e.sources.length;n++){var o=e.sources[n];if(o){var s=o.default;o.default=!!s&&"true"===s.toString(),e.sources[n].label||(e.sources[n].label=n.toString()),e.sources[n]=Object(i.a)(e.sources[n])}}return e.sources=e.sources.filter((function(t){return!!t})),c(e.tracks)||(e.tracks=[]),c(e.captions)&&(e.tracks=e.tracks.concat(e.captions),delete e.captions),e.tracks=e.tracks.map(u).filter((function(t){return!!t})),e}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r="8.23.1+commercial_v8-23-1.476.commercial.1d2aad6.hlsjs..hlsjsalt..jwplayer.e48cc6a.dai.1f98a0b.freewheel.20bc668.googima.b98d228.googimanvmp.106f6b4.headerbidding.ec72a89.vast.9d030c5.analytics.d52963c.analyticskraken.5483d88.gapro.141397a"},function(t,e,n){"use strict";var r=n(0),i=n(18),o=window.performance||{timing:{}},u=o.timing.navigationStart||Object(i.a)();function a(){return u+o.now()}"now"in o||(o.now=function(){return Object(i.a)()-u});var c=function(){function t(){this.startTimes={},this.sum={},this.counts={},this.ticks={}}var e=t.prototype;return e.start=function(t){this.startTimes[t]=a(),this.counts[t]=this.counts[t]+1||1},e.end=function(t){if(this.startTimes[t]){var e=a()-this.startTimes[t];delete this.startTimes[t],this.sum[t]=this.sum[t]+e||e}},e.dump=function(){var t=Object(r.j)({},this.sum);for(var e in this.startTimes)if(Object.prototype.hasOwnProperty.call(this.startTimes,e)){var n=a()-this.startTimes[e];t[e]=t[e]+n||n}return{counts:Object(r.j)({},this.counts),sums:t,events:Object(r.j)({},this.ticks)}},e.tick=function(t){this.ticks[t]=a()},e.clear=function(t){delete this.ticks[t]},e.between=function(t,e){return this.ticks[e]&&this.ticks[t]?this.ticks[e]-this.ticks[t]:null},t}();e.a=c},function(t,e,n){"use strict";n.d(e,"a",(function(){return a})),n.d(e,"b",(function(){return c}));var r=n(65),i=n(10),o=n(22),u={aac:"audio/mp4",mp4:"video/mp4",f4v:"video/mp4",m4v:"video/mp4",mov:"video/mp4",mp3:"audio/mpeg",mpeg:"audio/mpeg",ogv:"video/ogg",ogg:"video/ogg",oga:"video/ogg",vorbis:"video/ogg",webm:"video/webm",f4a:"video/aac",m3u8:"application/vnd.apple.mpegurl",m3u:"application/vnd.apple.mpegurl",hls:"application/vnd.apple.mpegurl"},a=[{name:"html5",supports:c}];function c(t){if(!o.a||!o.a.canPlayType)return!1;if(!1===Object(r.a)(t))return!1;var e=t.file,n=t.type;if(Object(i.isRtmp)(e,n))return!1;var a=t.mimeType||u[n];if(!a)return!1;var c=t.mediaTypes;return c&&c.length&&(a=[a].concat(c.slice()).join("; ")),!!o.a.canPlayType(a)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r={}},function(t,e,n){"use strict";var r=n(0),i=n(10),o=n(2);e.a=function(t){if(t&&t.file){var e=Object(r.j)({},{default:!1,type:""},t);e.file=Object(o.i)(""+e.file);var n=/^[^/]+\/(?:x-)?([^/]+)$/,u=e.type;if(n.test(u)&&(e.mimeType=u,e.type=u.replace(n,"$1")),Object(i.isYouTube)(e.file)?e.type="youtube":Object(i.isRtmp)(e.file)?e.type="rtmp":e.type||(e.type=Object(o.a)(e.file)),e.type){switch(e.type){case"m3u8":case"vnd.apple.mpegurl":e.type="hls";break;case"dash+xml":e.type="dash";break;case"m4a":e.type="aac";break;case"smil":e.type="rtmp"}return Object.keys(e).forEach((function(t){""===e[t]&&delete e[t]})),e}}}},function(t,e,n){"use strict";n.d(e,"a",(function(){return g})),n.d(e,"b",(function(){return k})),n.d(e,"c",(function(){return A}));var r=n(5),i=n(3),o=n(9),u=n(18),a=n(7);function c(t,e){return(c=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var s,l,f="ontouchstart"in window,d="PointerEvent"in window&&!r.OS.android,p=!(d||f&&r.OS.mobile),h=r.Features.passiveEvents,v=!!h&&{passive:!0},g=function(t){var e,n;function r(e,n){var r;r=t.call(this)||this;var i=!(n=n||{}).preventScrolling;return r.directSelect=!!n.directSelect,r.dragged=!1,r.enableDoubleClick=!1,r.el=e,r.handlers={},r.options={},r.lastClick=0,r.lastStart=0,r.passive=i,r.pointerId=null,r.startX=0,r.startY=0,r.event=null,r.clicking=!1,r}n=t,(e=r).prototype=Object.create(n.prototype),e.prototype.constructor=e,c(e,n);var i=r.prototype;return i.on=function(e,n,r){return b(e)&&(this.handlers[e]||O[e](this)),t.prototype.on.call(this,e,n,r)},i.off=function(e,n,r){var i=this;if(b(e))P(this,e);else if(!e){var o=this.handlers;Object.keys(o).forEach((function(t){P(i,t)}))}return t.prototype.off.call(this,e,n,r)},i.destroy=function(){this.el&&(this.off(),d&&x(this),this.el=null)},r}(o.a),m=/\s+/;function b(t){return t&&!(m.test(t)||"object"==typeof t)}function y(t){if(!t.handlers.init){var e=t.el,n=t.passive,r=!!h&&{passive:n},o=function(e){if(t.dragged)T(t,i.s,e);else{var r=E(e),o=r.pageX,u=r.pageY,a=o-t.startX,c=u-t.startY;a*a+c*c>36&&(T(t,i.u,e),t.dragged=!0,T(t,i.s,e))}var s;n||"touchmove"!==e.type||(s=e).preventDefault&&s.preventDefault()},u=function(e){clearTimeout(s),t.el&&(x(t),P(t,"window"),t.dragged&&(t.dragged=!1,T(t,i.t,e)))};w(t,"init"),_(t,"init",(function(i){if(Object(a.p)(e,"jw-tab-focus"),!A(i)){var c=i.target,s=i.type;if(!t.directSelect||c===e){var l=E(i),f=l.pageX,d=l.pageY;if(t.dragged=!1,t.startX=f,t.startY=d,P(t,"window"),"pointerdown"===s&&i.isPrimary){if(!n){var p=i.pointerId;t.pointerId=p,e.setPointerCapture(p)}C(t,"window","pointermove",o,r),C(t,"window","pointercancel",u),C(t,"window","pointerup",u)}else"mousedown"===s?(C(t,"window","mousemove",o,r),C(t,"window","mouseup",u)):"touchstart"===s&&(C(t,"window","touchmove",o,r),C(t,"window","touchcancel",u),C(t,"window","touchend",u))}}}),r)}}function j(t){if(!t.handlers.select){var e=t.el;w(t,"select"),_(t,"select",(function(n){var r=n.target;A(n)||t.directSelect&&r!==e||(n.isPrimary&&"BUTTON"===r.tageName&&r.focus(),t.lastStart=Object(u.a)(),t.clicking=!0)})),C(t,"select","click",(function(n){A(n)||t.directSelect&&n.target!==e||(Object(u.a)()-t.lastStart>500&&!0===t.clicking||(function(t,e){t.enableDoubleClick&&(Object(u.a)()-t.lastClick<300?(T(t,i.r,e),t.lastClick=0):t.lastClick=Object(u.a)())}(t,n),T(t,i.o,n)),t.clicking=!1)}))}}function w(t,e){if(l||(l=new g(document).on("interaction")),!t.handlers.init&&!t.handlers.select){var n=t.el;C(t,e,"blur",(function(){Object(a.p)(n,"jw-tab-focus"),t.clicking=!1})),C(t,e,"focus",(function(){l.event&&"keydown"===l.event.type&&Object(a.b)(n,"jw-tab-focus")}))}}var O={drag:function(t){y(t)},dragStart:function(t){y(t)},dragEnd:function(t){y(t)},click:function(t){j(t)},doubleClick:function(t){t.enableDoubleClick=!0,j(t)},longPress:function(t){if(r.OS.iOS){var e=function(){clearTimeout(s)};C(t,"longPress","touchstart",(function(n){e(),s=setTimeout((function(){T(t,"longPress",n)}),500)})),C(t,"longPress","touchmove",e),C(t,"longPress","touchcancel",e),C(t,"longPress","touchend",e)}else t.el.oncontextmenu=function(e){return T(t,"longPress",e),!1}},focus:function(t){C(t,"focus","focus",(function(e){S(t,"focus",e)}))},blur:function(t){C(t,"blur","blur",(function(e){S(t,"blur",e)}))},over:function(t){(d||p)&&C(t,i.Z,d?"pointerover":"mouseover",(function(e){"touch"!==e.pointerType&&T(t,i.Z,e)}))},out:function(t){if(d){var e=t.el;C(t,i.Y,"pointerout",(function(n){if("touch"!==n.pointerType&&"clientX"in n){var r=document.elementFromPoint(n.clientX,n.clientY);e.contains(r)||T(t,i.Y,n)}}))}else p&&C(t,i.Y,"mouseout",(function(e){T(t,i.Y,e)}))},move:function(t){(d||p)&&C(t,i.W,d?"pointermove":"mousemove",(function(e){"touch"!==e.pointerType&&T(t,i.W,e)}))},enter:function(t){C(t,i.v,"keydown",(function(e){"Enter"!==e.key&&13!==e.keyCode||(e.stopPropagation(),S(t,i.v,e))}))},keydown:function(t){C(t,"keydown","keydown",(function(e){S(t,"keydown",e)}),!1)},gesture:function(t){var e=function(e){return T(t,"gesture",e)};C(t,"gesture","click",e),C(t,"gesture","keydown",e)},interaction:function(t){var e=function(e){t.event=e};C(t,"interaction","mousedown",e,!0),C(t,"interaction","keydown",e,!0)},tap:function(){},doubleTap:function(){}};function k(t){var e=t.ownerDocument||t;return e.defaultView||e.parentWindow||window}function C(t,e,n,r,i){void 0===i&&(i=v);var o=t.handlers[e],u=t.options[e];if(o||(o=t.handlers[e]={},u=t.options[e]={}),o[n])throw new Error(e+" "+n+" already registered");o[n]=r,u[n]=i;var a=t.el;("window"===e?k(a):a).addEventListener(n,r,i)}function P(t,e){var n=t.el,r=t.handlers,i=t.options,o="window"===e?k(n):n,u=r[e],a=i[e];u&&(Object.keys(u).forEach((function(t){var e=a[t];"boolean"==typeof e?o.removeEventListener(t,u[t],e):o.removeEventListener(t,u[t])})),r[e]=null,i[e]=null)}function x(t){var e=t.el;null!==t.pointerId&&(e.releasePointerCapture(t.pointerId),t.pointerId=null)}function S(t,e,n){var r=t.el,i=n.target;t.trigger(e,{type:e,sourceEvent:n,currentTarget:r,target:i})}function T(t,e,n){var r=function(t,e,n){var r,i=e.target,o=e.touches,u=e.changedTouches,a=e.pointerType;o||u?(r=o&&o.length?o[0]:u[0],a=a||"touch"):(r=e,a=a||"mouse");var c=r,s=c.pageX,l=c.pageY;return{type:t,pointerType:a,pageX:s,pageY:l,sourceEvent:e,currentTarget:n,target:i}}(e,n,t.el);t.trigger(e,r)}function E(t){return 0===t.type.indexOf("touch")?(t.originalEvent||t).changedTouches[0]:t}function A(t){return!(!t.ctrlKey||"click"!==t.type)||("which"in t?3===t.which:"button"in t&&2===t.button)}function _(t,e,n,r){d?C(t,e,"pointerdown",n,r):(p&&C(t,e,"mousedown",n,r),C(t,e,"touchstart",n,r))}},function(t,e,n){"use strict";n.d(e,"d",(function(){return r})),n.d(e,"c",(function(){return i})),n.d(e,"b",(function(){return o})),n.d(e,"a",(function(){return u}));var r={audioMode:!1,itemMeta:{},playbackRate:1,playRejected:!1,state:n(3).mb,itemReady:!1,controlsEnabled:!1},i={position:0,duration:0,buffer:0,currentTime:0},o=120,u=25},function(t,e,n){"use strict";var r=n(0),i=n(21),o=n(10),u=n(12),a=n(2),c=n(30),s=n(15);function l(t,e){this.name=t,this.message=e.message||e.toString(),this.error=e}var f=n(6),d=n(7),p=n(11),h=n(27),v=n(52),g=n(47),m=n(53);var b=Object(r.j)({},u,o,i,{addClass:d.b,hasClass:d.j,removeClass:d.p,replaceClass:d.q,toggleClass:d.w,classList:d.e,styleDimension:d.v,createElement:d.f,emptyElement:d.i,addStyleSheet:d.c,bounds:d.d,openLink:d.m,replaceInnerHtml:d.r,css:p.b,clearCss:p.a,style:p.d,transform:p.e,getRgba:p.c,ajax:h.b,crossdomain:function(t){var e=window.URL;try{var n=new e(t,location.origin);return location.protocol+"//"+location.host!=n.protocol+"//"+n.host}catch(t){}return!0},tryCatch:function(t,e,n){if(void 0===n&&(n=[]),s.a.debug)return t.apply(e||this,n);try{return t.apply(e||this,n)}catch(e){return new l(t.name,e)}},Error:l,Timer:c.a,log:g.a,genId:m.b,between:v.a,foreach:function(t,e){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e(n,t[n])},flashVersion:f.a,isIframe:f.m,indexOf:r.p,trim:a.i,pad:a.e,extension:a.a,hms:a.b,seconds:a.g,prefix:a.f,suffix:a.h,noop:function(){}});e.a=b},function(t,e,n){"use strict";n.d(e,"b",(function(){return c})),n.d(e,"d",(function(){return s})),n.d(e,"c",(function(){return l})),n.d(e,"a",(function(){return f}));var r,i=n(20),o=[{configName:"clearkey",keyName:"org.w3.clearkey"},{configName:"widevine",keyName:"com.widevine.alpha"},{configName:"playready",keyName:"com.microsoft.playready"}],u=[],a={};function c(t){return t.some((function(t){return!!t.drm||t.sources.some((function(t){return!!t.drm}))}))}function s(t){return r||((navigator.requestMediaKeySystemAccess&&window.MediaKeySystemAccess.prototype.getConfiguration||window.MSMediaKeys)&&Object(i.a)(t)("drm")?(o.forEach((function(t){var e,n,r=(e=t.keyName,n=[{initDataTypes:["cenc"],videoCapabilities:[{contentType:'video/mp4;codecs="avc1.4d401e"'}],audioCapabilities:[{contentType:'audio/mp4;codecs="mp4a.40.2"'}]}],navigator.requestMediaKeySystemAccess?navigator.requestMediaKeySystemAccess(e,n):new Promise((function(t,n){var r;try{r=new window.MSMediaKeys(e)}catch(t){return void n(t)}t(r)}))).then((function(){a[t.configName]=!0})).catch((function(){a[t.configName]=!1}));u.push(r)})),r=Promise.all(u)):Promise.resolve())}function l(t){return a[t]}function f(t){if(r)return Object.keys(t).some((function(t){return l(t)}))}},function(t,e,n){"use strict";n.d(e,"c",(function(){return i})),n.d(e,"b",(function(){return o})),n.d(e,"a",(function(){return u}));var r=n(0),i=function(t){return t.replace(/^(.*\/)?([^-]*)-?.*\.(js)$/,"$2")};function o(t){return 305e3}function u(t,e,n){var i=t.name,o=Object(r.j)({},e),u=document.createElement("div");u.id=n.id+"_"+i,u.className="jw-plugin jw-reset";var a=t.getNewInstance(n,o,u);return n.addPlugin(i,a),a}},function(t,e,n){"use strict";n.d(e,"a",(function(){return u})),n.d(e,"b",(function(){return a}));var r=n(8),i=n(5),o=null,u={};function a(){return o||(o=i.OS.tizenApp?n.e(3).then(function(t){var e=n(73).default;return u.controls=e,e}.bind(null,n)).catch((function(){o=null,Object(r.c)(301133)()})):n.e(2).then(function(t){var e=n(70).default;return u.controls=e,e}.bind(null,n)).catch((function(){o=null,Object(r.c)(301130)()}))),o}},function(t,e,n){"use strict";e.a={advertising:{admessage:"This ad will end in xx",cuetext:"Advertisement",displayHeading:"Advertisement",loadingAd:"Loading ad",podmessage:"Ad __AD_POD_CURRENT__ of __AD_POD_LENGTH__.",skipmessage:"Skip ad in xx",skiptext:"Skip"},airplay:"AirPlay",audioTracks:"Audio Tracks",auto:"Auto",buffer:"Loading",cast:"Chromecast",cc:"Closed Captions",close:"Close",errors:{badConnection:"This video cannot be played because of a problem with your internet connection.",cantLoadPlayer:"Sorry, the video player failed to load.",cantPlayInBrowser:"The video cannot be played in this browser.",cantPlayVideo:"This video file cannot be played.",errorCode:"Error Code",liveStreamDown:"The live stream is either down or has ended.",protectedContent:"There was a problem providing access to protected content.",technicalError:"This video cannot be played because of a technical error."},exitFullscreen:"Exit Fullscreen",fullscreen:"Fullscreen",hd:"Quality",liveBroadcast:"Live",logo:"Logo",mute:"Mute",next:"Next",nextUp:"Next Up",notLive:"Not Live",off:"Off",pause:"Pause",pipIcon:"Picture in Picture (PiP)",play:"Play",playback:"Play",playbackRates:"Playback Rates",player:"Video Player",poweredBy:"Powered by",prev:"Previous",related:{autoplaymessage:"Next up in xx",heading:"More Videos"},replay:"Replay",rewind:"Rewind 10 Seconds",settings:"Settings",sharing:{copied:"Copied",email:"Email",embed:"Embed",heading:"Share",link:"Link"},slider:"Seek",stop:"Stop",unmute:"Unmute",videoInfo:"About This Video",volume:"Volume",volumeSlider:"Volume",shortcuts:{playPause:"Play/Pause",volumeToggle:"Mute/Unmute",fullscreenToggle:"Fullscreen/Exit Fullscreen",seekPercent:"Seek %",keyboardShortcuts:"Keyboard Shortcuts",increaseVolume:"Increase Volume",decreaseVolume:"Decrease Volume",seekForward:"Seek Forward",seekBackward:"Seek Backward",spacebar:"SPACE",captionsToggle:"Captions On/Off"},captionsStyles:{subtitleSettings:"Subtitle Settings",color:"Font Color",fontOpacity:"Font Opacity",userFontScale:"Font Size",fontFamily:"Font Family",edgeStyle:"Character Edge",backgroundColor:"Background Color",backgroundOpacity:"Background Opacity",windowColor:"Window Color",windowOpacity:"Window Opacity",white:"White",black:"Black",red:"Red",green:"Green",blue:"Blue",yellow:"Yellow",magenta:"Magenta",cyan:"Cyan",none:"None",raised:"Raised",depressed:"Depressed",uniform:"Uniform",dropShadow:"Drop Shadow"},disabled:"Disabled",enabled:"Enabled",reset:"Reset"}},function(t,e){var n,r,i={},o={},u=(n=function(){return document.head||document.getElementsByTagName("head")[0]},function(){return void 0===r&&(r=n.apply(this,arguments)),r});function a(t){var e=document.createElement("style");return e.type="text/css",e.setAttribute("data-jwplayer-id",t),function(t){u().appendChild(t)}(e),e}function c(t,e){var n,r,i,u=o[t];u||(u=o[t]={element:a(t),counter:0});var c=u.counter++;return n=u.element,i=function(){f(n,c,"")},(r=function(t){f(n,c,t)})(e.css),function(t){if(t){if(t.css===e.css&&t.media===e.media)return;r((e=t).css)}else i()}}t.exports={style:function(t,e){!function(t,e){for(var n=0;n<e.length;n++){var r=e[n],o=(i[t]||{})[r.id];if(o){for(var u=0;u<o.parts.length;u++)o.parts[u](r.parts[u]);for(;u<r.parts.length;u++)o.parts.push(c(t,r.parts[u]))}else{var a=[];for(u=0;u<r.parts.length;u++)a.push(c(t,r.parts[u]));i[t]=i[t]||{},i[t][r.id]={id:r.id,parts:a}}}}(e,function(t){for(var e=[],n={},r=0;r<t.length;r++){var i=t[r],o=i[0],u=i[1],a=i[2],c={css:u,media:a};n[o]?n[o].parts.push(c):e.push(n[o]={id:o,parts:[c]})}return e}(t))},clear:function(t,e){var n=i[t];if(!n)return;if(e){var r=n[e];if(r)for(var o=0;o<r.parts.length;o+=1)r.parts[o]();return}for(var u=Object.keys(n),a=0;a<u.length;a+=1)for(var c=n[u[a]],s=0;s<c.parts.length;s+=1)c.parts[s]();delete i[t]}};var s,l=(s=[],function(t,e){return s[t]=e,s.filter(Boolean).join("\n")});function f(t,e,n){if(t.styleSheet)t.styleSheet.cssText=l(e,n);else{var r=document.createTextNode(n),i=t.childNodes[e];i?t.replaceChild(r,i):t.appendChild(r)}}},function(t,e,n){"use strict";var r=n(0),i=n(16),o=n(32),u=n(17),a=n(8),c={html5:function(){return n.e(16).then(function(t){var e=n(294).default;return Object(u.a)(e),e}.bind(null,n)).catch(Object(a.b)(152))}};Object(r.j)(c,{shaka:function(){return n.e(17).then(function(t){var e=n(312).default;return Object(u.a)(e),e}.bind(null,n)).catch(Object(a.b)(154))},hlsjs:function(){return n.e(14).then(function(t){var e=n(308).default;return Object(u.a)(e),e}.bind(null,n)).catch(Object(a.b)(153))},hlsjsAlt:function(){return n.e(15).then(function(t){var e=n(309).default;return Object(u.a)(e),e}.bind(null,n)).catch(Object(a.b)(155))}});var s=c;function l(t){this.config=t||{}}Object(r.j)(l.prototype,{load:function(t){var e=s[t],n=function(){return Promise.reject(new Error("Failed to load media"))};return e?e().then((function(){var e=o.a[t];return e||n()})):n()},providerSupports:function(t,e){return t.supports(e)},choose:function(t){if(t===Object(t))for(var e=i.a.length,n=0;n<e;n++){var r=i.a[n];if(this.providerSupports(r,t))return{priority:e-n-1,name:r.name,type:t.type,providerToCheck:r,provider:o.a[r.name]}}return{}}});var f=l;f.prototype.providerSupports=function(t,e){return t.supports(e,this.config.edition)};e.a=f},function(t,e,n){"use strict";var r=n(7),i=n(11);function o(t,e){var n=e.message,o=e.code,u=function(t,e,n,r){return'<div id="'+t+'" class="jw-error jw-reset"><div class="jw-error-msg jw-info-overlay jw-reset"><style>[id="'+t+'"].jw-error{background:#000;overflow:hidden;position:relative}[id="'+t+'"] .jw-error-msg{top:50%;left:50%;position:absolute;transform:translate(-50%,-50%)}[id="'+t+'"] .jw-error-text{text-align:start;color:#FFF;font:14px/1.35 Arial,Helvetica,sans-serif}</style><div class="jw-icon jw-reset"></div><div class="jw-info-container jw-reset"><div class="jw-error-text jw-reset-text" dir="auto" data-nosnippet>'+(e||"")+'<span class="jw-break jw-reset"></span>'+(r?("("+n+": "+r+")").replace(/\s+/g,"&nbsp;"):"")+"</div></div></div></div>"}(t.get("id"),n,t.get("localization").errors.errorCode,o.toString()),a=t.get("width"),c=t.get("height"),s=Object(r.f)(u);return Object(i.d)(s,{width:a.toString().indexOf("%")>0?a:a+"px",height:c.toString().indexOf("%")>0?c:c+"px"}),s}n.d(e,"a",(function(){return o}))},function(t,e,n){"use strict";function r(t){return t.slice&&"px"===t.slice(-2)&&(t=t.slice(0,-2)),t}function i(t,e){if(-1===e.toString().indexOf("%"))return 0;if("string"!=typeof t||!t)return 0;if(/^\d*\.?\d+%$/.test(t))return t;var n=t.indexOf(":");if(-1===n)return 0;var r=parseFloat(t.substr(0,n)),i=parseFloat(t.substr(n+1));return r<=0||i<=0?0:i/r*100+"%"}n.d(e,"b",(function(){return r})),n.d(e,"a",(function(){return i}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r=window.atob},function(t,e,n){"use strict";var r=n(4),i=n(2);function o(t){var e={zh:"Chinese",nl:"Dutch",en:"English",fr:"French",de:"German",it:"Italian",ja:"Japanese",pt:"Portuguese",ru:"Russian",es:"Spanish"};return e[t]?e[t]:t}function u(t){for(var e=[],n=0;n<Object(r.c)(t);n++){var i=t.childNodes[n];"jwplayer"===i.prefix&&"mediatypes"===Object(r.b)(i).toLowerCase()&&e.push(Object(r.d)(i))}return e}var a=function t(e,n){for(var a=[],c=0;c<Object(r.c)(e);c++){var s=e.childNodes[c];if("media"===s.prefix){if(!Object(r.b)(s))continue;switch(Object(r.b)(s).toLowerCase()){case"content":if(Object(i.j)(s,"duration")&&(n.duration=Object(i.g)(Object(i.j)(s,"duration"))),Object(i.j)(s,"url")){n.sources||(n.sources=[]);var l={file:Object(i.j)(s,"url"),type:Object(i.j)(s,"type"),width:Object(i.j)(s,"width"),label:Object(i.j)(s,"label")},f=u(s);f.length&&(l.mediaTypes=f),n.sources.push(l)}Object(r.c)(s)>0&&(n=t(s,n));break;case"title":n.title=Object(r.d)(s);break;case"description":n.description=Object(r.d)(s);break;case"guid":n.mediaid=Object(r.d)(s);break;case"thumbnail":n.image||(n.image=Object(i.j)(s,"url"));break;case"group":t(s,n);break;case"subtitle":var d={file:Object(i.j)(s,"url"),kind:"captions"};Object(i.j)(s,"lang").length>0&&(d.label=o(Object(i.j)(s,"lang"))),a.push(d)}}}n.tracks||(n.tracks=[]);for(var p=0;p<a.length;p++)n.tracks.push(a[p]);return n},c=n(12),s=function(t,e){for(var n="default",o=[],u=[],a=e,s=0;s<t.childNodes.length;s++){var l=t.childNodes[s];if("jwplayer"===l.prefix){var f=Object(r.b)(l);"source"===f?(delete e.sources,o.push({file:Object(i.j)(l,"file"),default:Object(i.j)(l,n),label:Object(i.j)(l,"label"),type:Object(i.j)(l,"type")})):"track"===f?(delete e.tracks,u.push({file:Object(i.j)(l,"file"),default:Object(i.j)(l,n),kind:Object(i.j)(l,"kind"),label:Object(i.j)(l,"label")})):(e[f]=Object(c.serialize)(Object(r.d)(l)),"file"===f&&e.sources&&delete e.sources)}e.file||(e.file=e.link)}if(o.length){e.sources=[];for(var d=0;d<o.length;d++){var p=o[d];p.file.length>0&&(p[n]="true"===o[d][n],p.label||delete p.label,a.sources.push(p))}}if(u.length){e.tracks=[];for(var h=0;h<u.length;h++){var v=u[h];v.file&&v.file.length>0&&(v[n]="true"===u[h][n],v.kind=u[h].kind.length?u[h].kind:"captions",v.label||delete v.label,a.tracks.push(v))}}return a},l=n(28);function f(t){var e=[];e.feedData={};for(var n=0;n<Object(r.c)(t);n++){var i=Object(r.a)(t,n);if("channel"===Object(r.b)(i).toLowerCase())for(var o=0;o<Object(r.c)(i);o++){var u=Object(r.a)(i,o),a=Object(r.b)(u).toLowerCase();"item"===a?e.push(d(u)):a&&(e.feedData[a]=Object(r.d)(u))}}return e}function d(t){for(var e={},n=0;n<t.childNodes.length;n++){var o=t.childNodes[n],u=Object(r.b)(o);if(u)switch(u.toLowerCase()){case"enclosure":e.file=Object(i.j)(o,"url");break;case"title":e.title=Object(r.d)(o);break;case"guid":e.mediaid=Object(r.d)(o);break;case"pubdate":e.date=Object(r.d)(o);break;case"description":e.description=Object(r.d)(o);break;case"link":e.link=Object(r.d)(o);break;case"category":e.tags?e.tags+=Object(r.d)(o):e.tags=Object(r.d)(o)}}return new l.a(s(t,a(t,e)))}n.d(e,"a",(function(){return f}))},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r="function"==typeof console.log?console.log.bind(console):function(){}},function(t,e,n){"use strict";n.d(e,"a",(function(){return o}));var r=n(45);function i(t){for(var e=new Array(Math.ceil(t.length/4)),n=0;n<e.length;n++)e[n]=t.charCodeAt(4*n)+(t.charCodeAt(4*n+1)<<8)+(t.charCodeAt(4*n+2)<<16)+(t.charCodeAt(4*n+3)<<24);return e}function o(t,e){if(t=String(t),e=String(e),0===t.length)return"";for(var n,o,u,a=i(Object(r.a)(t)),c=i((n=e,unescape(encodeURIComponent(n))).slice(0,16)),s=a.length,l=a[s-1],f=a[0],d=2654435769*Math.floor(6+52/s);d;){u=d>>>2&3;for(var p=s-1;p>=0;p--)o=((l=a[p>0?p-1:s-1])>>>5^f<<2)+(f>>>3^l<<4)^(d^f)+(c[3&p^u]^l),f=a[p]-=o;d-=2654435769}return function(t){try{return decodeURIComponent(escape(t))}catch(e){return t}}(function(t){for(var e=new Array(t.length),n=0;n<t.length;n++)e[n]=String.fromCharCode(255&t[n],t[n]>>>8&255,t[n]>>>16&255,t[n]>>>24&255);return e.join("")}(a).replace(/\0+$/,""))}},function(t,e,n){"use strict";n.d(e,"b",(function(){return r})),n.d(e,"a",(function(){return i}));var r=window.requestAnimationFrame||function(t){return setTimeout(t,17)},i=window.cancelAnimationFrame||clearTimeout},function(t,e,n){"use strict";n.d(e,"a",(function(){return l})),n.d(e,"c",(function(){return f}));var r=n(0),i=n(44),o=n(21),u=n(12),a=n(5),c=n(40),s=n(13),l={autoPause:{viewability:!1,pauseAds:!1},autostart:!1,allowFullscreen:!0,bandwidthEstimate:null,bitrateSelection:null,castAvailable:!1,controls:!0,cues:[],defaultPlaybackRate:1,displaydescription:!0,displaytitle:!0,displayPlaybackLabel:!1,enableShortcuts:!0,height:360,intl:{},item:0,language:"en",liveTimeout:null,localization:c.a,mute:!1,nextUpDisplay:!0,playbackRateControls:!1,playbackRates:[.5,1,1.25,1.5,2],renderCaptionsNatively:!1,repeat:!1,stretching:"uniform",volume:90,width:640};function f(t){return t<5?5:t>30?30:t}e.b=function(t,e){var d=Object(r.j)({},(window.jwplayer||{}).defaults,e,t);!function(t){Object.keys(t).forEach((function(e){"id"!==e&&(t[e]=Object(u.serialize)(t[e]))}))}(d);var p=d.forceLocalizationDefaults?l.language:Object(s.e)(),h=Object(s.j)(d.intl);d.localization=Object(s.a)(c.a,Object(s.c)(d,h,p));var v=Object(r.j)({},l,d);"."===v.base&&(v.base=Object(o.getScriptPath)("jwplayer.js")),v.base=(v.base||Object(o.loadFrom)()).replace(/\/?$/,"/"),n.p=v.base,v.width=Object(i.b)(v.width),v.height=Object(i.b)(v.height),v.aspectratio=Object(i.a)(v.aspectratio,v.width),v.volume=Object(r.z)(v.volume)?Math.min(Math.max(0,v.volume),100):l.volume,v.mute=!!v.mute,v.language=p,v.intl=h;var g=v.playlistIndex;g&&(v.item=g),Object(r.v)(v.item)||(v.item=0);var m=d.autoPause;m&&(v.autoPause.viewability=!("viewability"in m)||!!m.viewability);var b=v.playbackRateControls;if(b){var y=v.playbackRates;Array.isArray(b)&&(y=b),(y=y.filter((function(t){return Object(r.v)(t)&&t>=.25&&t<=4})).map((function(t){return Math.round(100*t)/100}))).indexOf(1)<0&&y.push(1),y.sort(),v.playbackRateControls=!0,v.playbackRates=y}(!v.playbackRateControls||v.playbackRates.indexOf(v.defaultPlaybackRate)<0)&&(v.defaultPlaybackRate=1),v.playbackRate=v.defaultPlaybackRate,v.aspectratio||delete v.aspectratio;var j=v.playlist;if(j)Array.isArray(j.playlist)&&(v.feedData=j,v.playlist=j.playlist);else{var w=Object(r.C)(v,["title","description","type","mediaid","image","images","file","sources","tracks","preload","duration"]);v.playlist=[w]}v.qualityLabels=v.qualityLabels||v.hlslabels,delete v.duration;var O=v.liveTimeout;null!==O&&(Object(r.z)(O)?0!==O&&(O=Math.max(30,O)):O=null,v.liveTimeout=O);var k,C,P=parseFloat(v.bandwidthEstimate),x=parseFloat(v.bitrateSelection);return v.bandwidthEstimate=Object(r.z)(P)?P:(k=v.defaultBandwidthEstimate,C=parseFloat(k),Object(r.z)(C)?Math.max(C,1):l.bandwidthEstimate),v.bitrateSelection=Object(r.z)(x)?x:l.bitrateSelection,v.liveSyncDuration=f(v.liveSyncDuration),v.backgroundLoading=Object(r.r)(v.backgroundLoading)?v.backgroundLoading:a.Features.backgroundLoading,v}},function(t,e,n){"use strict";n.r(e);var r=n(0),i=setTimeout;function o(){}function u(t){if(!(this instanceof u))throw new TypeError("Promises must be constructed via new");if("function"!=typeof t)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],d(t,this)}function a(t,e){for(;3===t._state;)t=t._value;0!==t._state?(t._handled=!0,u._immediateFn((function(){var n=1===t._state?e.onFulfilled:e.onRejected;if(null!==n){var r;try{r=n(t._value)}catch(t){return void s(e.promise,t)}c(e.promise,r)}else(1===t._state?c:s)(e.promise,t._value)}))):t._deferreds.push(e)}function c(t,e){try{if(e===t)throw new TypeError("A promise cannot be resolved with itself.");if(e&&("object"==typeof e||"function"==typeof e)){var n=e.then;if(e instanceof u)return t._state=3,t._value=e,void l(t);if("function"==typeof n)return void d((r=n,i=e,function(){r.apply(i,arguments)}),t)}t._state=1,t._value=e,l(t)}catch(e){s(t,e)}var r,i}function s(t,e){t._state=2,t._value=e,l(t)}function l(t){2===t._state&&0===t._deferreds.length&&u._immediateFn((function(){t._handled||u._unhandledRejectionFn(t._value)}));for(var e=0,n=t._deferreds.length;e<n;e++)a(t,t._deferreds[e]);t._deferreds=null}function f(t,e,n){this.onFulfilled="function"==typeof t?t:null,this.onRejected="function"==typeof e?e:null,this.promise=n}function d(t,e){var n=!1;try{t((function(t){n||(n=!0,c(e,t))}),(function(t){n||(n=!0,s(e,t))}))}catch(t){if(n)return;n=!0,s(e,t)}}u.prototype.catch=function(t){return this.then(null,t)},u.prototype.then=function(t,e){var n=new this.constructor(o);return a(this,new f(t,e,n)),n},u.prototype.finally=function(t){var e=this.constructor;return this.then((function(n){return e.resolve(t()).then((function(){return n}))}),(function(n){return e.resolve(t()).then((function(){return e.reject(n)}))}))},u.all=function(t){return new u((function(e,n){if(!t||void 0===t.length)throw new TypeError("Promise.all accepts an array");var r=Array.prototype.slice.call(t);if(0===r.length)return e([]);var i=r.length;function o(t,u){try{if(u&&("object"==typeof u||"function"==typeof u)){var a=u.then;if("function"==typeof a)return void a.call(u,(function(e){o(t,e)}),n)}r[t]=u,0==--i&&e(r)}catch(t){n(t)}}for(var u=0;u<r.length;u++)o(u,r[u])}))},u.resolve=function(t){return t&&"object"==typeof t&&t.constructor===u?t:new u((function(e){e(t)}))},u.reject=function(t){return new u((function(e,n){n(t)}))},u.race=function(t){return new u((function(e,n){for(var r=0,i=t.length;r<i;r++)t[r].then(e,n)}))},u._immediateFn="function"==typeof setImmediate&&function(t){setImmediate(t)}||function(t){i(t,0)},u._unhandledRejectionFn=function(t){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",t)};var p=u;window.Promise||(window.Promise=p);var h=n(21),v=n(14),g=n(16),m=n(17),b={availableProviders:g.a,registerProvider:m.a},y=n(26);b.registerPlugin=function(t,e,n){"jwpsrv"!==t&&Object(y.b)(t,e,n)};var j=b,w=n(29),O=n(15),k=n(5),C=n(64),P=n(3),x=n(30),S=n(9),T=n(36),E=0;function A(t,e){var n=new C.a(e);return n.on(P.gb,(function(e){t._qoe.tick("ready"),e.setupTime=t._qoe.between("setup","ready")})),n.on("all",(function(e,n){t.trigger(e,n)})),n}function _(t,e){var n=t.plugins,r=Object.keys(n).map((function(t){var e=n[t];return delete n[t],e}));e.get("setupConfig")&&t.trigger("remove"),t.off(),e.playerDestroy(),r.forEach((function(t){if(t.destroy)try{t.destroy()}catch(t){}})),e.getContainer().removeAttribute("data-jwplayer-id")}function F(t){var e=++E,n=t.id||"player-"+e,i=new x.a,o={},u=A(this,t);i.tick("init"),t.setAttribute("data-jwplayer-id",n),Object.defineProperties(this,{id:{enumerable:!0,get:function(){return n}},uniqueId:{enumerable:!0,get:function(){return e}},plugins:{enumerable:!0,get:function(){return o}},_qoe:{enumerable:!0,get:function(){return i}},version:{enumerable:!0,get:function(){return w.a}},Events:{enumerable:!0,get:function(){return S.a}},utils:{enumerable:!0,get:function(){return T.a}},_:{enumerable:!0,get:function(){return r.f}}}),Object(r.j)(this,{_events:{},setup:function(e){return i.clear("ready"),i.tick("setup"),u&&_(this,u),(u=A(this,t)).init(e,this),this.on(e.events,null,this)},remove:function(){return this.getPip()&&this.setPip(!1),function(t){for(var e=v.a.length;e--;)if(v.a[e].uniqueId===t.uniqueId){v.a.splice(e,1);break}}(this),u&&_(this,u),Object.keys(o).forEach((function(t){delete o[t]})),this},qoe:function(){var t=u.getItemQoe();return{setupTime:this._qoe.between("setup","ready"),firstFrame:t.getFirstFrame?t.getFirstFrame():null,player:this._qoe.dump(),item:t.dump()}},addCues:function(t){return Array.isArray(t)&&u.addCues(t),this},getAudioTracks:function(){return u.getAudioTracks()},getBuffer:function(){return u.get("buffer")},getCaptions:function(){return u.get("captions")},getCaptionsList:function(){return u.getCaptionsList()},getConfig:function(){return u.getConfig()},getContainer:function(){return u.getContainer()},getControls:function(){return u.get("controls")},getCues:function(){return u.get("cues")},getCurrentAudioTrack:function(){return u.getCurrentAudioTrack()},getCurrentCaptions:function(){return u.getCurrentCaptions()},getCurrentQuality:function(){return u.getCurrentQuality()},getCurrentTime:function(){return u.get("currentTime")},getDuration:function(){return u.get("duration")},getEnvironment:function(){return k},getFullscreen:function(){return u.get("fullscreen")},getHeight:function(){return u.getHeight()},getItemMeta:function(){return u.get("itemMeta")||{}},getMute:function(){return u.getMute()},getPercentViewable:function(){return u.get("visibility")},getPip:function(){return u.get("pip")},getPlaybackRate:function(){return u.get("playbackRate")},getPlaylist:function(){return u.get("playlist")},getPlaylistIndex:function(){return u.get("item")},getPlaylistItem:function(t){if(!T.a.exists(t))return u.get("playlistItem");var e=this.getPlaylist();return e?e[t]:null},getPosition:function(){return u.get("position")},getProvider:function(){return u.getProvider()},getQualityLevels:function(){return u.getQualityLevels()},getSafeRegion:function(t){return void 0===t&&(t=!0),u.getSafeRegion(t)},getState:function(){return u.getState()},getStretching:function(){return u.get("stretching")},getViewable:function(){return u.get("viewable")},getVisualQuality:function(){return u.getVisualQuality()},getVolume:function(){return u.get("volume")},getWidth:function(){return u.getWidth()},setCaptions:function(t){return u.setCaptions(t),this},setConfig:function(t){return u.setConfig(t),this},setControls:function(t){return u.setControls(t),this},setCurrentAudioTrack:function(t){u.setCurrentAudioTrack(t)},setCurrentCaptions:function(t){u.setCurrentCaptions(t)},setCurrentQuality:function(t){u.setCurrentQuality(t)},setFullscreen:function(t){return u.setFullscreen(t),this},setAllowFullscreen:function(t){return u.setAllowFullscreen(t),this},setMute:function(t){return u.setMute(t),this},setPip:function(t){return u.setPip(t),this},setPlaybackRate:function(t){return u.setPlaybackRate(t),this},setPlaylistItem:function(t,e){return u.setPlaylistItem(t,e),this},setCues:function(t){return Array.isArray(t)&&u.setCues(t),this},setVolume:function(t){return u.setVolume(t),this},load:function(t,e){return u.load(t,e),this},play:function(t){return u.play(t),this},pause:function(t){return u.pause(t),this},playToggle:function(t){switch(this.getState()){case P.pb:case P.jb:return this.pause(t);default:return this.play(t)}},seek:function(t,e){return u.seek(t,e),this},playlistItem:function(t,e){return u.playlistItem(t,e),this},playlistNext:function(t){return u.playlistNext(t),this},playlistPrev:function(t){return u.playlistPrev(t),this},next:function(t){return u.next(t),this},requestPip:function(t){return u.requestPip(t),this},castToggle:function(){return u.castToggle(),this},stopCasting:function(){return u.stopCasting(),this},createInstream:function(){return u.createInstream()},stop:function(){return u.stop(),this},resize:function(t,e){return u.resize(t,e),this},addButton:function(t,e,n,r,i){return u.addButton(t,e,n,r,i),this},removeButton:function(t){return u.removeButton(t),this},attachMedia:function(){return u.attachMedia(),this},detachMedia:function(){return u.detachMedia(),this},isBeforeComplete:function(){return u.isBeforeComplete()},isBeforePlay:function(){return u.isBeforePlay()},setPlaylistItemCallback:function(t,e){u.setItemCallback(t,e)},removePlaylistItemCallback:function(){u.setItemCallback(null)},getPlaylistItemPromise:function(t){return u.getItemPromise(t)},getFloating:function(){return!!u.get("isFloating")},setFloating:function(t){u.setConfig({floating:{mode:t?"always":"never"}})}})}Object(r.j)(F.prototype,{on:function(t,e,n){return S.c.call(this,t,e,n)},once:function(t,e,n){return S.d.call(this,t,e,n)},off:function(t,e,n){return S.b.call(this,t,e,n)},trigger:function(t,e){return(e=r.f.isObject(e)?Object(r.j)({},e):{}).type=t,O.a.debug?S.e.call(this,t,e):S.f.call(this,t,e)},getPlugin:function(t){return this.plugins[t]},addPlugin:function(t,e){this.plugins[t]=e,this.on("ready",e.addToPlayer),e.resize&&this.on("resize",e.resizeHandler)},registerPlugin:function(t,e,n){Object(y.b)(t,e,n)},getAdBlock:function(){return!1},playAd:function(t){},pauseAd:function(t){},skipAd:function(){}}),n.p=Object(h.loadFrom)();var I=function(t){var e,n;if(t?"string"==typeof t?(e=M(t))||(n=document.getElementById(t)):"number"==typeof t?e=v.a[t]:t.nodeType&&(e=M((n=t).id||n.getAttribute("data-jwplayer-id"))):e=v.a[0],e)return e;if(n){var r=new F(n);return v.a.push(r),r}return{registerPlugin:y.b}};function M(t){for(var e=0;e<v.a.length;e++)if(v.a[e].id===t)return v.a[e];return null}function L(t){Object.defineProperties(t,{api:{get:function(){return j},set:function(){}},version:{get:function(){return w.a},set:function(){}},debug:{get:function(){return O.a.debug},set:function(t){O.a.debug=!!t}}})}L(I);var N=I,R=n(34),D=n(25),B=n(24),q=n(48),z=n(46),V=n(22),H=r.f.extend,U={};U._=r.f,U.utils=Object(r.j)(T.a,{key:D.b,extend:H,scriptloader:B.a,rssparser:{parse:z.a},tea:q.a,UI:R.a}),U.utils.css.style=U.utils.style,U.vid=V.a;var Q=U,W=n(63),X=/^(?:on(?:ce)?|off|trigger)$/;function Y(t){var e={};$(this,t,t,e),$(this,t,F.prototype,e)}function $(t,e,n,r){var i=Object.keys(n);i.forEach((function(o){"function"==typeof n[o]&&"Events"!==o?t[o]=function t(e,n,r,i,o){return function(){var u=Array.prototype.slice.call(arguments),a=u[0],c=n._trackCallQueue||(n._trackCallQueue=[]),s=X.test(r),l=s&&u[1]&&u[1]._callback,f=o.edition||J(n,o,"edition"),d="free"===f;if(d){var p=["addButton","addCues","detachMedia","load","next","pause","play","playlistItem","playlistNext","playlistPrev","playToggle","resize","seek","setCaptions","setConfig","setControls","setCues","setFullscreen","setMute","setPlaybackRate","setPlaylistItem","setVolume","stop"];if(p.indexOf(r)>-1)return K(r),e;var h=["createInstream","setCurrentAudioTrack","setCurrentCaptions","setCurrentQuality"];if(h.indexOf(r)>-1)return K(r),null}if(l||c.push([r,a]),s)return tt(n,c),n[r].apply(e,u);Z(r,u);var v=n[r].apply(n,u);return"remove"===r?n.off.call(e):"setup"===r&&(n.off.call(e),n.off(a.events,null,n),n.on.call(e,a.events,null,e),n.on("all",(function(r,u){if("ready"===r){var a=Object.keys(n).filter((function(t){return"_"!==t[0]&&-1===i.indexOf(t)&&"function"==typeof n[t]})),s=i.concat(a);a.forEach((function(r){e[r]=t(e,n,r,s,o)}))}n.trigger.call(e,r,u),tt(n,c)}))),tt(n,c),v===n?e:v}}(t,e,o,i,r):"_events"===o?t._events={}:Object.defineProperty(t,o,{enumerable:!0,get:function(){return n[o]}})}))}function J(t,e,n){var r=t.getConfig()[n];return e[n]=r,r}function K(t){console.warn("The API method jwplayer()."+t+"() is disabled in the free edition of JW Player.")}function Z(t,e){var n={reason:!("play"===t||"seek"===t||"pause"===t)&&Object(W.a)()?"interaction":"external"};switch(t){case"play":case"pause":case"playToggle":case"playlistNext":case"playlistPrev":case"next":e[0]=n;break;case"seek":case"playlistItem":e[1]=n}}function G(t,e,n){try{var r=function(t,e){switch(t){case"setup":return!!e;case"getSafeRegion":case"pauseAd":case"setControls":case"setFullscreen":case"setMute":return!!e===e?e:void 0;case"setPlaylistItem":case"getPlaylistItem":return(0|e)===e?e:void 0;case"setPlaybackRate":case"setVolume":return Number(e);case"setConfig":return Object.keys(Object(e)).join(",");case"on":case"once":case"off":case"trigger":case"getPlugin":case"addPlugin":case"registerPlugin":return""+e}return null}(e,n);t.trackExternalAPIUsage(e,r)}catch(t){O.a.debug&&console.warn(t)}}function tt(t,e){if(e.length){var n=t.getPlugin("jwpsrv");n&&n.trackExternalAPIUsage&&(e.forEach((function(t){G(n,t[0],t[1])})),e.length=0)}}var et=window;Object(r.j)(N,Q);var nt=function(t){var e=N(t);return e.uniqueId?e._publicApi||(e._publicApi=new Y(e)):e};Object(r.j)(nt,Q),L(nt),"function"==typeof et.define&&et.define.amd&&et.define([],(function(){return nt}));var rt=nt;et.jwplayer&&(rt=et.jwplayer);e.default=rt},function(t,e,n){"use strict";n.d(e,"a",(function(){return r}));var r=function(t,e,n){return Math.max(Math.min(t,n),e)}},function(t,e,n){"use strict";n.d(e,"a",(function(){return r})),n.d(e,"b",(function(){return o}));var r=12;function i(){try{var t=window.crypto||window.msCrypto;if(t&&t.getRandomValues)return t.getRandomValues(new Uint32Array(1))[0].toString(36)}catch(t){}return Math.random().toString(36).slice(2,9)}function o(t){for(var e="";e.length<t;)e+=i();return e.slice(0,t)}},function(t,e,n){"use strict";function r(t,e){return(r=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}n.d(e,"a",(function(){return i}));var i=function(t){var e,n;function i(){var e;return(e=t.call(this)||this).attributes=Object.create(null),e}n=t,(e=i).prototype=Object.create(n.prototype),e.prototype.constructor=e,r(e,n);var o=i.prototype;return o.addAttributes=function(t){var e=this;Object.keys(t).forEach((function(n){e.add(n,t[n])}))},o.add=function(t,e){var n=this;Object.defineProperty(this,t,{get:function(){return n.attributes[t]},set:function(e){return n.set(t,e)},enumerable:!1}),this.attributes[t]=e},o.get=function(t){return this.attributes[t]},o.set=function(t,e){if(this.attributes[t]!==e){var n=this.attributes[t];this.attributes[t]=e,this.trigger("change:"+t,this,e,n)}},o.clone=function(){var t={},e=this.attributes;if(e)for(var n in e)t[n]=e[n];return t},o.change=function(t,e,n){this.on("change:"+t,e,n);var r=this.get(t);return e.call(n,this,r,r),this},i}(n(9).a)},function(t,e,n){"use strict";function r(t,e,n){var r=[],i={};function o(){for(;r.length>0;){var e=r.shift(),n=e.command,o=e.args;(i[n]||t[n]).apply(t,o)}}e.forEach((function(e){var u=t[e];i[e]=u,t[e]=function(){for(var t=arguments.length,i=new Array(t),a=0;a<t;a++)i[a]=arguments[a];n()?r.push({command:e,args:i}):(o(),u&&u.apply(this,i))}})),Object.defineProperty(this,"queue",{enumerable:!0,get:function(){return r}}),this.flush=o,this.empty=function(){r.length=0},this.off=function(){e.forEach((function(e){var n=i[e];n&&(t[e]=n,delete i[e])}))},this.destroy=function(){this.off(),this.empty()}}n.d(e,"a",(function(){return r}))},function(t,e,n){"use strict";n.d(e,"c",(function(){return r})),n.d(e,"b",(function(){return i})),n.d(e,"a",(function(){return o}));var r=4,i=5,o=1},function(t,e,n){"use strict";var r=n(3),i=function(){},o=function(){return!1},u={name:"default"},a={supports:o,play:i,pause:i,preload:i,load:i,stop:i,volume:i,mute:i,seek:i,resize:i,remove:i,destroy:i,setVisibility:i,setFullscreen:i,getFullscreen:o,supportsFullscreen:o,getContainer:i,setContainer:i,getName:function(){return u},getQualityLevels:i,getCurrentQuality:i,setCurrentQuality:i,getAudioTracks:i,getCurrentAudioTrack:i,setCurrentAudioTrack:i,getSeekRange:function(){return{start:0,end:this.getDuration()}},setPlaybackRate:i,getPlaybackRate:function(){return 1},getBandwidthEstimate:function(){return null},getLiveLatency:function(){return null},attachMedia:i,detachMedia:i,init:i,setState:function(t){this.state=t,this.trigger(r.bb,{newstate:t})},sendMediaType:function(t){var e=t[0],n=e.type,i=e.mimeType,o="aac"===n||"mp3"===n||"mpeg"===n||i&&0===i.indexOf("audio/");this.trigger(r.T,{mediaType:o?"audio":"video"})},getDuration:function(){return 0},trigger:i};e.a=a},function(t,e,n){"use strict";var r=n(0),i=n(24),o=n(12),u=n(2),a=n(1),c=n(19),s=function(t){if("string"==typeof t){var e=(t=t.split("?")[0]).indexOf("://");if(e>0)return 0;var n=t.indexOf("/"),r=Object(u.a)(t);return!(e<0&&n<0)||r&&isNaN(r)?1:2}};var l=function(t){this.url=t,this.promise_=null};Object.defineProperties(l.prototype,{promise:{get:function(){return this.load()},set:function(){}}}),Object(r.j)(l.prototype,{load:function(){var t=this,e=this.promise_;if(!e){if(2===s(this.url))return Promise.resolve(this);var n=new i.a(function(t){switch(s(t)){case 0:return t;case 1:return Object(o.getAbsolutePath)(t,window.location.href)}}(this.url));this.loader=n,e=n.load().then((function(){return t})),this.promise_=e}return e},registerPlugin:function(t,e,n){this.name=t,this.target=e,this.js=n},getNewInstance:function(t,e,n){var r=this.js;if("function"!=typeof r)throw new a.q(null,Object(c.b)(this.url)+100);var i=new r(t,e,n);return i.addToPlayer=function(){var t=this.getContainer().querySelector(".jw-overlays");t&&(n.left=t.style.left,n.top=t.style.top,t.appendChild(n))},i.resizeHandler=function(){var t=this.getContainer().querySelector(".jw-overlays");t&&i.resize(t.clientWidth,t.clientHeight)},i}}),e.a=l},function(t,e,n){"use strict";var r=n(0),i=n(3),o=n(4),u=n(46),a=n(27),c=n(9),s=n(1);e.a=function(){var t=Object(r.j)(this,c.a);function e(e){try{var a,c=e.responseXML?e.responseXML.childNodes:null,l=null;if(c){for(var f=0;f<c.length&&8===(l=c[f]).nodeType;f++);if(l&&"xml"===Object(o.b)(l)&&(l=l.nextSibling),l&&"rss"===Object(o.b)(l)){var d=Object(u.a)(l);a=Object(r.j)({playlist:d},d.feedData)}}if(!a)try{var p=JSON.parse(e.responseText);if(Array.isArray(p))a={playlist:p};else{if(!Array.isArray(p.playlist))throw Error("Playlist is not an array");a=p}}catch(t){throw new s.q(s.m,621,t)}t.trigger(i.eb,a)}catch(t){n(t)}}function n(e){e instanceof s.q&&!e.code&&(e=new s.q(s.m,0)),t.trigger(i.w,e)}this.load=function(t){Object(a.b)(t,e,(function(t,e,r,i){n(i)}))},this.destroy=function(){this.off()}}},function(t,e,n){"use strict";n.d(e,"b",(function(){return i})),n.d(e,"a",(function(){return u}));var r=n(56);function i(){for(var t=r.c,e=[],n=[],i=0;i<t;i++){var a=u();e.push(a),n.push(a),o(a)}var c=n.shift(),s=n.shift(),l=!1;return{primed:function(){return l},prime:function(){e.forEach(o),l=!0},played:function(){l=!0},getPrimedElement:function(){return n.shift()||null},getAdElement:function(){return c},getTestElement:function(){return s},clean:function(t){if(t.src){t.removeAttribute("src");try{t.load()}catch(t){}}},recycle:function(t){t&&!n.some((function(e){return e===t}))&&(this.clean(t),n.push(t))},syncVolume:function(t){var n=Math.min(Math.max(0,t/100),1);e.forEach((function(t){t.volume=n}))},syncMute:function(t){e.forEach((function(e){e.muted=t}))}}}function o(t){t.src||t.load()}function u(t){var e=document.createElement("video");return e.className="jw-video jw-reset",e.setAttribute("tabindex","-1"),e.setAttribute("disableRemotePlayback",""),e.setAttribute("webkit-playsinline",""),e.setAttribute("playsinline",""),t&&Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])})),e}},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(0);function i(t,e){return Object(r.j)({},e,{prime:function(){t.src||t.load()},getPrimedElement:function(){return t},clean:function(){e.clean(t)},recycle:function(){e.clean(t)}})}},function(t,e,n){"use strict";e.a="hidden"in document?function(){return!document.hidden}:"webkitHidden"in document?function(){return!document.webkitHidden}:function(){return!0}},function(t,e,n){"use strict";function r(t){return!!(t=t||window.event)&&/^(?:mouse|pointer|touch|gesture|click|key)/.test(t.type)}n.d(e,"a",(function(){return r}))},function(t,e,n){"use strict";var r=n(0),i=n(55),o=n(67),u=n(8),a=n(28),c=n(23),s=n(16),l=n(17),f=n(39),d=n(1),p=n(5),h=null;function v(t){return h||(h=function(t){var e=t.get("controls"),r=g(),i=function(t,e){var n=t.get("playlist");if(Array.isArray(n)&&n.length)for(var r=Object(c.f)(t.get("item"),n.length),i=Object(c.c)(Object(a.a)(n[r]),t),o=0;o<i.length;o++)for(var u=i[o],l=t.getProviders(),f=0;f<s.a.length;f++){var d=s.a[f];if(l.providerSupports(d,u))return d.name===e}return!1}(t,"html5");if(p.OS.tizen)return m();if(e&&r&&i)return o=n.e(8).then(function(t){n(167);var e=n(72).default;return f.a.controls=n(70).default,Object(l.a)(n(294).default),e}.bind(null,n)).catch(Object(u.b)(d.s+105)),u.a.html5=o,o;var o;if(e&&i)return function(){var t=n.e(6).then(function(t){var e=n(72).default;return f.a.controls=n(70).default,Object(l.a)(n(294).default),e}.bind(null,n)).catch(Object(u.b)(d.s+104));return u.a.html5=t,t}();if(e&&r)return n.e(7).then(function(t){n(167);var e=n(72).default;return f.a.controls=n(70).default,e}.bind(null,n)).catch(Object(u.b)(d.s+103));if(e)return n.e(5).then(function(t){var e=n(72).default;return f.a.controls=n(70).default,e}.bind(null,n)).catch(Object(u.b)(d.s+102));return m()}(t)),h}function g(){var t=window.IntersectionObserverEntry;return!t||!("IntersectionObserver"in window)||!("intersectionRatio"in t.prototype)}function m(){return function(){if(g())return n.e(10).then(function(t){return n(167)}.bind(null,n)).catch(Object(u.b)(d.s+120));return Promise.resolve()}().then(u.d)}var b=n(3),y=n(59),j=n(24),w=n(13),O=n(26);function k(t){var e=t.get("playlist");return new Promise((function(n,r){if("string"!=typeof e){var i=t.get("feedData")||{};return C(t,e,i),n()}var o=new y.a;o.on(b.eb,(function(e){var r=e.playlist;delete e.playlist,C(t,r,e),n()})),o.on(b.w,(function(e){C(t,[],{}),r(Object(d.y)(e,d.t))})),o.load(e)}))}function C(t,e,n){var r=t.attributes;r.playlist=Object(c.a)(e),r.feedData=n}function P(t){return t.attributes._destroyed}var x=n(37),S=n(25);function T(t){return F(t)?Promise.resolve():k(t).then((function(){if(t.get("drm")||Object(x.b)(t.get("playlist")))return Object(x.d)(t.get("edition"))})).then((function(){return k(e=t).then((function(){if(!P(e)){var t=Object(c.b)(e.get("playlist"),e);e.attributes.playlist=t;try{Object(c.e)(t)}catch(t){throw t.code+=d.t,t}var n=e.getProviders(),r=Object(c.f)(e.get("item"),t.length),i=n.choose(t[r].sources[0]),o=i.provider,a=i.name;return"function"==typeof o?o:u.a.html5&&"html5"===a?u.a.html5:n.load(a).catch((function(t){throw Object(d.y)(t,d.u)}))}}));var e}))}function E(t,e){var n=[_(t)];return F(t)||n.push(Promise.resolve()),Promise.all(n)}function A(t,e){var r=function(){return function(t,e){return Object(O.a)(t,e)}(t,e)};return window.location!==window.parent.location&&/isAMP/.test(document.location.search)?function(t,e){return function(t,e){return n.e(1).then(function(r){return new(0,n(315).default)(e).setup(t)}.bind(null,n)).catch(Object(u.b)(d.s+130))}(t,e).then((function(){return I(t)}))}(t,e).then(r).catch(r):r()}function _(t){var e=t.attributes,n=e.error;if(n&&n.code===S.a){var r=e.pid,i=e.ph,o=new S.b(e.key);if(i>0&&i<4&&r&&o.duration()>-7776e6)return new j.a("//content.jwplatform.com/libraries/"+r+".js").load().then((function(){var t=window.jwplayer.defaults.key,n=new S.b(t);n.error()||n.token()!==o.token()||(e.key=t,e.edition=n.edition(),e.error=n.error())})).catch((function(){}))}return Promise.resolve()}function F(t){var e=t.get("advertising");return!(!e||!e.outstream)}var I=function(t){var e=t.get("skin")?t.get("skin").url:void 0;if("string"==typeof e&&!function(t){for(var e=document.styleSheets,n=0,r=e.length;n<r;n++)if(e[n].href===t)return!0;return!1}(e)){return new j.a(e,!0).load().catch((function(t){return t}))}return Promise.resolve()},M=function(t){var e=t.attributes,n=e.language,r=e.base,i=e.setupConfig,o=e.intl,u=Object(w.c)(i,o,n);return!Object(w.h)(n)||Object(w.f)(u)?Promise.resolve():new Promise((function(i){return Object(w.i)(r,n).then((function(n){var r=n.response;if(!P(t)){if(!r)throw new d.q(null,d.h);e.localization=Object(w.a)(r,u),i()}})).catch((function(t){i(t.code===d.h?t:Object(d.y)(t,d.g))}))}))};var L=function(t){var e;this.start=function(n){var r=A(t,n),i=Promise.all([v(t),r,T(t),E(t),I(t),M(t)]),o=new Promise((function(t,n){e=setTimeout((function(){n(new d.q(d.k,d.w))}),6e4);var r=function(){clearTimeout(e),setTimeout(t,6e4)};i.then(r).catch(r)}));return Promise.race([i,o]).catch((function(t){var e=function(){throw t};return r.then(e).catch(e)})).then((function(t){return function(t){if(!t||!t.length)return{core:null,warnings:[]};var e=t.reduce((function(t,e){return t.concat(e)}),[]).filter((function(t){return t&&t.code}));return{core:t[0],warnings:e}}(t)}))},this.destroy=function(){clearTimeout(e),t.set("_destroyed",!0),t=null}},N=n(42),R=n(30),D=n(12),B=n(15),q={removeItem:function(t){}};try{q=window.localStorage||q}catch(t){}var z=function(){function t(t,e){this.namespace=t,this.items=e}var e=t.prototype;return e.getAllItems=function(){var t=this;return this.items.reduce((function(e,n){var r=q[t.namespace+"."+n];return r&&(e[n]="captions"!==n?Object(D.serialize)(r):JSON.parse(r)),e}),{})},e.track=function(t){var e=this;this.items.forEach((function(n){t.on("change:"+n,(function(t,r){try{"captions"===n&&(r=JSON.stringify(r)),q[e.namespace+"."+n]=r}catch(t){B.a.debug&&console.error(t)}}))}))},e.clear=function(){var t=this;this.items.forEach((function(e){q.removeItem(t.namespace+"."+e)}))},t}(),V=n(54),H=n(35),U=n(9),Q=n(43),W=n(60),X=n(61),Y=n(34);n(69),n(71);n.d(e,"b",(function(){return Z}));var $=function(t){this._events={},this.modelShim=new V.a,this.modelShim._qoeItem=new R.a,this.mediaShim={},this.setup=new L(this.modelShim),this.currentContainer=this.originalContainer=t,this.apiQueue=new i.a(this,["load","play","pause","seek","stop","playlistItem","playlistNext","playlistPrev","next","preload","setAllowFullscreen","setConfig","setCurrentAudioTrack","setCurrentCaptions","setCurrentQuality","setFullscreen","setPip","requestPip","addButton","removeButton","castToggle","setMute","setVolume","setPlaybackRate","addCues","setCues","setPlaylistItem","stopCasting","resize","setCaptions","setControls"],(function(){return!0}))};function J(t,e){e&&e.code&&(e.sourceError&&console.error(e.sourceError),console.error(d.q.logMessage(e.code)))}function K(t){t&&t.code&&console.warn(d.q.logMessage(t.code))}function Z(t,e){if(!document.body.contains(t.currentContainer)){var n=document.getElementById(t.get("id"));n&&(t.currentContainer=n)}t.currentContainer.parentElement&&t.currentContainer.parentElement.replaceChild(e,t.currentContainer),t.currentContainer=e}Object(r.j)($.prototype,{on:U.a.on,once:U.a.once,off:U.a.off,trigger:U.a.trigger,init:function(t,e){var n=this,i=this.modelShim,u=new z("jwplayer",["volume","mute","captionLabel","captions","bandwidthEstimate","bitrateSelection","qualityLabel","enableShortcuts"]),a=u&&u.getAllItems();i.attributes=i.attributes||{},Object(r.j)(this.mediaShim,H.c);var c=t,s=Object(o.a)(Object(r.j)({},t),a);s.id=e.id,s.setupConfig=c,Object(r.j)(i.attributes,s,H.d),i.getProviders=function(){return new N.a(s)},i.setProvider=function(){};var l=Object(W.b)();i.get("backgroundLoading")||(l=Object(X.a)(l.getPrimedElement(),l));var f=this.primeUi=new Y.a(Object(Y.b)(this.originalContainer)).once("gesture",(function(){l.prime(),n.preload(),f.destroy()}));return i.on("change:errorEvent",J),this.setup.start(e).then((function(t){var o=t.core;if(!o)throw Object(d.y)(null,d.v);if(n.setup){n.on(b.ub,K),t.warnings.forEach((function(t){n.trigger(b.ub,t)}));var a=n.modelShim.clone();if(a.error)throw a.error;var c=n.apiQueue.queue.slice(0);n.apiQueue.destroy(),Object(r.j)(n,o.prototype),n.playerSetup(a,e,n.originalContainer,n._events,c,l);var s=n._model;return i.off("change:errorEvent",J),s.on("change:errorEvent",J),u.track(s),n.updatePlaylist(s.get("playlist"),s.get("feedData")).catch((function(t){var e=t.code===d.a?d.r:d.t;throw Object(d.y)(t,e)}))}})).then((function(){n.setup&&n.playerReady()})).catch((function(t){n.setup&&function(t,e,n){Promise.resolve().then((function(){var r=Object(d.z)(d.p,d.x,n),i=t._model||t.modelShim;r.message=r.message||i.get("localization").errors[r.key],delete r.key;var o=i.get("contextual");if(!o){var u=Object(Q.a)(t,r);Q.a.cloneIcon&&u.querySelector(".jw-icon").appendChild(Q.a.cloneIcon("error")),Z(t,u)}i.set("errorEvent",r),i.set("state",b.lb),t.trigger(b.ib,r),o&&e.remove()}))}(n,e,t)}))},playerDestroy:function(){this.destroy&&this.destroy(),this.apiQueue&&this.apiQueue.destroy(),this.setup&&this.setup.destroy(),this.primeUi&&this.primeUi.destroy(),this.currentContainer!==this.originalContainer&&Z(this,this.originalContainer),this.off(),this._events=this._model=this.modelShim=this.apiQueue=this.primeUi=this.setup=null},getContainer:function(){return this.currentContainer},get:function(t){if(this.modelShim)return t in this.mediaShim?this.mediaShim[t]:this.modelShim.get(t)},getItemQoe:function(){return this.modelShim._qoeItem},getItemPromise:function(){return null},setItemCallback:function(t){this.modelShim&&(this.modelShim.attributes.playlistItemCallback=t)},getConfig:function(){return Object(r.j)({},this.modelShim.attributes,this.mediaShim)},getCurrentCaptions:function(){return this.get("captionsIndex")},getWidth:function(){return this.get("containerWidth")},getHeight:function(){return this.get("containerHeight")},getMute:function(){return this.get("mute")},getProvider:function(){return this.get("provider")},getState:function(){return this.get("state")},getAudioTracks:function(){return null},getCaptionsList:function(){return null},getQualityLevels:function(){return null},getVisualQuality:function(){return null},getCurrentQuality:function(){return-1},getCurrentAudioTrack:function(){return-1},getSafeRegion:function(){return{x:0,y:0,width:0,height:0}},isBeforeComplete:function(){return!1},isBeforePlay:function(){return!1},createInstream:function(){return null},skipAd:function(){},attachMedia:function(){},detachMedia:function(){}});e.a=$},function(t,e,n){"use strict";n.d(e,"a",(function(){return i}));var r=n(5);function i(t){return"hls"===t.type&&r.OS.android?!1!==t.androidhls&&(!r.Browser.firefox&&parseFloat(r.OS.version.version||"0")>=4.4):null}},function(t,e,n){"use strict";function r(){var t,e,n=window.location.host;if(window.top!==window.self){n=(document.referrer?(t=document.referrer,(e=document.createElement("a")).href=t,e):{}).host;try{n=n||window.top.location.host}catch(t){}}return n}n.d(e,"a",(function(){return r}))},function(t,e,n){"use strict";var r=n(0),i=n(50),o=n(21),u=n(10),a=n(51),c=n(25),s=n(20);function l(t,e){var n=t.querySelector(e);if(n)return n.getAttribute("content")}var f=n(68),d=n.n(f),p=n(66);n.d(e,"b",(function(){return b}));function h(t){return"string"==typeof t&&/^\/\/(?:content\.jwplatform|cdn\.jwplayer)\.com\//.test(t)}function v(t){return"https:"+t}function g(t,e){var n="file:"===window.location.protocol?"https:":"",r={bidding:"//ssl.p.jwpcdn.com/player/v/8.23.1/bidding.js",jwpsrv:"//ssl.p.jwpcdn.com/player/v/8.23.1/jwpsrv.js",dai:"//ssl.p.jwpcdn.com/player/plugins/dai/v/0.5.3/dai.js",vast:"//ssl.p.jwpcdn.com/player/plugins/vast/v/8.9.7/vast.js",googima:e?"//ssl.p.jwpcdn.com/player/v/8.23.1/googimanvmp.js":"//ssl.p.jwpcdn.com/player/plugins/googima/v/8.9.1/googima.js",freewheel:"//ssl.p.jwpcdn.com/player/plugins/freewheel/v/2.2.16/freewheel.js",gapro:"//ssl.p.jwpcdn.com/player/plugins/gapro/v/2.1.5/gapro.js"}[t];return r?n+r:""}function m(t,e,n){e&&(t[e.client||g(n)]=e,delete e.client)}function b(t){var e=Object(r.j)({},t.plugins),n=Object(s.a)(t.edition);if(n("ads")){var i=Object(r.j)({},t.advertising),o=i.client;if(o)e[g(o,t.__ab_jwIMA)||o]=i,delete i.client;i.bids&&m(e,i.bids,"bidding")}if(n("jwpsrv")){var u=t.analytics;u!==Object(u)&&(u={}),m(e,u,"jwpsrv")}return m(e,t.ga,"gapro"),e}e.a=function(t,e){var f,g,m,y=Object(i.b)(t,e),j=y.key||a.default.key,w=new c.b(j),O=w.edition();if("free"===w.edition()&&(y=Object(r.j)({skin:{active:"#ff0046",timeslider:{progress:"none"}},logo:{position:"control-bar",file:d.a}},i.a,Object(r.C)(y,["analytics","aspectratio","base","file","height","playlist","sources","width"]))),y.key=j,y.edition=O,y.error=w.error(),y.generateSEOMetadata=y.generateSEOMetadata||!1,"unlimited"===O){var k=Object(o.getScriptPath)("jwplayer.js");if(!k)throw new Error("Error setting up player: Could not locate jwplayer.js script tag");n.p=k}if(y.related=function(t){var e=Object(s.a)(t.edition),n=t.related,i=!e("discovery")||n!==Object(n),o=!n||"none"!==n.displayMode,u=n||{},a=void 0===u.oncomplete?"none":u.oncomplete,c=u.autoplaytimer;!1===a||t.repeat?a="hide":"none"===a&&(c=0);var l="autoplay"===a&&c<=0||"none"===a;return Object(r.j)({},n,{disableRelated:i,showButton:o,oncomplete:a,autoplaytimer:c,shouldAutoAdvance:l})}(y),y.ab&&(y.ab=function(t){var e=t.ab;e.clone&&(e=e.clone());return Object.keys(e.tests).forEach((function(n){e.tests[n].forEach((function(e){e.addConfig&&e.addConfig(t,e.selection)}))})),e}(y)),y.plugins=b(y),f=y.playlist,Object(r.x)(f)&&f.indexOf("__CONTEXTUAL__")>-1&&(y.playlist=function(t,e){var n=(t.querySelector("title")||{}).textContent,r=l(t,'meta[property="og:title"]'),i=encodeURIComponent(r||n||""),o=l(t,'meta[property="og:description"]')||l(t,'meta[name="description"]');return o&&(i+="&page_description="+encodeURIComponent(o)),e.replace("__CONTEXTUAL__",i)}(document,y.playlist),y.contextual=!0),Object(u.isFileProtocol)()){var C=y,P=C.playlist,x=C.related;h(P)&&(y.playlist=v(P)),x&&h(x.file)&&(x.file=v(x.file))}return y.__abSendDomainToFeeds&&(m=y.playlist,/\.jwplatform.com|\.jwplayer.com/.test(m))&&(y.playlist=(g=y.playlist,g+=(-1!==g.indexOf("?")?"&":"?")+"page_domain="+encodeURIComponent(Object(p.a)()))),y}},function(t,e){t.exports='<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 150 29.3" class="jw-svg-icon jw-svg-icon-watermark" focusable="false"><path d="M37,16.68c0,2.4-.59,3.43-2.4,3.43a5.75,5.75,0,0,1-3.38-1.23v3.58a7.39,7.39,0,0,0,3.67,1c3.67,0,5.73-1.91,5.73-6.32V5.86H37Z"></path><polygon points="58.33 17.61 55.39 6.01 52.55 6.01 49.52 17.61 46.73 6.01 43.06 6.01 47.56 23.29 50.89 23.29 53.92 11.88 56.96 23.29 60.24 23.29 64.74 6.01 61.17 6.01 58.33 17.61"></polygon><path d="M73.84,6H67.47V23.29h2.2v-6.9h4.17c3.47,0,5.77-1.77,5.77-5.19S77.31,6,73.84,6Zm0,8.47H69.72V8h4.12c2.3,0,3.57,1.22,3.62,3.28C77.46,13.21,76.19,14.48,73.84,14.48Z"></path><path d="M99.2,6l-6,15.27H85V6H82.8V23.29H94.7l2-5.19h7.09l2,5.19H108L101.26,6ZM97.39,16.14l2.84-7.39L103,16.14Z"></path><polygon points="113.98 14.18 108.99 6.01 106.59 6.01 112.81 16.14 112.81 23.29 115.01 23.29 115.01 16.14 121.33 6.01 118.98 6.01 113.98 14.18"></polygon><polygon points="123.14 23.29 134.1 23.29 134.1 21.28 125.29 21.28 125.29 15.41 133.32 15.41 133.32 13.45 125.29 13.45 125.29 7.97 134.1 7.97 134.1 6.01 123.14 6.01 123.14 23.29"></polygon><path d="M144.86,15.85c2.74-.39,4.41-2,4.41-4.85,0-3.23-2.26-5-5.73-5h-6.32V23.29h2.22V16h3.08l4.94,7.29H150Zm-5.42-1.71V8h4.06c2.3,0,3.62,1.17,3.62,3.08s-1.32,3.09-3.62,3.09Z"></path><path d="M27.63.09a1,1,0,0,0-1.32.48c-.24.51-6.35,15.3-6.35,15.3-.2.46-.33.41-.33-.07,0,0,0-5.15,0-9.39,0-2.31-1.12-3.61-2.73-3.88A3.12,3.12,0,0,0,14.83,3a4.57,4.57,0,0,0-1.5,1.79c-.48.94-3.47,9.66-3.47,9.66-.16.46-.31.44-.31,0,0,0-.09-3.76-.18-4.64-.13-1.36-.44-3.59-2.2-3.7S4.77,8,4.36,9.24c-.29.84-1.65,5.35-1.65,5.35l-.2.46h0c-.06.24-.17.24-.24,0l-.11-.42Q2,14,1.74,13.31a1.71,1.71,0,0,0-.33-.66.83.83,0,0,0-.88-.22.82.82,0,0,0-.53.69,4.22,4.22,0,0,0,.07.79,29,29,0,0,0,1,4.6,1.31,1.31,0,0,0,1.8.66,3.43,3.43,0,0,0,1.24-1.81c.33-.81,2-5.48,2-5.48.18-.46.31-.44.29,0,0,0-.09,4.57-.09,6.64a13.11,13.11,0,0,0,.28,2.93,2.41,2.41,0,0,0,.82,1.27,2,2,0,0,0,1.41.4,2,2,0,0,0,.7-.24,3.15,3.15,0,0,0,.79-.71,12.52,12.52,0,0,0,1.26-2.11c.81-1.6,2.92-6.58,2.92-6.58.2-.46.33-.41.33.07,0,0-.26,8.36-.26,11.55a6.39,6.39,0,0,0,.44,2.33,2.8,2.8,0,0,0,1.45,1.61A2.57,2.57,0,0,0,18.79,29a3.76,3.76,0,0,0,1.28-1.32,15.12,15.12,0,0,0,1.07-2.31c.64-1.65,1.17-3.33,1.7-5s5-17.65,5.28-19a1.79,1.79,0,0,0,0-.46A1,1,0,0,0,27.63.09Z"></path></svg>'},function(t,e,n){"use strict";var r,i=n(62),o=n(5),u=n(7),a=[],c=[],s=[],l={},f="screen"in window&&"orientation"in window.screen,d=o.OS.android&&o.Browser.chrome,p=!1;function h(t,e){for(var n=e.length;n--;){var r=e[n];if(t.target===r.getContainer()){r.setIntersection(t);break}}}function v(){a.forEach((function(t){var e=t.model;if(!(e.get("audioMode")||e.get("isFloating")||!e.get("controls")||e.get("visibility")<.75)){var n=e.get("state"),r=Object(u.g)();!r&&"paused"===n&&t.api.getFullscreen()?t.api.setFullscreen(!1):"playing"===n&&t.api.setFullscreen(r)}}))}function g(){a.forEach((function(t){t.model.set("activeTab",Object(i.a)())}))}function m(t,e){var n=e.indexOf(t);-1!==n&&e.splice(n,1)}function b(t){s.forEach((function(e){e(t)}))}document.addEventListener("visibilitychange",g),document.addEventListener("webkitvisibilitychange",g),d&&f&&window.screen.orientation.addEventListener("change",v),window.addEventListener("beforeunload",(function(){document.removeEventListener("visibilitychange",g),document.removeEventListener("webkitvisibilitychange",g),window.removeEventListener("scroll",b),d&&f&&window.screen.orientation.removeEventListener("change",v)})),e.a={add:function(t){a.push(t)},remove:function(t){m(t,a)},addScrollHandler:function(t){p||(p=!0,window.addEventListener("scroll",b)),s.push(t)},removeScrollHandler:function(t){var e=s.indexOf(t);-1!==e&&s.splice(e,1)},addWidget:function(t){c.push(t)},removeWidget:function(t){m(t,c)},size:function(){return a.length},observe:function(t){var e;e=window.IntersectionObserver,r||(r=new e((function(t){if(t&&t.length)for(var e=t.length;e--;){var n=t[e];h(n,a),h(n,c)}}),{threshold:[0,.1,.2,.3,.4,.5,.6,.7,.8,.9,1]})),l[t.id]||(l[t.id]=!0,r.observe(t))},unobserve:function(t){r&&l[t.id]&&(delete l[t.id],r.unobserve(t))}}},,function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var r=n(0),i=n(49),o=n(7),u=n(11),a=[],c=-1;function s(){Object(i.a)(c),c=Object(i.b)((function(){a.forEach((function(t){t.view.updateBounds();var e=t.view.model.get("containerWidth");t.resized=t.width!==e,t.width=e})),a.forEach((function(t){t.contractElement.scrollLeft=2*t.width})),a.forEach((function(t){Object(u.d)(t.expandChild,{width:t.width+1}),t.resized&&t.view.model.get("visibility")&&t.view.updateStyles()})),a.forEach((function(t){t.expandElement.scrollLeft=t.width+1})),a.forEach((function(t){t.resized&&t.view.checkResized()}))}))}var l=function(){function t(t,e,n){var i={display:"block",position:"absolute",top:0,left:0},c={width:"100%",height:"100%"},l=Object(o.f)('<div style="opacity:0;visibility:hidden;overflow:hidden;"><div><div style="height:1px;"></div></div><div class="jw-contract-trigger"></div></div>'),f=l.firstChild,d=f.firstChild,p=f.nextSibling;Object(u.d)([f,p],Object(r.j)({overflow:"auto"},i,c)),Object(u.d)(l,Object(r.j)({},i,c)),this.expandElement=f,this.expandChild=d,this.contractElement=p,this.hiddenElement=l,this.element=t,this.view=e,this.model=n,this.width=0,this.resized=!1,t.firstChild?t.insertBefore(l,t.firstChild):t.appendChild(l),t.addEventListener("scroll",s,!0),a.push(this),s()}return t.prototype.destroy=function(){if(this.view){var t=a.indexOf(this);-1!==t&&a.splice(t,1),this.element.removeEventListener("scroll",s,!0),this.element.removeChild(this.hiddenElement),this.view=this.model=null}},t}()}]).default;
jwplayer.key="waIGkOXcW2ReQY3SaFocKiZvh4dMRtYiAVHjhK9HRl/GVz+O";
var button = document.getElementsByClassName('navBarBtn')[0];
var collapseNav = document.getElementsByClassName('collapseNav')[0];
var bodyElm = document.getElementsByTagName("body")[0];
var navBar = document.getElementsByClassName("navbar")[0];
var acc = document.getElementsByClassName("accordion");
var panelList = document.getElementsByClassName("panel");
var mainDiv = document.getElementsByTagName("main");
var menuOpen = false;

//this function is used t add menu background color on load
window.addEventListener("load", function (event) {
  /* code for adding black backgound for megaMenu*/
  if (window.innerWidth > 992) {
      addmenubackground();
  }
});
//this event is called on hamburger button to slide in menu panel in mobile device
button.onclick = function (e) {
  e.preventDefault();
  menuOpen = true;
  var itemA = document.getElementsByClassName("itemA");
  for (i = 0; i < itemA.length; i++) {
    if (itemA[i].classList.contains("colsm")) {
      itemA[i].classList.remove("colsm");
    }
    if (itemA[i].classList.contains("colsm2")) {
      itemA[i].classList.remove("colsm2");
    }
  }
  document.body.style.overflow = "hidden";
  document.body.style.position = "relative";
  document.documentElement.style.overflow = "hidden";
  document.documentElement.style.position = "relative";

  collapseNav.classList.toggle('d-block');
  collapseNav.classList.add("forSlideIn");

  document.getElementsByClassName("overlayDiv")[0].style.display = "block";

  stopBodyScrolling(true);
  bodyElm.addEventListener('click', function () {
    closeNav();
  });
};
/* script for accordion*/
function stopBodyScrolling(bool) {
  if (bool === true) {
    document.body.addEventListener("touchstart", freezeVp, true);
  } else {
    document.body.removeEventListener("touchstart", freezeVp, true);
  }
}
var freezeVp = function (event) {
  return false;
};
var closebtn = document.getElementsByClassName("closebtn")[0];
closebtn.addEventListener('click', function () {
  closeNav();
});

function position() {
  if (window.scrollY === 0 && document.documentElement.scrollTop === 0)
    return document.documentElement.offsetTop || document.body.parentNode.offsetTop || document.body.offsetTop;
  else
    return document.documentElement.scrollTop || document.body.parentNode.scrollTop || document.body.scrollTop;
}

function closeNav() {
  if (menuOpen) {
    menuOpen = false;
    collapseNav.classList.remove("d-block");
    collapseNav.classList.remove("forSlideIn");
      if(localStorage.searchBar == "true" && window.location.hash == "#/searchPanel") {
          document.body.style.overflow = "hidden";
      }else{

      document.body.style.overflow = "";
    }
    document.body.style.height = "";
    document.documentElement.style.overflow = "";
    document.documentElement.style.position = "";
    document.documentElement.style.position = "";
    document.getElementsByClassName("overlayDiv")[0].style.display = "none";

    stopBodyScrolling(false);
    var itemA = document.getElementsByClassName("itemA");
    itemA[0].classList.add("colsm");
    itemA[1].classList.add("colsm2");
    itemA[2].classList.add("colsm");
    if (panelList.length > 0) {
      for (var i = 0; i < panelList.length; i++) {
        acc[i].classList.remove("active");
        panelList[i].classList.remove("active");
        panelList[i].classList.add("displaynone");
      }
    }
  }
}
/* scripts separted for mobile-tab and desktop*/
if (window.innerWidth < 991) {
  for (var i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", accordianFun);
  }
} else {
  /*underline on hover over panel*/
  for (var i = 0; i < panelList.length; i++) {
    panelList[i].addEventListener("mouseover", mouseoverMegaMenu)
    panelList[i].addEventListener("mouseout", mouseoutMegaMenu)
  }

  function mouseoverMegaMenu() {
    el = this;
    el.parentNode.children[0].classList.add("underLine");
  }

  function mouseoutMegaMenu() {
    el = this;
    el.parentNode.children[0].classList.remove("underLine");
  }
}

function accordianFun(event) {
  var el = this;
  if (el.classList.contains("active")) {
    el.classList.toggle("active");
    el.parentNode.children[1].classList.add("displaynone");
    return false;
  }
  for (var i = 0; i < acc.length; i++) {
    if (acc[i].classList.contains("active") && !el.classList.contains("active")) {
      acc[i].classList.remove("active");
    }
  }
  el.classList.toggle("active");
  var panel = el.nextElementSibling;

  var active = document.querySelector(".accordion.active");
  if (active && active != this) {
    active.classList.toggle("active");
  }
  if (panelList.length > 0) {
    for (var i = 0; i < panelList.length; i++) {
      panelList[i].classList.remove("active");
      panelList[i].classList.add("displaynone");
    }
  }
  panel.classList.toggle("active");
  if (panel.classList.contains("displaynone")) {
    panel.classList.remove("displaynone");
  }
  panel.classList.add("displayblock");
  event.target.scrollIntoView();
}

if (!navBar.classList.contains("neverRestNav")) {
  navBar.addEventListener('click', function (e) {
  if ((e.target.tagName.toLowerCase() == 'a' )&&(e.target.href!= "")){
    var activeMenu = document.querySelector('.activeMenu');
    activeMenu.classList.remove("menuExpanded");
    navBar.classList.remove("backLight");
    // navBar.style.height = "";
    
    closeNav();
    for (var i = 0; i < panelList.length; i++) {
        panelList[i].parentNode.children[0].classList.remove("underLine");
    }
}
 e.stopPropagation();
});
}
window.addEventListener("resize", function (e) {
  if (window.innerWidth > 992) {
    for (var i = 0; i < panelList.length; i++) {
      if (panelList[i].classList.contains("displaynone")) {
        panelList[i].classList.remove("displaynone");
      } else if (panelList[i].classList.contains("displayblock")) {
        panelList[i].classList.remove("displayblock");
      }
    }
    addmenubackground();
    var active = document.querySelector(".accordion.active");
    if (active !== null) {
      if (active.classList.contains(active)) {
        active.classList.remove(active);
      }
    }
    var itemA = document.getElementsByClassName("itemA");
    itemA[0].classList.add("colsm");
    itemA[1].classList.add("colsm2");
    itemA[2].classList.add("colsm");
  } else {
    for (var i = 0; i < acc.length; i++) {
      acc[i].addEventListener("click", accordianFun);
      bodyElm.addEventListener('click', function () {
        closeNav();
      });
      if (acc[i].classList.contains("active") && !panelList[i].classList.contains("active")) {
        acc[i].classList.remove("active");
      }
    }
    var itemA = document.getElementsByClassName("itemA");
    itemA[0].classList.remove("colsm");
    itemA[1].classList.remove("colsm2");
    itemA[2].classList.remove("colsm");
  }
});

function addmenubackground() {
  var nav = document.getElementsByClassName("navText");
  var activeMenu = document.querySelector('.activeMenu');
  for (var i = 0; i < nav.length; i++) {
    nav[i].addEventListener('mouseenter', function () {
      if (activeMenu) {
        activeMenu.classList.add("menuExpanded");
      }
      // if (this.classList.contains("megaMenu")) {
      //   // navBar.classList.add("backLight");
      //   // var elem = this;
      //  // var menuheight = elem.getElementsByClassName("panel")[0].clientHeight;
      //  // navBar.style.height = (menuheight + 90) + "px";
      // }
    });
    nav[i].addEventListener('mouseleave', function () {
      if (activeMenu) {
        activeMenu.classList.remove("menuExpanded");
      }
      if (this.classList.contains("megaMenu")) {
        navBar.classList.remove("backLight");
        // navBar.style.height = "";
      }
    });



  }


}
var searchSection = document.getElementById('searchSection');
var searchInput = document.getElementById("searchInputG");
var huge_list = document.getElementById('globalList');
var filters = document.getElementsByClassName("filters")[0];
var pagination = document.getElementsByClassName("pagination")[0];
var tagsEl = document.getElementsByClassName("tags")[0];
var pageNumbers = document.getElementsByClassName("pageNumbers")[0];
var navDiv = document.getElementsByTagName("nav");
var populateTagsFlag = false;
var grayNav;
var itemsPerPage = 10;
var displayDetails = {};
var nodeEl = [];
var dateFilter = "";
var hashVal;
var phoneFlags = [];
var searchBtnClicked = false;
var selectDateOption = false;
var showCardsFlag = true;
var setStartCount;
var recordStartIndex = 0;
var setCount,
    setCardsCounts,
    currentPagination;
var globalSearchIcon = document.getElementsByClassName("globalSearchIcon")[0];
var searchIpBrands = document.getElementById("searchBrands");
var verSearchIp = document.getElementById("searchVerticals");
var localSearch = document.getElementsByClassName("searchImg")[0];
var myInput = document.getElementById("searchInputG");
var filterDiv = document.getElementsByClassName("filterDiv");
var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) {
        return p.toString() === "[object SafariRemoteNotification]";
    })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));
var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
if (navigator.platform === "MacIntel"){
    if (navigator.maxTouchPoints > 0){
        iOS = true;
    }
  }
  
var textareaOpen = false;
//this is called to open loader 
function openModalSpinner() {
    document.getElementsByClassName('modalGlobalSearch')[0].style.display = 'block';
    document.getElementsByClassName('fadeGlobalSearch')[0].style.display = 'block';
}
//this is called to close loader 
function closeModalSpinner() {
    document.getElementsByClassName('modalGlobalSearch')[0].style.display = 'none';
    document.getElementsByClassName('fadeGlobalSearch')[0].style.display = 'none';
}

//For handling keyboard events when clicked outside
document.addEventListener("touchend", function (e) {
    if(document.getElementById("searchSection")){
		if ((myInput != e.target) && (document.getElementById("searchSection").style.display == "block")) {
            document.activeElement.blur();
            var elem = document.getElementsByClassName("urlCopiediOs");
            if (elem.length !== 0) {
                elem[0].style.display = "none";
                elem[0].classList.remove("urlCopiediOs");
            }
        }
    }
}, true)
//For handling local search from verticals and brands pages
if (localSearch) {
    localSearch.addEventListener("click", function (event) {
        event.stopPropagation();
        searchBtnClicked = true;
        var ip = document.getElementById("searchVerticals").value;
        var inputEl = document.getElementsByClassName("inputSearch")[0];
        if (ip.replace(/\s/g, '').length > 0) {
            var searchBoxIcon = document.getElementsByClassName("searchBoxIcon")[0];
            localStorage.searchValue = ip;
            searchBoxIcon.click();
            searchDetails(event, 1);
            inputEl.addEventListener("focus", function () {
                inputEl.style.outline = "none";
                inputEl.style.color = "transparent";
                inputEl.style.textShadow = "0px 0px 0px #666";
            })
            if (window.innerWidth < 991) {
                inputEl.blur();
            }
        }
    });
}
window.onkeypress = testKeyEvent;
//Handling keyboard events for devices for verticals and brands pages (local search)
function testKeyEvent(e) {
    if (e.keyCode == 13){ //using Enter key press event for test purpose.
        document.activeElement.blur();
        if (verSearchIp) {
            var ip = document.getElementById("searchVerticals").value;
            var inputEl = document.getElementsByClassName("inputSearch")[0];
            if (ip.replace(/\s/g, '').length > 0) {
                var searchBoxIcon = document.getElementsByClassName("searchBoxIcon")[0];
                localStorage.searchValue = ip;
                searchBoxIcon.click();
                searchDetails(event, 1);
                inputEl.addEventListener("focus", function () {
                    inputEl.style.outline = "none";
                    inputEl.style.color = "transparent";
                    inputEl.style.textShadow = "0px 0px 0px #666";
                })
                if (window.innerWidth < 991) {
                    inputEl.blur();
                }
            }
        }
        if (searchIpBrands) {
            var ip = document.getElementById("searchBrands").value;
            var inputEl = document.getElementsByClassName("inputSearch")[0];
            if (ip.replace(/\s/g, '').length > 0) {
                var searchBoxIcon = document.getElementsByClassName("searchBoxIcon")[0];
                localStorage.searchValue = ip;
                searchBoxIcon.click();
                searchDetails(event, 1);
                inputEl.addEventListener("focus", function () {
                    inputEl.style.outline = "none";
                    inputEl.style.color = "transparent";
                    inputEl.style.textShadow = "0px 0px 0px #666";
                })
                if (window.innerWidth < 991) {
                    inputEl.blur();
                }
            }
        }
    }
}
// Handling input when clicked on seach icon
globalSearchIcon.addEventListener("click", function (event) {
    localStorage.hashValue = "";
    searchBtnClicked = true;
    nodeEl = [];
    dateFilter ="";
    event = event.currentTarget.previousElementSibling;
    if (validateInput(true)) {
        clearDateOptions();
        closeAllDropdown();
        searchDetails(event, 1);
    }
});
// called on window load
window.addEventListener('DOMContentLoaded', function () {
    var hash = location.hash;
    if (hash === "") {
        localStorage.searchValue = "";
        if (localStorage.searchBar == "false") {
            localStorage.hashValue = "";
        }
    }
    var searchIcon = document.getElementsByClassName("searchBoxIcon")[0];
    searchIcon.addEventListener("click", searchBoxFn);
    searchIcon.addEventListener("click", clearAll);
    // code for page refresh
    setTimeout(function () {
        if(localStorage.searchBar == "true" && window.location.hash == "#/searchPanel"){
            navDiv[0].style.visibility = "visible";
            navDiv[0].style.opacity = "1";
            navDiv[0].classList.add("navBackground");
        }
    }, 100);
    if (localStorage.searchBar == "true" && window.location.hash == "#/searchPanel") {
        populateTagsFlag = true;
        searchBtnClicked = true;
        searchBoxFn();
        if (validateInput(true)) {
            searchDetails(event, 1);
        }
    }
    else if(localStorage.searchBar == "false" && window.location.hash == "#/searchPanel"){
        populateTagsFlag = true;
        searchBtnClicked = true;
        localStorage.searchBar == "true"
        searchBoxFn();
        if (validateInput(true)) {
            searchDetails(event, 1);
        }
    }
    window.onhashchange = function () {
        localStorage.searchValue = '';
        localStorage.hashValue = '';
        searchInput.value = '';
        if(window.location.hash != "#/searchPanel"){
        localStorage.searchBar = false;
        }
        var myButton = document.getElementsByClassName("myButton");
        if (myButton.length !== 0 && videoPopupFlag) {
            popupVideoPlayPause();
        }
        //added to close video on back button
        var modalD = document.getElementById('modalD');
        if (modalD) {
            modalD.innerHTML = '';
        }

        if (modalOpen) {
            var currentDiv = document.getElementsByTagName("section");
            if (modalOverlay.classList.contains("overlaySection")) {
                modalOverlay.classList.remove("overlaySection");
            }
            modalOpen = false;
            var self = document.getElementById("modalD");
            self.classList.remove('in');
            self.style.display = 'none';
            document.body.style = '';
            document.body.classList.remove('modal-open');
            if (document.getElementsByClassName('managementModal').length) {
                var elem = document.querySelector('.managementModal');
                elem.parentNode.removeChild(elem);
                var backdrop = document.getElementById('backdropM');
                if (backdrop !== null) {
                    document.body.removeChild(backdrop);
                }
            } else {
                var backdrop = document.getElementById('backdropM');
                if (backdrop !== null) document.body.removeChild(backdrop);
            }
            for (i = 0; i < currentDiv.length; i++) {
                if (currentDiv[i].classList.contains("active") && currentDiv[i].classList.contains("noSlider")) {
                    modalOpen = true;
                }
            }

        }
        if (window.location.hash != "#/searchPanel") {
            searchSection.style.display = "none";
            searchIcon.classList.add("searchBoxIcon");
            searchIcon.classList.remove("closeSearch");
            searchIcon.parentNode.classList.remove("closeActive");
            document.body.style.overflow = "auto";
            if (navDiv[0].style.visibility == "hidden" || !navDiv[0].style.visibility) {
                navDiv[0].classList.remove("navBackground");
                if (grayNav) {
                    grayNav = false;
                    navDiv[0].classList.add("grayMenu");
                }
            }
            localStorage.searchValue = '';
            clearAll();
        }
        var articleIcon1 = document.getElementsByClassName("articleIcon1");
        var articleIcon2 = document.getElementsByClassName("articleIcon2");
        var arrowSection = document.getElementsByClassName("arrowSection");
        var soundImg = document.getElementsByClassName("soundImg");
        if (soundImg.length !== 0) {
            soundImg[0].classList.remove("addOpacityIcons");
        }
        if (articleIcon1.length !== 0) {
            for (var i = 0; i < articleIcon1.length; i++) {
                articleIcon1[i].classList.remove("addOpacityIcons");
            }
        }
        if (arrowSection.length !== 0) {
            arrowSection[0].classList.remove("addOpacityIcons");
        }
        if (articleIcon2.length !== 0) {
            for (var i = 0; i < articleIcon2.length; i++) {
                articleIcon2[i].classList.remove("addOpacityIcons");
            }
        }
    }

    searchInput.addEventListener("keydown", function (event) {

        var suggest = document.querySelectorAll(".suggestions");
        var activeSuggest = document.querySelectorAll(".suggestions.active");
        if (event.keyCode === 13) {
            if (activeSuggest.length > 0) {
                searchInput.value = activeSuggest[0].value.replace(/<b>/g, "").replace(/<\/b>/g, "");
            }
            localStorage.hashValue = "";
            nodeEl = [];
            dateFilter = "";
            clearDateOptions();
            closeAllDropdown();
            if (validateInput(false)) {
                searchDetails(event, 1);
            }
        } else {
            if (event.keyCode === 40) {
                if (activeSuggest.length > 0) {
                    if (activeSuggest[0].nextElementSibling) {
                        activeSuggest[0].nextElementSibling.focus();
                        activeSuggest[0].nextElementSibling.classList.add("active");
                        activeSuggest[0].classList.remove("active");
                    }
                } else {
                    suggest[0].classList.add("active");
                }
            } else if (event.keyCode === 38) {
                activeSuggest[0].classList.remove("active");
                if (activeSuggest.length > 0) {
                    if (activeSuggest[0].previousElementSibling) {
                        activeSuggest[0].previousElementSibling.focus();
                        activeSuggest[0].previousElementSibling.classList.add("active");
                    }
                } else {
                    suggest[0].classList.add("active");
                }
            } else {
                setTimeout(function () {
                    searchList(event);
                }, 10);
            }
        }
    });

    window.searchXHR = new XMLHttpRequest();
});

//Clears all the parameters when called
function clearAll() {
    filters.style.display = "none";
    pagination.style.display = "none";
    huge_list.innerHTML = "";
    tagsEl.innerHTML = "";
    huge_list.classList.remove("globalListMarginTop");
    if (localStorage.searchBar == "false") {
        searchInput.value = '';
        localStorage.hashValue = '';
    }
}

//Validating input according to regex
function validateInput(isGlobal) {
    var regexInput = /(.*?){0,100}$/;
    var isRegexValidated = false;

    if (searchInput.value.replace(/[#|,|;]/g,"") !== "" && searchInput.value.replace(/[#|,|;]/g,"") != null && searchInput.value.replace(/[#|,|;]/g,"") !== "undefined") {
        localStorage.searchValue = searchInput.value;
        isRegexValidated = regexInput.test(searchInput.value);
        if (isRegexValidated) {
            if (isGlobal) {
                searchInput.value = localStorage.searchValue;
            }
            return true;
        } else {
            huge_list.style.display = "block"
            // huge_list.innerHTML = "No results found!";
            huge_list.innerHTML = "<div class='errorDesc'>"+"Sorry, we couldn't find a match for your search: \""+ searchInput.value +"\"</div><div class='errorDesc'>"+"Please check for spelling errors or try a broader search term."+"</div><div class='errorDesc'>"+"Alternatively, you could:"+"<br><ul><li><a class='globalSearchSuggestion'href='https://www.tata.com/about-us'>"+"Learn more about us"+"</a></li><li>"+"Browse "+"<a class='globalSearchSuggestion' href='https://www.tata.com/business/overview'>"+"businesses and companies"+"</a></li><li>"+"Read about "+"<a class='globalSearchSuggestion' href='https://www.tata.com/community'>"+" our community work"+"</a></li><li><a class='globalSearchSuggestion' href='https://www.tata.com/careers/jobs/'>"+"Find a job"+"</a></li><li>"+"Or "+"<a class='globalSearchSuggestion' href='https://www.tata.com/newsroom/community/dogs-bombay-house'>"+"meet our friends"+"</a></li></ul></div>";
            tagsEl.innerHTML = "";
            pagination.style.display = "none";
        }
    }

    return false;
}
// for globally search a keyword
function searchBoxFn() {
    setTimeout(function () {
        document.getElementById("searchInputG").focus();
    }, 0);
    hashVal = localStorage.hashValue;
    if (hashVal) {
        searchInput.value = hashVal;
    } else if (localStorage.searchValue !== "" && localStorage.searchValue !== undefined && localStorage.searchValue !== null) {
        searchInput.value = localStorage.searchValue;
    }
    if (!document.URL.split("#")[1] == "/searchPanel" || document.URL.split("#")[1] == undefined) {
        localStorage.setItem("prevUrl", window.location.href);
        history.pushState(null, document.URL, document.URL.split("#")[0] + "#/" + "searchPanel");
    }

    var searchIcon = document.querySelector(".searchBoxIcon");

    el = searchIcon || this;
    if (el !== undefined) {
        el.classList.toggle('closeSearch');
    } else {
        return false;
    }

    var vpH = window.innerHeight;
    document.documentElement.style.height = vpH.toString() + "px";
    document.body.style.height = vpH.toString() + "px";
    var searchSection = document.getElementsByClassName("searchSection")[0];

    if (el.classList.contains("searchBoxIcon") || localStorage.searchBar != "true") {
        document.body.style.overflow = "hidden";
        navDiv[0].classList.add("navBackground");
        if (navDiv[0].classList.contains("grayMenu")) {
            grayNav = true;
        }
        navDiv[0].classList.remove("grayMenu");
        if((searchIcon == null || searchIcon == undefined) && window.location.hash == "#/searchPanel"){
            openCloseSearch(el);
        }else{

        searchIcon.classList.add("closeSearch");
        searchIcon.parentNode.classList.add("closeActive");
        searchIcon.classList.remove("searchBoxIcon");

        searchSection.style.display = "block";

        localStorage.setItem("searchBar", true);

            if (localStorage.searchBar == "false") {
            searchInput.value = '';
            localStorage.hashValue = '';
        }
    }
        
    } else if (el.classList.contains("closeSearch") || localStorage.searchBar != "false") {
        openCloseSearch(el);
    }
}
function openCloseSearch(el){

        window.history.back();
        document.body.style.overflow = "auto";

        searchIcon = el;
        searchIcon.classList.add("searchBoxIcon");
        searchIcon.classList.remove("closeSearch");
        searchIcon.parentNode.classList.remove("closeActive");
        if (navDiv[0].style.visibility == "hidden" || !navDiv[0].style.visibility) {
            navDiv[0].classList.remove("navBackground");
            if (grayNav) {
                grayNav = false;
                navDiv[0].classList.add("grayMenu");
            }
        }
        closeAllDropdown();
        clearDateOptions();

        searchSection.style.display = "none";

        localStorage.setItem("searchBar", false);
        localStorage.removeItem("searchValue");
        localStorage.removeItem("hashValue");
        searchInput.value = '';
        var clearVerticalIp = document.getElementById("searchVerticals");
        var clearBrandsIp = document.getElementById("searchBrands");
        if (clearVerticalIp) {
            clearVerticalIp.value = "";
        }
        if (clearBrandsIp) {
            clearBrandsIp.value = "";
        }
    }


//Handles suggestions while searching
function searchList(event) {

    searchBtnClicked = true;
    var min_characters = 0;
    var inputValue;

    inputValue = document.getElementById("searchInputG").value.toLowerCase().replace(/[#|,|;]/g,"");

    var urlPath = "/bin/solrResultServlet?searchType=suggest&searchTerm=";
    var param = encodeURIComponent(inputValue.replace(/[â€™â€™]/g, "'").replace(/[â€œâ€]/g, "\"").replace(/[#|,|;]/g,"")) + "&start=0&rows=10&wt=json&template=[]";

    if (inputValue) {
        if (inputValue.length <= min_characters) {
            clearAll();
            return;
        } else {
            window.searchXHR.abort();
            window.searchXHR.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    var response = JSON.parse(this.responseText);
                    huge_list.innerHTML = "";
                    huge_list.style.display = "block";
                    filters.style.display = "none";
                    huge_list.classList.remove("globalListMarginTop");
                    pagination.style.display = "none";

                    var items = response.suggest.mySuggester[inputValue.trim()].suggestions;

                    for (var i = 0; i < items.length; i++) {
                        var option = document.createElement('div');
                        option.value = items[i].term;
                        option.innerHTML = option.value;
                        option.classList.add("suggestions");
                        option.addEventListener("click", function (event) {
                            clearDateOptions(event)
                            closeAllDropdown();
                            searchInput.value = this.value.replace(/<b>/g, "").replace(/<\/b>/g, "");
                            dataLayer.push({
                                'event': 'GASearchEvent',
                                'eventCategory': 'SearchClick',
                                'eventAction': 'Click',
                                'eventLabel': searchInput.value
                            });


                            searchDetails(event, 1);
                        });
                        huge_list.appendChild(option);
                    }
                }
            };

            window.searchXHR.open("GET", urlPath + param, true);
            window.searchXHR.send();
        }
    } else {
        clearAll();
        return;
    }
}

//Handles search functionality
function searchDetails(event, currentPage) {
    openModalSpinner();
    var urlPath = "/bin/solrResultServlet?searchType=select&searchTerm=",
        recordRowCount = itemsPerPage;

    if (event || event.keyCode === 13) {
        displayDetails = {};
        rowCount = itemsPerPage;
        populateTagsFlag = true;

        if (searchInput.value === "" && localStorage.getItem("searchValue") !== "") {
            searchInput.value = localStorage.searchValue;
        } else if (searchInput.value === "" && localStorage.getItem("hashValue") !== "") {

            searchInput.value = localStorage.hashValue;
        } else if (searchInput.value !== "") {
            localStorage.searchValue = searchInput.value;
        } else if (searchInput.value === "") {
            return false;
        } else {
            localStorage.setItem("searchValue", searchInput.value);
        }
    } else if (searchInput.value !== "undefined") {
        localStorage.setItem("searchValue", searchInput.value);
    } else if (searchInput.value == "undefined") {
        searchInput.value = '';
        return false;
    }

    var isValidated = validateInput(true);
    if (isValidated) {
        // Check for empty object, to avoid calling getDisplayDetails for the first time, as no data has been fetched yet
        if (Object.keys(displayDetails).length !== 0 && displayDetails.constructor === Object) {
            var details = getDisplayDetails(displayDetails.cards.count, currentPage);
            recordStartIndex = details.records.startIndex;
            recordRowCount = details.records.rowCount === 0 ? 1 : details.records.rowCount; // Set as minimum 1 because rowCount = 0 not handled in Solr

        }

        if (nodeEl == null) {
            nodeEl = [];
        }
        if (localStorage.hashValue == "" && !localStorage.hashValue.trim()) {
            hashVal = '';
            localStorage.hashValue = '';
        }
        if (localStorage.searchValue == "" && !localStorage.searchValue.trim()) {
            localStorage.searchValue = ''
        }
        var param;
        if (("" + nodeEl)[0] === ',') {
            //nodeEl = ("" + nodeEl).substring(1)
            nodeEl.shift();
        }
        if (!showCardsFlag) {
            setCount = (currentPage - 1) * itemsPerPage - setCardsCounts;
            if (setCount < 0) {
                setCount = 0;
            }
            if (hashVal) {
                 param = "" + encodeURIComponent(localStorage.searchValue.replace(/[â€˜â€™]/g, "'").replace(/[â€œâ€]/g, "\"").replace(/[#|,|;]/g,"")) + "&tags=true&start=" + setCount + "&rows=" + recordRowCount + "&wt=json&template=[" + nodeEl + "]&selectedDate=" + dateFilter;
            } else {
                param = encodeURIComponent(localStorage.searchValue.replace(/[â€˜â€™]/g, "'").replace(/[â€œâ€]/g, "\"").replace(/[#|,|;]/g,"")) + "&start=" + setCount + "&rows=" + recordRowCount + "&wt=json&template=[" + nodeEl + "]&selectedDate="+ dateFilter;
            }
        } else {
            if (hashVal)
                param = "" + encodeURIComponent(localStorage.searchValue.replace(/[â€˜â€™]/g, "'").replace(/[â€œâ€]/g, "\"").replace(/[#|,|;]/g,"")) + "&tags=true&start=" + recordStartIndex + "&rows=" + recordRowCount + "&wt=json&template=[" + nodeEl + "]&selectedDate=" + dateFilter;
            else
            param = encodeURIComponent(localStorage.searchValue.replace(/[â€˜â€™]/g, "'").replace(/[â€œâ€]/g, "\"").replace(/[#|,|;]/g,"")) + "&start=" + recordStartIndex + "&rows=" + recordRowCount + "&wt=json&template=[" + nodeEl + "]&selectedDate="+ dateFilter;

        }

        window.searchDetailsXHR = new XMLHttpRequest();

        window.searchDetailsXHR.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                var data = JSON.parse(this.responseText);

                huge_list.innerHTML = "";

                if (!populateTagsFlag) {
                    tagsEl.innerHTML = "";
                }
                huge_list.classList.add("globalListMarginTop");

                var tags = data.facet_counts.facet_fields.template,
                    recordsList = data.response.docs;

                var cardsList = populateCardsList(data);
                huge_list.style.display = "block";
                closeModalSpinner();
                if (cardsList.length == 0 && recordsList.length == 0) {
                    // huge_list.innerHTML = "No results found!";
                    if(selectDateOption && !dateFilter == ""){
                        huge_list.innerHTML = "<div class='errorDesc noCategoryError'>"+"No results found. Try different keywords or edit search filters."+"</div>";
                    }else{
                    huge_list.innerHTML = "<div class='errorDesc'>"+"Sorry, we couldn't find a match for your search: \""+ searchInput.value +"\"</div><div class='errorDesc'>"+"Please check for spelling errors or try a broader search term."+"</div><div class='errorDesc'>"+"Alternatively, you could:"+"<br><ul><li><a class='globalSearchSuggestion'href='https://www.tata.com/about-us'>"+"Learn more about us"+"</a></li><li>"+"Browse "+"<a class='globalSearchSuggestion' href='https://www.tata.com/business/overview'>"+"businesses and companies"+"</a></li><li>"+"Read about "+"<a class='globalSearchSuggestion' href='https://www.tata.com/community'>"+" our community work"+"</a></li><li><a class='globalSearchSuggestion' href='https://www.tata.com/careers/jobs/'>"+"Find a job"+"</a></li><li>"+"Or "+"<a class='globalSearchSuggestion' href='https://www.tata.com/newsroom/community/dogs-bombay-house'>"+"meet our friends"+"</a></li></ul></div>";
                    }
                    pagination.style.display = "none";
                    if (searchBtnClicked || populateTagsFlag && event.keyCode === 13 || selectDateOption) {
                        allCheck.classList.add("hideCategory");
                        clearCategory.classList.add("hideCategory");
                        tagsEl.innerHTML = "<p>No relevant categories</p>";
                        tagsEl.classList.add("notFoundCategory");
                        searchBtnClicked = false;
                        selectDateOption = false;

                    }
                    return false;
                }

                var displayDetails = getDisplayDetails(cardsList.length, currentPage);

                if (cardsList.length > 0 && displayDetails.cards.showCards) {
                    cardsToHtml(cardsList, displayDetails.cards);
                }
                if (recordsList.length != 0) {
                    if (searchBtnClicked || populateTagsFlag && event.keyCode === 13 || selectDateOption) {
                        tagsEl.innerHTML = "";
                        populateTags(tags, recordsList.length);
                        searchBtnClicked = false;
                        selectDateOption = false;
                    }

                    if (displayDetails.records.rowCount > 0)
                        recordsToHtml(recordsList, displayDetails.records.rowCount);
                }

                var itemCount = data.response.numFound + cardsList.length;
                paginate(itemCount);
            }
        };

        window.searchDetailsXHR.open("GET", urlPath + param, true);
        window.searchDetailsXHR.send();
    }
    setTimeout(function () {
        document.activeElement.blur();
    }, 0);
}
// Handling all the parameters for pagination and search requests
function getDisplayDetails(cardsCount, currentPage) {
    var maxPageNum = Math.ceil(cardsCount / itemsPerPage);
    var cards = {
        count: cardsCount,
        startIndex: (currentPage - 1) * itemsPerPage,
        endIndex: 0,
        showCards: true
    };
    var cardCountOnLastPage = cardsCount === itemsPerPage ? itemsPerPage : cardsCount % itemsPerPage;

    displayDetails = {
        prevPage: currentPage,
        cards: {},
        records: {}
    };

    // This is last page where cards are to be displayed
    if (maxPageNum === currentPage) {
        showCardsFlag = false;
        cards.endIndex = cardsCount - 1;
        records = {
            startIndex: 0,
            rowCount: itemsPerPage - cardCountOnLastPage
        }
    }
    // This is after the last page where cards are to be shown
    //ex: cards to be shown till page 3, so this is for page 4 onwards
    else if (maxPageNum < currentPage) {
        cards.showCards = false;
        showCardsFlag = false;
        var recordCountOnSharedPage = itemsPerPage - cardCountOnLastPage,
            currentPageAdditive = (currentPage - maxPageNum - 1) * itemsPerPage;
        records = {
            startIndex: recordCountOnSharedPage + currentPageAdditive,
            rowCount: itemsPerPage
        }
    }
    // This is where only cards are shown, no records
    else {
        cards.endIndex = cards.startIndex + itemsPerPage - 1;
        records = {
            startIndex: 0,
            rowCount: 0
        }
    }

    displayDetails.cards = cards;
    displayDetails.records = records;
    setCardsCounts = cards.count;
    return displayDetails;
}

//Storing card results from sonar
function populateCardsList(data) {
    var cards = data.facet_counts.facet_fields["cardset"];

    var cardsList = [];
    for (var i = 0; i < cards.length; i++) {
        var parseDoc = JSON.parse(cards[i]);
        if (i % 2 === 0) {
            for (j = 0; j < parseDoc.length; j++) {
                if (parseDoc[j].hasOwnProperty("cards")) {
                    var resultList = parseDoc[j]["cards"];
                    for (var k = 0; k < resultList.length; k++) {
                        var foundInTitle = resultList[k].title.toLowerCase().includes(
                            searchInput.value.toLowerCase()
                        );

                        if (foundInTitle) {
                            resultList[k]["isBrand"] = "false";
                            cardsList.push(resultList[k]);
                        }
                    }
                } else {
                    for (var j = 0; j < parseDoc.length; j++) {
                        var foundInTitle = parseDoc[j].title.toLowerCase().includes(
                            searchInput.value.toLowerCase()
                        );

                        if (foundInTitle) {
                            cardsList.push(parseDoc[j]);
                        }
                    }
                }
            }
        }
    }

    return cardsList;
}
var isSafariSearch = navigator.userAgent.match(/iPhone|iPad|iPod/i);
var isSafariIphone = navigator.userAgent.match(/iPhone|iPod/i);
if (isSafariIphone) {
    var pagination = document.getElementsByClassName("pagination")[0];
    if (!pagination.classList.contains("addMargin10")) {
        pagination.classList.add("addMargin10");
    }
} else {
    if (pagination.classList.contains("addMargin10")) {
        pagination.classList.remove("addMargin10");
    }
}

//Converting cards result to HTML
function cardsToHtml(cardsList, cardsToShow) {
    for (var i = cardsToShow.startIndex; i <= cardsToShow.endIndex; i++) {
        var card = document.createElement('div');
        card.setAttribute("class", "card")
        card.setAttribute("id", "card" + i);

        var detailsDiv = document.createElement('div');
        detailsDiv.setAttribute("class", "details")

        var img = document.createElement("img");
        img.setAttribute("class", "cardImg");
        if (
            cardsList[i].desktopImagePath != "white" &&
            cardsList[i].desktopImagePath != ""
        ) {
            img.setAttribute("src", "" + cardsList[i].desktopImagePath);
        } else {
            img.setAttribute(
                "src",
                "" + "/content/dam/tata/images/footer/Tata-logo-160x125.jpg"
            );
        }
        detailsDiv.appendChild(img);

        var textDiv = document.createElement('div');
        textDiv.setAttribute("class", textDiv)
        var titleDiv = document.createElement('div');
        titleDiv.setAttribute("class", "titleDiv")
        titleDiv.setAttribute("class", "cardTitle titleLink");
        
        titleDiv.innerHTML =
            "<a target = '_blank' href='" +
            cardsList[i].redirectLink.replace("/content/tata/en", "") +
            "' class='cardTitle titleLink'><span>" +
            cardsList[i].title +
            "</span></a>";
        
        titleDiv.children[0].addEventListener("click", GAEvent)
        textDiv.appendChild(titleDiv);

        var externalLink = document.createElement('a');
        externalLink.setAttribute(
            "href",
            cardsList[i].redirectLink.replace("/content/tata/en", "")
        );
        externalLink.setAttribute("class", "externalLink cursorPointer");
        externalLink.addEventListener("click", GAEvent)

        var exterImg = document.createElement("img");
        exterImg.setAttribute(
            "src",
            "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/externalLinkIcon.svg"
        );
        exterImg.setAttribute("class", "exterImg");
        exterImg.setAttribute("alt", "Arrow");
       
        var interImg = document.createElement("img");
        interImg.setAttribute(
            "src",
            "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/arrow_icon_yellow.svg"
        );
        interImg.setAttribute("class", "exterImg");
        interImg.setAttribute("alt", "Arrow");
      
        externalLink.setAttribute("target", "_blank");
        if (cardsList[i].redirectLink.includes("/content/tata/en")) {
            externalLink.appendChild(interImg);
        } else {
            externalLink.appendChild(exterImg);
        }

        var desDiv = document.createElement('div');
        desDiv.setAttribute("class", "description");
        if (cardsList[i].description && cardsList[i].description.length > 0) {
            desDiv.innerHTML = cardsList[i].description.substring(0, 165) + " " + '...';
            desDiv.appendChild(externalLink)
            textDiv.appendChild(desDiv);
            if (titleDiv.classList.contains("addMargin")) {
                titleDiv.classList.remove("addMargin")
            }
        } else {
            titleDiv.classList.add("addMargin")
        }
        var imgDiv = document.createElement("div");
        imgDiv.setAttribute("class", "imgDiv");

        textDiv.appendChild(imgDiv);

        var copyDiv = document.createElement("div");
        copyDiv.setAttribute("class", "copyDiv");
        var copyImg = document.createElement("img");
        copyImg.setAttribute(
            "src",
            "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/copyIcon.svg"
        );
        copyImg.setAttribute("class", "copyImg cursorPointer normimg lightModeCopyImg");
        
        var copyImgActive = document.createElement("img");
        copyImgActive.setAttribute(
            "src",
            "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/copyIconActive.svg"
        );
        copyImgActive.setAttribute("class", "copyImg cursorPointer hoverimg");

        var copyImgDarkMode = document.createElement("img");
        copyImgDarkMode.setAttribute("src", "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/copyIconWhiteDarkMode.svg");
        copyImgDarkMode.setAttribute("class", "copyImg cursorPointer normimg darkModeCopyImg");
        
        var textarea = document.createElement("textarea");
        textarea.setAttribute("id", "div" + i)
        textarea.setAttribute("class", "hiddenTxtSearch");
        if (cardsList[i].redirectLink.includes("/content/tata/en")) {
            textarea.innerHTML = window.location.origin + cardsList[i].redirectLink.replace("/content/tata/en", "");
        } else {
            textarea.innerHTML = cardsList[i].redirectLink.replace("/content/tata/en", "");
        }
        var CopyTooltip = document.createElement("div");
        CopyTooltip.setAttribute("class", "copyLinkTooltip");
        CopyTooltip.innerHTML = "Copy";
        var span = document.createElement("span");
        span.classList.add("spnTextCopy");
        span.appendChild(textarea);
        copyDiv.appendChild(copyImg);
        copyDiv.appendChild(copyImgActive);
        copyDiv.appendChild(copyImgDarkMode);
        copyDiv.appendChild(CopyTooltip);
        imgDiv.appendChild(copyDiv);
        imgDiv.appendChild(span);

        if (cardsList[i].twitterLink && cardsList[i].twitterLink.length != 0) {
            var twitterLink = document.createElement("a")
            twitterLink.setAttribute("href", cardsList[i].twitterLink);
            twitterLink.setAttribute("class", "twitterLink cursorPointer");
            twitterLink.setAttribute("target", "_blank");

            var twitterImg = document.createElement("img");
            twitterImg.setAttribute(
                "src",
                "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/x-icon.svg"
            );
            twitterImg.setAttribute("class", "twitterImg lightModeTwitterImg normimg");

            var twitterImgActive = document.createElement("img");
            twitterImgActive.setAttribute(
                "src",
                "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/x-icon-active.svg"
            );
            twitterImgActive.setAttribute("class", "twitterImg hoverimg");

			var twitterImgDarkMode = document.createElement("img");
            twitterImgDarkMode.setAttribute("src", "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/x-icon-white.svg");
            twitterImgDarkMode.setAttribute("class", "twitterImg darkModeTwitterImg normimg");

            var twitterTooltip = document.createElement("div");
            twitterTooltip.setAttribute("class", "twitterTooltip");
            twitterTooltip.innerHTML = "Twitter";

            twitterLink.appendChild(twitterImg);
            twitterLink.appendChild(twitterImgActive);
            twitterLink.appendChild(twitterImgDarkMode);
            twitterLink.appendChild(twitterTooltip);

            imgDiv.appendChild(twitterLink);
        }

        if (cardsList[i].phoneDetails && cardsList[i].phoneDetails.length != 0) {
            var phoneDivSearch = document.createElement("div");
            phoneDivSearch.setAttribute("class", "phoneDivSearch");
            var phoneImg = document.createElement("img");
            phoneImg.setAttribute(
                "src",
                "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/phoneIcon.svg"
            );
            phoneImg.setAttribute("class", "phoneImg cursorPointer lightModePhoneImg");
            
            var phoneImgActive = document.createElement("img");
            phoneImgActive.setAttribute("src", "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/phoneIconActive.svg");
            phoneImgActive.setAttribute("class", "phoneImg cursorPointer hoverimg ");

            var phoneImgDarkMode = document.createElement("img");
            phoneImgDarkMode.setAttribute("src", "/etc.clientlibs/tata/clientlibs/assets/resources/img/common/globalSearch/phoneIconDarkMode.svg");
            phoneImgDarkMode.setAttribute("class", "phoneImg cursorPointer darkModePhoneImg");
        
            var phoneText = document.createElement("div");
            phoneText.setAttribute("class", "phoneTextDynamic noDisplay");
            var phonevalue = parseInt(cardsList[i].phoneDetails);

            var phoneAnchor = document.createElement("a");
            phoneAnchor.setAttribute("href", "tel:" + phonevalue);
            phoneAnchor.innerHTML = phonevalue;
            phoneText.appendChild(phoneAnchor);

            var phoneTooltip = document.createElement("div");
            phoneTooltip.setAttribute("class", "phoneTooltip");
            phoneTooltip.innerHTML = "Contact";

            phoneDivSearch.appendChild(phoneImg);
            phoneDivSearch.appendChild(phoneImgActive);
            phoneDivSearch.appendChild(phoneImgDarkMode);
            phoneDivSearch.appendChild(phoneTooltip);
            phoneDivSearch.appendChild(phoneText);

            phoneFlags[i] = true;
            phoneDivSearch.addEventListener(
                "click",
                function () {
                    if (
                        localStorage.searchBar == "true" &&
                        window.location.hash == "#/searchPanel"
                    ) {
                        var ph = document.querySelectorAll(".phoneDiv");
                        var tempflag = this.children[4].classList.contains("noDisplay");
                        flagPhone = true;
                        for (var j = 0; j < ph.length; j++) {
                            ph[j].children[4].classList.add("noDisplay");
                            ph[j].children[4].classList.add("noDisplay");
                        }

                        if (tempflag) {
                            this.children[4].classList.remove("noDisplay");
                            this.children[4].classList.remove("noDisplay");
                        } else {
                            this.children[4].classList.add("noDisplay");
                        }
                    }
                },
                false
            );

            imgDiv.appendChild(phoneDivSearch);
        }

        var lineDiv = document.createElement("div");
        lineDiv.setAttribute("class", "hrLine")
        detailsDiv.appendChild(textDiv);
        card.appendChild(detailsDiv);
        card.appendChild(lineDiv);
        huge_list.appendChild(card)
    }
}

var flagPhone = false;
document.addEventListener("click", closePhoneText, true);

function closePhoneText() {
    if (localStorage.searchBar == "true" && window.location.hash == "#/searchPanel") {
        if (flagPhone) {
            var ph = document.querySelectorAll(".phoneDivSearch");
            for (var j = 0; j < ph.length; j++) {
                ph[j].children[4].classList.add("noDisplay");
            }
        }
        flagPhone = false;
    }
}

document.addEventListener("click", openlinkCopy);

function openlinkCopy(e) {
    var linkCopy = document.querySelectorAll(".copyImg"),
        targetElement = e.target;
    if (linkCopy.length !== 0) {
        if ((targetElement.parentElement.classList.contains("copyDiv")) && !textareaOpen) {
            copyUrlModalSearch(targetElement);
            textareaOpen = false;
        } else {
            var elem = document.getElementsByClassName("urlCopiediOs");
            if (elem.length !== 0) {
                elem[0].style.display = "none";
                elem[0].classList.remove("urlCopiediOs");
            }
        }
    }
}

function copyUrlModalSearch(targetElement) {
    var linkCopy = targetElement.parentElement;
   // linkCopy.classList.add("activeUrl");
   // setTimeout(function () {
    //     if (linkCopy.classList.contains("activeUrl")) {
    //         linkCopy.classList.remove("activeUrl");
    //     }
    // }, 200);
    var textArea = linkCopy.nextElementSibling.children[0];

    if ((isSafari || iOS) && window.innerWidth < 991) {
        textArea.readOnly = false;
        var elem = document.getElementsByClassName("urlCopied" && "urlCopiediOs");
        if (elem.length !== 0) {
            elem[0].style.display = "none";
            elem[0].classList.remove("urlCopiediOs");
        }
        textArea.style.display = "block";
        textArea.classList.add("urlCopiediOs");
        textArea.focus();
        textArea.setSelectionRange(0, 99999);
        textArea.readOnly = true;
        flagCopy = true;
        textareaOpen = true;
    } else {
        textArea.style.display = "block";
        textArea.style.width = "0";
        textArea.style.height = "0";
        textArea.style.opacity = "0";
        textArea.style.zIndex = "2";
        textArea.readOnly = true;
        var copyText = textArea;
        copyText.select();
        document.execCommand("copy");
    }
}

//  Displaying checkboxes for templates shown on left panel
function populateTags(tags, recordsCount) {
    allCheck.classList.remove("hideCategory");
    clearCategory.classList.remove("hideCategory");
    tagsEl.classList.remove("notFoundCategory");
    if (tags && recordsCount != 0) {
        filters.style.display = "block";

        for (var i = 0; i < tags.length; i++) {
            if ((i % 2) === 0 && tags[i + 1] !== 0) {
                var element = document.createElement('div');

                var checkbox = document.createElement("input");
                checkbox.setAttribute("class", "searchCheck chkbox");
                checkbox.setAttribute("type", "checkbox");
                checkbox.setAttribute("id", tags[i]);

                var tagLabel = document.createElement("label");
                tagLabel.setAttribute("class", "tagName");
                tagLabel.setAttribute("for", tags[i]);
                tagLabel.innerHTML = tags[i];

                var tagCount = document.createElement("div");
                tagCount.innerHTML = " (" + tags[i + 1] + ")";
                tagCount.setAttribute("class", "tagCount");

                tagLabel.appendChild(tagCount);

                element.appendChild(checkbox);
                element.appendChild(tagLabel);
                element.setAttribute("class", "tagLists");

                tagsEl.appendChild(element);
            }
        }

        var searchCheck = document.querySelectorAll(".searchCheck");
        for (var i = 0; i < searchCheck.length; i++) {
            searchCheck[i].checked = true;
            nodeEl = [];
            searchCheck[i].addEventListener("click",searchWithTags);
        }
    }
}
if(searchSection){
    var clearTags = document.getElementById("clearTags");
    clearTags.addEventListener("click", clearAllTags);
    function clearAllTags(event) {
        var searchCheck = document.querySelectorAll(".searchCheck")
        for (var i = 0; i < searchCheck.length; i++) {
            searchCheck[i].checked = false;
        }
        nodeEl=[];
        searchDetails(event, 1);
    }
    }
//Search functionality with templates check uncheck
function searchWithTags(event) {
    showCardsFlag = true;
    var searchCheck = document.querySelectorAll(".searchCheck");
        currentSelected = this.nextSibling.htmlFor;
    if (this.id != "all") {
        var selectAllTagsFlag = true;
        for (var i = 1; i < searchCheck.length; i++) {
            var item = searchCheck[i];
            if (!item.checked)
            selectAllTagsFlag = false;
        }
        if (selectAllTagsFlag)
            searchCheck[0].checked = true;
    }

    if (!currentSelected) {
        nodeEl = [];
        for (var i = 0; i < searchCheck.length; i++) {
            var item = searchCheck[i];
            if (this.checked && this.id == 'all') {
                if (item.nextSibling.innerHTML != "All") {
                    nodeEl.push(item.nextSibling.htmlFor);
                }
                item.checked = true;
            } else if (!this.checked && this.id == 'all') {
                item.checked = false;
            } else if (this.checked) {
                if (!searchCheck[0].checked) {
                    nodeEl.push(currentSelected);
                }
            } else {
                if (item.checked) {
                    nodeEl.push(item.nextSibling.htmlFor);
                }
                searchCheck[0].checked = false;
            }
        }
    } else {
        if (this.checked) {
            nodeEl.push(currentSelected);
        } else {
            nodeEl = [];
            for (var i = 0; i < searchCheck.length; i++) {
                if (searchCheck[i].checked) {
                    searchCheck[0].checked = false;
                    nodeEl.push(searchCheck[i].nextSibling.htmlFor);
                }
            }
        }
    }

    searchDetails(event, 1);
}

//Records converted to HTML
function recordsToHtml(recordsList, recordsCountToShow) {
    if (recordsCountToShow > recordsList.length)
        recordsCountToShow = recordsList.length;

    for (var i = 0; i < recordsCountToShow; i++) {
        var option = document.createElement('div');
        option.innerHTML =
            "<img src='" +
            recordsList[i].thumbnail[0] +
            "'>" +
            "<a target = '_blank' href=' " +
            recordsList[i].url +
            " '><span>" +
            recordsList[i].title +
            "</span></a>";
        option.classList.add("searchTitle");
        option.addEventListener("click", GAEvent)
        huge_list.appendChild(option);

        var anchorUrl = document.createElement('a');
        anchorUrl.setAttribute("href", "" + recordsList[i].url);
        anchorUrl.setAttribute("target", "_blank");
        anchorUrl.value = recordsList[i].url;
        anchorUrl.innerHTML ="<span>" + window.location.origin + anchorUrl.value + "</span>";
        anchorUrl.classList.add("anchorUrl");
        anchorUrl.addEventListener("click", GAEvent)
        huge_list.appendChild(anchorUrl);

        if (recordsList[i].description) {
            var description = document.createElement('div');
            description.innerHTML = recordsList[i].description;
            description.classList.add("description");
            huge_list.appendChild(description);
        }
    }

    return recordsList;
}

//Handling Pagination
function paginate(itemCount) {
    pageNumbers.innerHTML = "";

    if (itemCount > itemsPerPage) {
        var totalPages = Math.ceil(itemCount / itemsPerPage);

        // IMPORTANT: This assumes that 'currentPage' is updated in 'displayDetails' before pagination is called
        var currentPage = displayDetails.prevPage; // Stored as 'prevPage' for use elsewhere
        var pages = getPaginationBounds(totalPages, currentPage);

        // For show-hide, can check if totalPages == getElementsByClass('pageDigits').length
        // If true, just show/hide
        // if false, create (first time)

        for (var pageNum = pages.start; pageNum <= pages.end; pageNum++) {
            var lists = document.createElement("li");
            lists.innerHTML = "<span>" + pageNum + "</span>";
            lists.classList.add("pageDigits");
            lists.addEventListener("click", function () {
                currentPage = parseInt(this.children[0].innerHTML);
                searchDetails(event, currentPage);
            });

            // This assumes that pagination is called only once on fresh search
            if (pageNum === currentPage) lists.classList.add("active");

            pageNumbers.appendChild(lists);
        }

        var arrows = document.getElementsByClassName("arrows");
        for (var i = 0; i < arrows.length; i++) {
            if (
                (currentPage === 1 &&
                    (arrows[i].classList.contains("jumpFirst") ||
                        arrows[i].classList.contains("leftArw"))) ||
                (currentPage === totalPages &&
                    (arrows[i].classList.contains("rightArw") ||
                        arrows[i].classList.contains("jumpLast")))
            ) {
                arrows[i].classList.add('disabled');
            } else {
                arrows[i].classList.remove('disabled');

                // This copies only HTML with attributes, hence DOM event listeners are removed (to avoid multiple event listeners)
                arrows[i].outerHTML = arrows[i].outerHTML;
                arrows[i].addEventListener("click", handleArrowClicks);
            }
        }
        huge_list.classList.remove('globalListPad');
        pagination.style.display = "flex";
    } else {
        huge_list.classList.add('globalListPad');
        pagination.style.display = "none";
    }

    //Handling google like pagination style : active page in center
    function getPaginationBounds(totalPages, currentPage) {
        var startPage = 0,
            endPage = 0,
            maxPages = 5;

        if (totalPages <= maxPages) {
            startPage = 1;
            endPage = totalPages;
        }
        // More than total pages so calculate start and end pages
        else {
            var center = Math.round(maxPages / 2);
            // For starting page till center page
            if (currentPage <= center) {
                startPage = 1;
                endPage = maxPages;
            }
            // For pages towards the end
            else if (currentPage + center - 1 >= totalPages) {
                startPage = totalPages - (maxPages - 1);
                endPage = totalPages;
            }
            // For middle pages
            else {
                if (maxPages % 2 === 0)
                    startPage = currentPage - center;
                else
                    startPage = currentPage - (center - 1);

                endPage = currentPage + (center - 1);
            }
        }

        return {
            start: startPage,
            end: endPage
        }
    }

    //Handling current page on click of respective arrows in pagination
    function handleArrowClicks() {
        var currentPage = 0,
            prevPage = displayDetails.prevPage;

        if (this.classList.contains("jumpFirst")) {
            currentPage = 1;
        } else if (this.classList.contains("leftArw")) {
            currentPage = prevPage - 1;
        } else if (this.classList.contains("rightArw")) {
            currentPage = prevPage + 1;
        } else if (this.classList.contains("jumpLast")) {
            currentPage = totalPages;
        }

        searchDetails(event, currentPage);
    }
}
window.addEventListener("hashchange", ()=>{
    if (document.URL.split("#")[1] == "/searchPanel"){
        searchBoxFn();
    }
});

function GAEvent() {
    if (this.getAttribute("href") != null)
        dataLayer.push({
            'event': 'GAEventSearchTermPage',
            'eventCategory': 'SearchClick',
            'eventAction': 'Click',
            'eventLabel':
                window.location.href.replace(window.location.origin, "") +
                " ? " +
                searchInput.value +
                " & " +
                this.getAttribute("href")
        });
    else
        dataLayer.push({
            'event': 'GAEventSearchTermPage',
            'eventCategory': 'SearchClick',
            'eventAction': 'Click',
            'eventLabel':
                window.location.href.replace(window.location.origin, "") +
                " ? " +
                searchInput.value +
                " & " +
                this.getElementsByTagName("a")[0].getAttribute("href")
        });
}
let touchFilter = document.getElementsByClassName("touchFilter");
let selectorFiltor = document.getElementsByClassName("selectorFiltor");
let categoryFilter = document.getElementsByClassName("categoryFilter")[0];
let dateRangeFilter = document.getElementsByClassName("dateRangeFilter")[0];
var dateFrom = document.getElementById("dateFrom");
var dateTo = document.getElementById("dateTo");
var dateRangeRadio = document.getElementsByClassName("dateRangeRadio");
var customDateRange = document.getElementsByClassName("customDateRange")[0];
var allCheck = document.getElementsByClassName("allCheck")[0];
var clearCategory = document.getElementsByClassName("clearCategory")[0];
/*to set max dates */
dateFrom.max = new Date().toISOString().split("T")[0];
dateTo.max = new Date().toISOString().split("T")[0];

/*code for mob and tab after click on filter category & daterange will be visible */
if(window.innerWidth < 992){
    for (var i = 0; i < touchFilter.length; i++){
        touchFilter[i].addEventListener("click", function (e){
        e.target.closest('.filterHeading').nextElementSibling.classList.toggle('active');
        filterDropdown(e);
    })
}
}
function filterDropdown(e){
    var filterSec = e.target.closest('.filterHeading').nextElementSibling;
    if(filterSec.classList.contains('active')){
        filterSec.classList.add('open');
        filterSec.children[0].style.height = 'auto';
    }else{
        filterSec.classList.remove('open');
        closeAllDropdown();
    }
}
function closeAllDropdown(){
    var filterWrapper = document.getElementsByClassName('filterWrapper');
    for(var i = 0; i < filterWrapper.length; i++){
        filterWrapper[i].classList.remove('open');
        filterWrapper[i].closest('.filterDiv').classList.remove('active');
        filterWrapper[i].closest('.filterDiv').getElementsByClassName('arrow-container')[0].classList.remove('rotatedArrow')
        if(window.innerWidth < 992){
            document.getElementsByClassName('filter_sec')[0].classList.remove('open');
            document.getElementsByClassName('filter_sec')[0].classList.remove('active');
        }
    }
}

/*Code to change the expand/collapse icon image on click */
for (var i = 0; i < selectorFiltor.length; i++){
    selectorFiltor[i].addEventListener("click", function (e){
        e.target.closest('.filterDiv').classList.toggle('active');
        hideShowDropdown(e);
    })
}
var DropdownButton = document.querySelectorAll('.filterDiv .arrow-background');
if (DropdownButton) {
    for (var i = 0; i < DropdownButton.length; i++) {
        DropdownButton[i].addEventListener("touchstart", touchDropDown);
        DropdownButton[i].addEventListener("touchend", touchDropDown);
        DropdownButton[i].addEventListener("touchcancel", touchDropDown);
    }
}
function touchDropDown(e){
    this.classList.toggle("arrowBackgroundHover");
}
function hideShowDropdown(e){
    var targetFilter = e.target.closest('.filterDiv');
    var filterWrapper = targetFilter.getElementsByClassName('filterWrapper')[0];
    var arrowContainer = targetFilter.getElementsByClassName('arrow-container')[0];
    if(window.innerWidth > 991){
        if(targetFilter.classList.contains('active')){
            arrowContainer.classList.add('rotatedArrow');
            filterWrapper.classList.add('open');
            filterWrapper.children[0].style.height = 'auto';
        }else{
            filterWrapper.classList.remove('open');
            arrowContainer.classList.remove('rotatedArrow');
    }
    }else{
        if(targetFilter.classList.contains('categoryFilter')){
            if(targetFilter.classList.contains('active')){
                dateRangeFilter.classList.remove('active');
                dateRangeFilter.getElementsByClassName('filterWrapper')[0].classList.remove('open');
                dateRangeFilter.getElementsByClassName('arrow-container')[0].classList.remove('rotatedArrow');
                arrowContainer.classList.add('rotatedArrow');
                filterWrapper.classList.add('open');
                filterWrapper.children[0].style.height = 'auto';
            }else{
                filterWrapper.classList.remove('open');
                arrowContainer.classList.remove('rotatedArrow');
            }
        }
        if(targetFilter.classList.contains('dateRangeFilter')){
            if(targetFilter.classList.contains('active')){
                categoryFilter.classList.remove('active');
                categoryFilter.getElementsByClassName('filterWrapper')[0].classList.remove('open');
                categoryFilter.getElementsByClassName('arrow-container')[0].classList.remove('rotatedArrow');
                arrowContainer.classList.add('rotatedArrow');
                filterWrapper.classList.add('open');
                filterWrapper.children[0].style.height = 'auto';
            }else{
                filterWrapper.classList.remove('open');
                arrowContainer.classList.remove('rotatedArrow');
            }
        }
    }
}

//To prevent manual typing in datepicker
dateFrom.addEventListener("keydown",function(e){
    e.preventDefault();
    return false;
});
dateTo.addEventListener("keydown",function(e){
    e.preventDefault();
    return false;
});
dateFrom.addEventListener("change", function(e){
    dateTo.min = this.value;
    if (dateTo.value != "" && dateFrom.value != ""){
        dateFilter = dateFrom.value+"T00:00:00Z TO "+ dateTo.value+"T23:59:99.999Z";
        nodeEl = [];
        selectDateOption = true;
        searchDetails(e, 1);
    }
});
dateTo.addEventListener("change", function(e){
    dateFrom.max = this.value;
    if (dateTo.value != "" && dateFrom.value != ""){
        dateFilter = dateFrom.value+"T00:00:00Z TO "+ dateTo.value+"T23:59:99.999Z";
        nodeEl = [];
        selectDateOption = true;
        searchDetails(e, 1);
    }    
});
var customDateRangeWrapper = document.getElementsByClassName("customDateRangeWrapper")[0];
for (var i=0; i < dateRangeRadio.length; i++){
    dateRangeRadio[i].addEventListener("change", function(e){
        //To show/hide date range options as per selection
        let today = new Date().toISOString().split('T')[0];
        if (this.id == "range"){
            customDateRangeWrapper.classList.add("open");
            customDateRange.style.height = "auto";
            if((iOS || isSafari) && window.innerWidth < 992){
                selectDateOption = true;
                dateTo.value = today;
                dateFrom.value = "2017-01-01";
                dateFilter = dateFrom.value+"T00:00:00Z TO "+ dateTo.value+"T23:59:99.999Z";
                 nodeEl = [];
                 searchDetails(e, 1);
            }
        }
        else {
            resetDateRanges();
            customDateRangeWrapper.classList.remove("open");
            dateFilter = this.value;
            selectDateOption = true;
            nodeEl = [];
            searchDetails(e, 1);
        }
    });
}

var clearDateRange = document.getElementsByClassName("clearDateRange")[0];
clearDateRange.addEventListener("click", clearDateRanges);

function clearDateOptions(e){
    var dateRangeRadio = document.getElementsByClassName("dateRangeRadio");
    nodeEl = [];
    resetDateRanges();
    
    for (var i=0; i < dateRangeRadio.length; i++){  
        if (dateRangeRadio[i].checked){
            dateRangeRadio[i].checked = false;
            customDateRangeWrapper.classList.remove("open");
            break;
        }
    }
}
function clearDateRanges(e){
    selectDateOption = true;
    clearDateOptions(e);
    searchDetails(e, 1);  
}

function resetDateRanges(){
    dateFilter = "";
    dateTo.value = "";
    dateFrom.value = "";
    dateFrom.max = new Date().toISOString().split("T")[0];
    dateTo.max = new Date().toISOString().split("T")[0];
    dateFrom.min = "2017-01-01";
    dateTo.min = "2017-01-01";
}

var urlF = "/bin/socialFeedsServlet?socialTypes=twitter,facebook,instagram";
// this for loading page from top very time refresh page is done
// if ('scrollRestoration' in history) {
//   history.scrollRestoration = 'manual';
// }

/* adding code for GA global search*/

document.getElementsByClassName("globalSearchIcon")[0].addEventListener("click", function () {
  dataLayer.push({
    event: "GASearchEvent",
    eventCategory: "Search",
    eventAction: "Click",
    eventLabel: document.getElementById("searchInputG").value
  });
  dataLayer.push({
    event: "GASearchPage",
    eventCategory: "Search",
    eventAction: "Click",
    eventLabel: window.location.origin + window.location.pathname
  });
});
//landscape view changes
var keys = { 37: 1, 38: 1, 39: 1, 40: 1 };

function preventDefault(e) {
    e.preventDefault();
}

function preventDefaultForScrollKeys(e) {
    if (keys[e.keyCode]) {
        preventDefault(e);
        return false;
    }
}

// modern Chrome requires { passive: false } when adding event
var supportsPassive = false;
try {
    window.addEventListener("test", null, Object.defineProperty({}, 'passive', {
        get: function () { supportsPassive = true; }
    }));
} catch (e) { }

var wheelOpt = supportsPassive ? { passive: false } : false;
var wheelEvent = 'onwheel' in document.createElement('div') ? 'wheel' : 'mousewheel';

// call this to Disable
function disableScroll() {
    window.addEventListener('DOMMouseScroll', preventDefault, false); // older FF
    window.addEventListener(wheelEvent, preventDefault, wheelOpt); // modern desktop
    window.addEventListener('touchmove', preventDefault, wheelOpt); // mobile
    window.addEventListener('keydown', preventDefaultForScrollKeys, false);
}

// call this to Enable
function enableScroll() {
    window.removeEventListener('DOMMouseScroll', preventDefault, false);
    window.removeEventListener(wheelEvent, preventDefault, wheelOpt);
    window.removeEventListener('touchmove', preventDefault, wheelOpt);
    window.removeEventListener('keydown', preventDefaultForScrollKeys, false);
}
//Landscape view overlay
landscapeOverlay = document.getElementsByClassName('landscapeOverlay')[0];
window.addEventListener("orientationchange", (event) => {

    if (window.orientation == 90 || window.orientation == 270 || window.orientation == -90) {
        landscapeOverlay.style.display = 'flex';
        disableScroll();
        document.activeElement.blur();
    }
    else {
        landscapeOverlay.style.display = 'none';
        enableScroll();

    }
});
if (window.orientation == 90 || window.orientation == 270 || window.orientation == -90) {
    landscapeOverlay.style.display = 'flex';
    disableScroll();
    document.activeElement.blur();
}
else {
    
    enableScroll();

}

//handling of parallax share icon
if ((window.innerWidth > 767) && (document.querySelector('.parallaxControlsStory'))) {
    var maxHeightParallax =  document.querySelector('.parallaxControlsStory').scrollHeight;
    window.addEventListener('scroll', shareIconHandler );
    window.addEventListener('DOMContentLoaded',shareIconHandler);
    window.addEventListener('fullscreenchange',function(e){        
      if(e.target.parentElement.classList.contains('largeVideo')){
          if(!document.fullscreenElement){
              shareIconHandler();
              e.target.parentElement.scrollIntoView();
          }
      }
  });
    //adjusting position if Date is not present 
    var saltDate = document.getElementsByClassName("saltDate")[0];
    var forStoryPages = document.getElementsByClassName("forStoryPages")[0];
    var parallX = document.querySelector('.parallaxControlsStory');
    if ((!saltDate) && (forStoryPages)) {
        parallX.classList.add('shareIconsPos');
    }
}
//remove class for parallax in touch devices
else if (document.querySelector('.parallaxControlsStory')){
    let shareIcons = document.querySelector('.parallaxControlsStory');
    shareIcons.classList.remove('animm');
    shareIcons.classList.remove("parallaxControlsStory");

}

/*GA for view more*/
var GAReadTrack = document.getElementsByClassName("GAReadTrack");
if (GAReadTrack.length !== 0) {
  GAReadTrack[0].addEventListener("click", function () {
    dataLayer.push({
      event: "GAViewMore",
      eventCategory: "Story View More",
      eventAction: "Click",
      eventLabel: window.location.href.replace(window.location.origin, "")
    });
  });
}

document.getElementById("searchInputG").addEventListener("keypress", function (e) {
  if (e.keyCode === 13) {
    dataLayer.push({
      event: "GASearchEvent",
      eventCategory: "Search",
      eventAction: "Enter",
      eventLabel: document.getElementById("searchInputG").value
    });
    dataLayer.push({
      event: "GASearchPage",
      eventCategory: "Search",
      eventAction: "Click",
      eventLabel: window.location.origin + window.location.pathname
    });
  }
});
/* GA global search code ends*/

var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) {
  return p.toString() === "[object SafariRemoteNotification]";
})(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));
var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
if (navigator.platform === "MacIntel"){
  if (navigator.maxTouchPoints > 0){
      iOS = true;
  }
}

var logoFlag = false;
var headerFlag = false;
var sliderObj = new Array();
var flagCopy = false;

// this for setting time interval of various carousel components 
document.addEventListener('DOMContentLoaded', function () {
  addFunc("scrollableDiv", "mousewheel", divWheel);
  for (var i = 0; i < document.getElementsByClassName("heroCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("heroCarousel")[i], 18000);
  }
  for (var i = 0; i < document.getElementsByClassName("commCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("commCarousel")[i], 15000);
  }
  for (var i = 0; i < document.getElementsByClassName("imgCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("imgCarousel")[i], 7000);
  }
  for (var i = 0; i < document.getElementsByClassName("slidesCarousel").length; i++) {
          sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("slidesCarousel")[i], 15000);
  }
  for (var i = 0; i < document.getElementsByClassName("twitter-carousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("twitter-carousel")[i], 7000);
  }
  for (var i = 0; i < document.getElementsByClassName("jobsCarouselHome").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("jobsCarouselHome")[i], 7000);
  }
  for (var i = 0; i < document.getElementsByClassName("storyCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("storyCarousel")[i], 7000);
  }
  for (var i = 0; i < document.getElementsByClassName("holdingsCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("holdingsCarousel")[i], 7000);
  }
  for (var i = 0; i < document.getElementsByClassName("careerCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("careerCarousel")[i], 7000);
  }
  for (var i = 0; i < document.getElementsByClassName("jobs-carousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("jobs-carousel")[i], 7000);
  }
  if (window.innerWidth > 576) {
    for (var i = 0; i < document.getElementsByClassName("brandsCrousel").length; i++) {
      sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("brandsCrousel")[i], 10000);
    }
  }
  for (var i = 0; i < document.getElementsByClassName("brandCarousel").length; i++) {
    sliderObj[sliderObj.length] = new CarousalComp(document.getElementsByClassName("brandCarousel")[i], 10000);
  }
  if (document.getElementsByClassName("slideDownDiv").length != 0) {
    var slideDown = document.getElementsByClassName("slideDownDiv")[0];
    slideDown.addEventListener('click', function (event) {
     // var elems = document.getElementsByClassName("mainSliderElem");
     // var elem = elems[1];
      //scrollTo(elem.offsetTop, event, elem, 2000);
    });
  }
  setTimeout(function () { }, 1000);
});

// this for loading page from top very time refresh page is done
function scrollToTop() {
  document.documentElement.scrollTop = 0;
  document.body.parentNode.scrollTop = 0;
  document.body.scrollTop = 0;
}

//this for redirecting user to homepage on click of TATA logo in footer
var footerLogo = document.querySelectorAll(".footerLogo > a")[0];
if (footerLogo.length != 0) {
  footerLogo.addEventListener("click", function () {
    logoFlag = true;
    window.open("/home-page", "_self");
  });
}
// window.addEventListener("pageshow", function (event) {
//   logoFlag = false;
//   var headerbg = document.getElementsByClassName("navbar")[0];
//   if (headerbg.classList.contains("backLight")) {
//     navBar.classList.remove("backLight");
//   }
//   var historyTraversal = event.persisted || (typeof window.performance != "undefined" && window.performance.navigation.type === 2);
//   if (historyTraversal) {
//     var modalPopup = document.getElementsByClassName("managementModal")[0];
//     if (!modalPopup) {
//       scrollToTop();
//       window.location.reload();
//     }
//   }
// });

function divWheel(event) {
  if (event.wheelDelta > 0 || event.detail < 0) {
    if (event.currentTarget.scrollTop == 0) {
      modalOpen = false;
    }
  } else {
    if (event.currentTarget.scrollHeight - event.currentTarget.scrollTop == event.currentTarget.offsetHeight) {
      modalOpen = false;
    }
  }
}

function addFunc(elemName, event, functionE) {
  var elemList = document.getElementsByClassName(elemName);
  for (var i = 0; i < elemList.length; i++) {
    elemList[i].addEventListener(event, functionE);
  }
}

//this for changing style of navbar in mobile and tabs making it as a side bar 
if (window.innerWidth < 992) {
  var nav = document.getElementsByClassName("navbar");
  var mainSliderElem = document.getElementsByClassName("mainSliderElem");
  window.onscroll = function () {
    navChange();
  };
  window.addEventListener('load', function () {
    nav[0].style.visibility = "visible";
  });

  function navChange() {
    if (document.body.scrollTop > 30 || document.documentElement.scrollTop > 30) {
      for (var i = 0; i < mainSliderElem.length; i++) {
        mainSliderElem[i].classList.add("customScroll");
        nav[0].style.visibility = "visible";
        nav[0].classList.add("navBackground");
        mainSliderElem[i].classList.remove("grayNav");
      }
    } else if (document.body.scrollTop == 0 || document.documentElement.scrollTop == 0) {
      if(localStorage.searchBar == "false" && (document.getElementById("searchSection") && document.getElementById("searchSection").style.display != "block")){
      nav[0].classList.remove("navBackground");
      }
    }
  }
}

// this for animating cards
var moduleCard = [];
var borderAnimCards = [];
moduleCard = document.querySelectorAll(".module");
borderAnimCards = document.querySelectorAll(".borderAnimCards");
var startAnim = document.querySelectorAll(".startAnim");
var jobFigures = document.querySelectorAll(".jobFigures");
var animFlag = true;

function animateCard(partial, moduleCard) {
  var viewTop = document.documentElement.scrollTop;
  var viewBtm = viewTop + document.documentElement.clientHeight;
  var animTop = moduleCard.getBoundingClientRect().top + document.documentElement.scrollTop;
  var animBtm = animTop + moduleCard.offsetHeight;
  var compareTop = partial === true ? animBtm : animTop;
  var compareBottom = partial === true ? animTop : animBtm;
  return ((compareBottom <= viewBtm) && (compareTop >= viewTop));
}
for (var i = 0; i < moduleCard.length; i++) {
  if (animateCard(true, moduleCard[i])) {
    moduleCard[i].classList.add("already-visible");
  }
}
var modalAnim = document.getElementById('modalD');
if (modalAnim !== null) {
  if (!iOS) {
    modalAnim.addEventListener('scroll', function (event) {
      var moduleCard = [];
      var borderAnimCards = [];
      moduleCard = document.querySelectorAll(".module");
      borderAnimCards = document.querySelectorAll(".borderAnimCards");
      for (var i = 0; i < moduleCard.length; i++) {
        if (animateCard(true, moduleCard[i])) {
          moduleCard[i].classList.add("come-in");
          document.querySelector(".modal .headingDiv").style.zIndex = "99";
        }
      }
      for (var i = 0; i < borderAnimCards.length; i++) {
        if (animateLine(true, borderAnimCards[i])) {
          borderAnimCards[i].classList.add("comeInBorder");
        }
      }
    });
  }
}
var startAnim = document.querySelectorAll(".startAnim");

var checkIfAnimated = false;

window.addEventListener("scroll", function (event) {
  if (checkIfAnimated === true) {
    numberAnim("active");
  }
});

//this for twitterWall counter animation as the cards are loaded without any scroll
window.addEventListener("load", function (event) {
  if (document.getElementsByClassName("twitterMentions").length === 0) {
    numberAnim("active");
    checkIfAnimated = true;
  } else {
    var twitterMentionServlet = "/bin/tweetMentionsServlet?";
    var twitterMentionServletJobLanding = "/bin/tata/jobPostingsCountServlet?";
    var tweeterMention = document.getElementsByClassName("careers");
    var tweeterMentionJoblanding = document.getElementsByClassName("jobcareers");
    if (tweeterMention.length > 0) {
      var xhttpTwitterMention = new XMLHttpRequest();
      xhttpTwitterMention.open("GET", twitterMentionServlet, true);
      xhttpTwitterMention.onload = function () {

        if (xhttpTwitterMention.readyState == 4 && xhttpTwitterMention.status === 200) {
          for (var j = 0; j < tweeterMention.length; j++) {
            if (tweeterMention[j].classList.value == "careers") {
              var temp = JSON.parse(JSON.parse(xhttpTwitterMention.response).response);
              tweeterMention[j].children[1].innerHTML = temp[j];

              checkIfAnimated = true;
            } else {
              console.log('Request failed.  Returned status of ' + xhttp.status);
            }

          }
          numberAnim("active");
        } else {
          console.log('Request failed.  Returned status of ' + xhttp.status);
        }

      };

      xhttpTwitterMention.send();
    } else {
      var xhttpTwitterMention = new XMLHttpRequest();
      xhttpTwitterMention.open("GET", twitterMentionServletJobLanding, true);
      xhttpTwitterMention.onload = function () {
        if (xhttpTwitterMention.readyState == 4 && xhttpTwitterMention.status === 200) {
          var temp = JSON.parse(xhttpTwitterMention.response).response;
          var tt = document.querySelectorAll('.startAnim');
          if (tweeterMentionJoblanding[0].getAttribute('data-usedynamicjobcountcard1') == 'true') {
            tweeterMentionJoblanding[0].children[1].innerHTML = temp.totalCount
          } else {
            tweeterMentionJoblanding[0].children[1].innerHTML = tt[0].innerHTML;
          }

          if (tweeterMentionJoblanding[1].getAttribute('data-usedynamicjobcountcard2') == 'true') {
            tweeterMentionJoblanding[1].children[1].innerHTML = temp.lastMonth;
          } else {
            tweeterMentionJoblanding[1].children[1].innerHTML = tt[1].innerHTML;
          }

          if (tweeterMentionJoblanding[2].getAttribute('data-usedynamicjobcountcard3') == 'true') {
            tweeterMentionJoblanding[2].children[1].innerHTML = temp.lastWeek;
          } else {
            tweeterMentionJoblanding[2].children[1].innerHTML = tt[2].innerHTML;
          }

          numberAnim("active");
          checkIfAnimated = true;
        } else {
          console.log('Request failed.  Returned status of ' + xhttp.status);
        }

      };
      xhttpTwitterMention.send();
    }


  }
});

//this for counter animation modified starts
var animationCount = 0;
var animationFlag = [];
var cardCount = document.querySelectorAll(".module").length;
for (var i = 0; i < cardCount; i++) {
  animationFlag[i] = true;
}

function numberAnim(postion) {
  moduleCard = document.querySelectorAll(".module");
  borderAnimCards = document.querySelectorAll(".borderAnimCards");
  for (var i = 0; i < moduleCard.length; i++) {
    if (animateCard(true, moduleCard[i])) {
      moduleCard[i].classList.add("come-in");
      if (moduleCard[i].getElementsByClassName("startAnim").length != 0 && animFlag && animationFlag[i] && (moduleCard[i].getBoundingClientRect().top > 0) && (moduleCard[i].getBoundingClientRect().top < window.innerHeight)) {
        moduleCard[i].getElementsByClassName("startAnim")[0].classList.add("jobFigures");
        if (moduleCard[i].getElementsByClassName("startAnim").length == 2)
          moduleCard[i].getElementsByClassName("startAnim")[1].classList.add("jobFigures2");
        var valFromHtml = moduleCard[i].getElementsByClassName("jobFigures")[0].innerText.trim();
        if (moduleCard[i].getElementsByClassName("jobFigures2")[0])
          var valFromHtml2 = moduleCard[i].getElementsByClassName("jobFigures2")[0].innerText.trim();

        function animateValue(id, start, end, duration, animateModule) {
          var isComma = /[0-9]+,[0-9]+/.test(end);
          var usd = /^-?(?:0|[1-9]\d{0,2}(?:,?\d{3})*)(?:\.\d+)?$/.test(end); //check for usd
          end = end.replace(/,/g, '');
          var obj = animateModule.getElementsByClassName(id)[0];
          var range = end - start;
          var minTimer = 50;
          var stepTime = Math.abs(Math.floor(duration / range));
          stepTime = Math.max(stepTime, minTimer);
          var startTime = new Date().getTime();
          var endTime = startTime + duration;
          var timer;

          function run() {
            var now = new Date().getTime();
            var remaining = Math.max((endTime - now) / duration, 0);
            var value = Math.round(end - (remaining * range));
            obj.innerHTML = value;
            if (value == end) {
              clearInterval(timer);
              obj.innerHTML = end;
            }
            //usd
            if (usd) {
              if (/(\d)(?=(\d{3})+(?!\d))/g.test(value.toString())) {
                value = value.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1,");
                obj.innerHTML = value;
              }
              //normal inr
            } else if (isComma) {
              if (value > 99999) {
                if (/(\d+)(\d{2})(\d{3})/.test(value.toString())) {
                  value = value.toString().replace(/(\d+)(\d{2})(\d{3})/, '$1' + ',' + '$2' + ',' + '$3');
                  obj.innerHTML = value;
                }
              } else {
                var temp = value % 1000;
                if (temp < 10) {
                  temp = "00" + temp;
                } else if (temp < 100) {
                  temp = "0" + temp;
                }
                obj.innerHTML = Math.floor(value / 1000) + "," + temp;
              }
            }
          }
          var timer = setInterval(run, stepTime);
          run();
        }
        animationFlag[i] = false;
        if (animationFlag[i])
          animationCount++;
        animateValue("jobFigures", 100, valFromHtml, 2000, moduleCard[i]);
        if (moduleCard[i].getElementsByClassName("jobFigures2").length != 0)
          animateValue("jobFigures2", 100, valFromHtml2, 2000, moduleCard[i]);
      }
    }
  }
  if (animationCount >= 3) {
    animFlag = false;
  }
}
// this for counter animation modified ends

// line animation
function animateLine(partial, borderAnimCards) {
  var viewTop = document.documentElement.scrollTop;
  var viewBtm = viewTop + document.documentElement.clientHeight;
  var animTop = borderAnimCards.getBoundingClientRect().top + document.documentElement.scrollTop;
  var animBtm = animTop + borderAnimCards.offsetHeight;
  var compareTop = partial === true ? animBtm : animTop;
  var compareBottom = partial === true ? animTop : animBtm;
  return ((compareBottom <= viewBtm) && (compareTop >= viewTop));
}
for (var i = 0; i < borderAnimCards.length; i++) {
  if (animateLine(true, borderAnimCards[i])) {
    borderAnimCards[i].classList.add("already-visible");
  }
}
window.addEventListener("scroll", function (event) {
  for (var i = 0; i < borderAnimCards.length; i++) {
    if (animateLine(true, borderAnimCards[i])) {
      borderAnimCards[i].classList.add("comeInBorder");
    }
  }
});

// for word limits inside div
var feeds = document.getElementsByClassName("feeds");
var fJobs = document.getElementsByClassName("fJobs");
var feedsTwitter = document.getElementsByClassName("feedsTwitter");
var managementInfo = document.getElementsByClassName("infoDiv");
for (var i = 0; i < managementInfo.length; i++) {
  var len = managementInfo[i].innerHTML.length;
  if (len >= 135) {
    managementInfo[i].innerHTML = managementInfo[i].innerHTML.substring(0, 135) + "...";
  }
}
for (var i = 0; i < feedsTwitter.length; i++) {
  if (feedsTwitter[i].className = "feedsTwitter") {
    var len = feedsTwitter[i].innerHTML.length;
    if (len >= 255) {
      feedsTwitter[i].innerHTML = feedsTwitter[i].innerHTML.substring(0, 255) + "...";
    }
  }
}
for (var i = 0; i < feeds.length; i++) {
  if (feeds[i].className == "feeds") {
    var len = feeds[i].innerHTML.length;
    if (len >= 75) {
      feeds[i].innerHTML = feeds[i].innerHTML.substring(0, 75) + "...";
    }
  }
}
for (var i = 0; i < fJobs.length; i++) {
  if (fJobs[i].className == "fJobs") {
    var len = fJobs[i].innerHTML.length;
    if (len >= 35) {
      fJobs[i].innerHTML = fJobs[i].innerHTML.substring(0, 35) + "...";
    }
  }
}
var ymlArticle = document.getElementsByClassName("ymlFeedArticle");
var ymlArticleW = document.getElementsByClassName("ymlFeedArticleW");
var ymlArticleincW = document.getElementsByClassName("ymlFeedArticleW incWidth");
var ymlTextArticle = document.getElementsByClassName("ymlTextArticle");
var infoFeedArticle = document.getElementsByClassName("infoFeedArticle");
var companyFeedArticle = document.getElementsByClassName("companyFeedArticle");

for (var i = 0; i < infoFeedArticle.length; i++) {
  if (infoFeedArticle[i].className == "infoFeedArticle") {
    var len = infoFeedArticle[i].innerHTML.length;
    if (len >= 360) {
      infoFeedArticle[i].innerHTML = infoFeedArticle[i].innerHTML.substring(0, 360) + "...";
    }
  }
}

for (var i = 0; i < companyFeedArticle.length; i++) {
  if (companyFeedArticle[i].className == "companyFeedArticle") {
    var len = companyFeedArticle[i].innerHTML.length;
    if (len >= 420) {
      if ((window.innerWidth > 991)||(window.innerWidth < 576)){
                companyFeedArticle[i].innerHTML = companyFeedArticle[i].innerHTML.substring(0, 650) + "...";
            }
      else{
                companyFeedArticle[i].innerHTML = companyFeedArticle[i].innerHTML.substring(0, 450) + "...";
            }
    }
  }
}


for (var i = 0; i < ymlArticle.length; i++) {
    var ymlarticleClosetSection = ymlArticle[i].closest('section');//added code for never-rest 1st card text
    if (ymlArticle[i].className == "ymlFeedArticle" && !ymlarticleClosetSection.classList.contains('neverRestCardsSection')) {
    var len = ymlArticle[i].innerHTML.length;
    if (len >= 90) {
      ymlArticle[i].innerHTML = ymlArticle[i].innerHTML.substring(0, 90) + "...";
    }
  }
}
for (var i = 0; i < ymlTextArticle.length; i++) {
  if (ymlTextArticle[i].className == "ymlTextArticle") {
    var len = ymlTextArticle[i].innerHTML.length;
    if (len >= 90) {
      ymlTextArticle[i].innerHTML = ymlTextArticle[i].innerHTML.substring(0, 90) + "...";
    }
  }
}
for (var i = 0; i < ymlArticleincW.length; i++) {
  if (ymlArticleincW[i].className == "ymlFeedArticleW incWidth") {
    var len = ymlArticleincW[i].innerHTML.length;
    if (len >= 90) {
      ymlArticleincW[i].innerHTML = ymlArticleincW[i].innerHTML.substring(0, 90) + "...";
    }
  }
}

for (var i = 0; i < ymlArticleW.length; i++) {
  if (ymlArticleW[i].className == "ymlFeedArticleW") {
    var len = ymlArticleW[i].innerHTML.length;
    if (len >= 90) {
      ymlArticleW[i].innerHTML = ymlArticleW[i].innerHTML.substring(0, 90) + "...";
    }
  }
}

//code for copy url Link
var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) {
  return p.toString() === "[object SafariRemoteNotification]";
})(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));
var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
if (navigator.platform === "MacIntel"){
  if (navigator.maxTouchPoints > 0){
      iOS = true;
  }
}

var linkCopy = document.querySelectorAll(".linkCopy")[0];
if (linkCopy) {
  linkCopy.addEventListener("click", copyUrl);
}

function copyUrl() {
  var imgsrc = linkCopy.getElementsByTagName("img")[0].getAttribute("src");
  var hoverimgsrc = linkCopy.getElementsByTagName("img")[1].getAttribute("src");
  linkCopy.getElementsByTagName("img")[0].src = hoverimgsrc;
  setTimeout(function () {
    linkCopy.getElementsByTagName("img")[0].src = imgsrc;
  }, 200);

  var urlCopied = document.getElementsByClassName("urlCopied")[0];

  if (iOS && (window.innerWidth < 991)) {
    urlCopied.readOnly = false;
    urlCopied.style.display = "block";
    urlCopied.classList.add("urlCopiediOs");
    urlCopied.innerHTML = window.location.href;
    urlCopied.focus();
    urlCopied.setSelectionRange(0, 99999);
    flagCopy = false;
    urlCopied.readOnly = true;
  } else {
    urlCopied.style.display = "block";
    urlCopied.style.width = "0";
    urlCopied.style.height = "0";
    urlCopied.style.opacity = "0";
    urlCopied.style.zIndex = "2";
    urlCopied.innerHTML = window.location.href;
    urlCopied.readOnly = true;
    var copyText = document.getElementsByClassName("urlCopied")[0];
    copyText.select();
    document.execCommand("copy");
  }
}

function closeOnOutsideClickCopy() {
  if (flagCopy && iOS && linkCopy) {
    var urlCopied = document.getElementsByClassName("urlCopied")[0];
    urlCopied.style.display = "none";
    urlCopied.classList.remove("urlCopiediOs");
    urlCopied.readOnly = false;
  } else {
    flagCopy = true;
  }
}
document.addEventListener("click", closeOnOutsideClickCopy);

//code for share functionality
var fb = document.querySelectorAll(".fb > .fbAnchor");
var twitter = document.querySelectorAll(".twitter > .twitterAnchor");
var linkedin = document.querySelectorAll(".linkedin > .linkedinAnchor");
var mailto = document.querySelectorAll(".mailto > .mailtoAnchor");

for (var i = 0; i < fb.length; i++) {
  if (fb || twitter || linkedin || mailto) {
    // if (fb[i]) {
    //   fb[i].addEventListener("mouseenter", chngImgColorfb);

    //   function chngImgColorfb() {
    //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/FB.svg)";
    //   }
    //   fb[i].addEventListener("mouseleave", chngImgfb);

    //   function chngImgfb() {
    //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/FB.svg)";
    //   }
    // }
    // if (twitter[i]) {
    //   twitter[i].addEventListener("mouseenter", chngImgColortwitter);

    //   function chngImgColortwitter() {
    //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/x-icon.svg)";
    //   }
    //   twitter[i].addEventListener("mouseleave", chngImgtwitter);

    //   function chngImgtwitter() {
    //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/x-icon.svg)";
    //   }
    // }
    // if (linkedin[i]) {
    //   linkedin[i].addEventListener("mouseenter", chngImgColorlinkedin);

    //   function chngImgColorlinkedin() {
    //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/LinkedIn.svg)";
    //   }
    //   linkedin[i].addEventListener("mouseleave", chngImglinkedin);

    //   function chngImglinkedin() {
    //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/LinkedIn.svg)";
    //   }
    // }
    // if (mailto[i]) {
    //   mailto[i].addEventListener("mouseenter", chngImgColormailto);

    //   function chngImgColormailto() {
    //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/Contact_Us.svg)";
    //   }
    //   mailto[i].addEventListener("mouseleave", chngImgmailto);

    //   function chngImgmailto() {
    //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/Contact_Us.svg)";
    //   }
    // }
    if (fb[i].parentElement.getAttribute("pageshare")) {
      var currentUrl = fb[i].parentElement.getAttribute("pageshare");
      if (!currentUrl.includes("tata.com")) {
        currentUrl = window.location.origin + currentUrl;
      }
      currentUrl = currentUrl.replace("/content/tata/en", "");
    } else
      var currentUrl = window.location.href;

    var twitterShareParams = "";

    if (fb[i].parentElement.hasAttribute("pagedescription")) {
      var currentDescription = fb[i].parentElement.getAttribute("pagedescription");
      if (currentDescription !== "") {
        twitterShareParams += "&text=" + encodeURIComponent(currentDescription);
      }
    } else if (document.querySelector("[name='description']")) {
      var currentDescription = document.querySelector("[name='description']").content;
      twitterShareParams += "&text=" + encodeURIComponent(currentDescription);
    }

    if (fb[i].parentElement.hasAttribute("pagehashtags")) {
      var currentHashtags = fb[i].parentElement.getAttribute("pagehashtags");
      if (currentHashtags !== "") {
        twitterShareParams += "&hashtags=" + currentHashtags;
      }
    } else if (document.querySelector("[name='hashtags']")) {
      var currentHashtags = document.querySelector("[name='hashtags']").content;
      twitterShareParams += "&hashtags=" + currentHashtags;
    }
    if (currentUrl.includes('?')) {
      let urlParts = currentUrl.split("?");
      urlParts[1] = encodeURIComponent(urlParts[1]);
      currentUrl = urlParts[0] + "?" + urlParts[1];
    }
    if (currentUrl.includes("http")) {
      fb[i].setAttribute(
        "href",
        "https://www.facebook.com/sharer/sharer.php?u=" + currentUrl
      );
      twitter[i].setAttribute(
        "href",
        "https://twitter.com/share?url=" + currentUrl + twitterShareParams
      );
      linkedin[i].setAttribute(
        "href",
        "https://www.linkedin.com/shareArticle?mini=true&url=" + currentUrl
      );
      mailto[i].setAttribute(
        "href",
        "mailto:?subject= Tata.com url&body=%20" + currentUrl
      );
    } else {
      fb[i].setAttribute(
        "href",
        "https://www.facebook.com/sharer/sharer.php?u=https://" + currentUrl
      );
      twitter[i].setAttribute(
        "href",
        "https://twitter.com/share?url=" + currentUrl + twitterShareParams
      );
      linkedin[i].setAttribute(
        "href",
        "https://www.linkedin.com/shareArticle?mini=true&url=https://" + currentUrl
      );
      mailto[i].setAttribute(
        "href",
        "mailto:?subject= Tata.com url&body=%20https://" + currentUrl
      );
    }

    var isMobile = {
      Android: function () {
        return navigator.userAgent.match(/Android/i);
      },
      BlackBerry: function () {
        return navigator.userAgent.match(/BlackBerry/i);
      },
      iOS: function () {
        return navigator.userAgent.match(/iPhone|iPad|iPod/i);
      },
      Opera: function () {
        return navigator.userAgent.match(/Opera Mini/i);
      },
      Windows: function () {
        return navigator.userAgent.match(/IEMobile/i);
      },
      any: function () {
        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
      }
    };
    var whatsApp = document.getElementsByClassName("whatsApp");
    for (var j = 0; j < whatsApp.length; j++) {
      whatsApp[j].addEventListener("click", function () {
        var whatsapp_url = "whatsapp://send?text=" + encodeURIComponent(currentUrl);
        if (isMobile.any() && this.closest(".summaryOverlayShare")){
            if (this.closest(".summaryOverlayShare").classList.contains("WA_summary_100_word")){
                whatsapp_url = whatsapp_url + encodeURIComponent("?summary=100");
            }else if (this.closest(".summaryOverlayShare").classList.contains("WA_summary_250_word")){
                whatsapp_url = whatsapp_url + encodeURIComponent("?summary=250");
            }else if (this.closest(".summaryOverlayShare").classList.contains("WA_summary_500_word")){
                whatsapp_url = whatsapp_url + encodeURIComponent("?summary=500");
            }
            window.location.href = whatsapp_url;
        }
        else if (isMobile.any()) {
            whatsapp_url = "whatsapp://send?text=" + encodeURIComponent(currentUrl);
          window.location.href = whatsapp_url;
        } else {
          console.log("Please share this article in mobile device");
        }
      });
    }
  }
}

var shareBtn = document.getElementsByClassName("shareBtn")[0];
var shareBtnParent = document.getElementsByClassName("shareBtnParent");
var shareOptions = document.getElementsByClassName("shareOptions");
var shareFlag = false;
for (var i = 0; i < shareBtnParent.length; i++) {
  shareBtnParent[i].addEventListener("click", sharePanelOpenfn);
  if (window.innerWidth > 992) {
    shareBtnParent[i].addEventListener("mouseover", function () {
      var el = this;
      if (!el.classList.contains("activeShare")) {
         if(el.children[2]){
                    el.children[0].style.display = "none";
                    el.children[1].style.display = "none";
                    el.children[2].style.display = "inline-block";
                  }else{
        el.children[0].style.display = "none";
        el.children[1].style.display = "inline-block";
      }
    }
    });
    shareBtnParent[i].addEventListener("mouseout", function () {
      var el = this;
      if (!el.classList.contains("activeShare")) {
        if(el.children[2]){
                    if(document.body.classList.contains('darkMode')){
                        el.children[0].style.display = "none";
                        el.children[1].style.display = "inline-block";
                        el.children[2].style.display = "none";
                    }else{
        el.children[0].style.display = "inline-block";
        el.children[1].style.display = "none";
        el.children[2].style.display = "none";
                    }
                    
                }else{
                    el.children[0].style.display = "inline-block";
                    el.children[1].style.display = "none";
      }
    }
    });
  }
}

//this for opening share panel
function sharePanelOpenfn() {
  var el = this;
  shareFlag = true;
  if (!el.classList.contains("activeShare")) {
    for (var i = 0; i < shareBtnParent.length; i++) {
      shareBtnParent[i].classList.remove("activeShare");
      shareOptions[i].classList.remove("active");
      if(el.children[2]){
                el.children[0].style.display = "none";
                el.children[1].style.display = "inline-block";
                el.children[2].style.display = "none";
            }else{
                el.children[0].style.display = "inline-block";
                el.children[1].style.display = "none";
            }
    }
    el.classList.add("activeShare");
    if(el.children[2]){
            el.children[0].style.display = "none";
            el.children[1].style.display = "none";
            el.children[2].style.display = "inline-block";
        }else{
    el.children[0].style.display = "none";
    el.children[1].style.display = "inline-block";
        }

    var sharePanel = el.parentElement.nextElementSibling;
    sharePanel.classList.add("active");
    document.addEventListener("click", closeSharePanel);
  } else {
    for (var i = 0; i < shareOptions.length; i++) {
      shareOptions[i].classList.remove("active");
      shareBtnParent[i].classList.remove("activeShare");
    }
    var el = this;
    if(el.children[2]){
            if(document.body.classList.contains('darkMode')){
                el.children[0].style.display = "none";
                el.children[1].style.display = "inline-block";
                el.children[2].style.display = "none";
            }else{
    el.children[0].style.display = "inline-block";
    el.children[1].style.display = "none";
    el.children[2].style.display = "none";
            }
            
        }else{
            el.children[0].style.display = "inline-block";
            el.children[1].style.display = "none";
        }
  }
}

// this for share panel in story pages
function shareLabels() {
  if (window.innerWidth < 767) {
    var parallaxControls = document.querySelectorAll(".forStoryPages > .parallaxControls")[0];
    if (parallaxControls) {
      parallaxControls.classList.remove("parallaxControls");
    }
  }
}

// this for closing share panel
function closeSharePanel() {
  if (shareFlag == false) {
    for (var i = 0; i < shareBtnParent.length; i++) {
      shareBtnParent[i].classList.remove("activeShare");
      shareOptions[i].classList.remove("active");
      el = shareBtnParent[i]
            if(el.children[2]){
                if(document.body.classList.contains('darkMode')){
                    el.children[0].style.display = "none";
                    el.children[1].style.display = "inline-block";
                    el.children[2].style.display = "none";
                }else{
                    el.children[0].style.display = "inline-block";
                    el.children[1].style.display = "none";
                    el.children[2].style.display = "none";
                }
                
            }else{
                el.children[0].style.display = "inline-block";
                el.children[1].style.display = "none";
            }
    }
  }
  shareFlag = false;
  shareLabels();
}
if (window.innerWidth < 767) {
  shareLabels();
}

//heroBanner indicator
var heroArrow = document.querySelectorAll(".heroControlsArrow > .carousel-control");
window.addEventListener('resize', function () {
  if (heroArrow) {
    for (var i = 0; i < heroArrow.length; i++) {
      heroArrow[i].addEventListener("touchstart", touchedStartFn);
      heroArrow[i].addEventListener("touchend", touchedEndFn);
    }
  }
}, true);

if (heroArrow) {
  for (var i = 0; i < heroArrow.length; i++) {
    heroArrow[i].addEventListener("touchstart", touchedStartFn);
    heroArrow[i].addEventListener("touchend", touchedEndFn);
  }
}

function touchedStartFn() {
  this.style.opacity = 1;
}

function touchedEndFn() {
  this.style.opacity = 0.5;
}

//this for load more btn animation in touch devices
var loadMoreBtn = document.getElementsByClassName("simButton");
if (window.innerWidth < 992) {
  for (var i = 0; i < loadMoreBtn.length; i++) {
    if (loadMoreBtn.length != 0) {
      loadMoreBtn[i].addEventListener("touchstart", function () {
        this.classList.add("buttonMr");
      });
      loadMoreBtn[i].addEventListener("touchend", function () {
        this.classList.remove("buttonMr");
      });
    }
  }
}

// this for banner video running in loop using jwplayer
var bannerVideo = document.getElementsByClassName("bannerVideoContdiv");
var src, posterImage;
if (bannerVideo.length !== 0) {
  bannerVideo[0].id = "bannerVideo";
  var videoDiv = bannerVideo[0].dataset;
  src = videoDiv.href;
  posterImage = videoDiv.image;
  var playerInstance = jwplayer(bannerVideo[0].id);
  playerInstance.setup({
    "skin": {
      "name": "myskin"
    },
    file: src,
    image: posterImage,
    width: "100%",
    aspectratio: "16:9",
    autostart: true,
    repeat: true,
    mute: true
  });
}

/* to hide share panel and remove actice state of share icon when scolled out of desired folds */
function sharePanelActiveScroll() {
  var shareBtnParent = document.querySelector(".shareBtnParent");
  var sharePanelImg = document.querySelectorAll(".shareBtnParent .stIcons");
  shareBtnParent.classList.remove("activeShare");
  if(sharePanelImg.length > 2){
        if(document.body.classList.contains('darkMode') && sharePanelImg[1].style.display == "none"){
            sharePanelImg[0].style.display = "none";
            sharePanelImg[1].style.display = "block";
            sharePanelImg[2].style.display = "none";
        }else if(sharePanelImg[0].style.display == "none" && !document.body.classList.contains('darkMode')){
    sharePanelImg[0].style.display = "block";
    sharePanelImg[1].style.display = "none";
            sharePanelImg[2].style.display = "none";
        }
    }
    else{
        if(sharePanelImg[0].style.display == "none"){
            sharePanelImg[0].style.display = "block";
            sharePanelImg[1].style.display = "none";
        }
  }
}
/*handling alignment of extrabuttons if the count is 4*/
var extraBtns = document.querySelectorAll(".buttons .extrabutton");
if (window.innerWidth < 575) {
  if (extraBtns.length == 4) {
    for (var i = 0; i < extraBtns.length; i++) {
      extraBtns[i].style.marginRight = "2rem";
    }
  }
}

// this for cookie popup and setting local storage in case user accepts
if (localStorage.getItem("firstTime") == null) {
  window.addEventListener("load", openModal);
  var overlay = document.getElementsByClassName("overlayPop");

  function openModal() {
    if (overlay.length != 0) {
      setTimeout(function () {
        overlay[0].classList.remove("hide");
      }, 3000);
    }
  }
}
var accept = document.getElementsByClassName("accept");
if (accept.length > 0) {
  accept[0].addEventListener("click", setCookie);
}

function setCookie() {
  localStorage.setItem("firstTime", "done");
}

var closeCookieModal = document.getElementsByClassName("closeCookieModal");
for (var i = 0; i < closeCookieModal.length; i++) {
  closeCookieModal[i].addEventListener("click", closeModal);
}

function closeModal() {
  overlay[0].classList.add("hide");
  document.body.style.overflow = "auto";
}

//facts cards 
var factsParent = document.querySelectorAll(".facts");
var colors = ["#1BA2F5", "#076AA6", "#043A5B"];
var colorsDarkMode = ["#1E76AB", "#0B4B72", "#073049"];
var colorHeri = ["#285874", "#333333", "#307FE2"];
var colorHeriDarkMode = ["#073049", "#333333", "#223D5C"];
var urlFacts = "/bin/factDataServlet?";
var sheetName = "";
var excelPath = "";
var URLCommon = urlFacts + "excelPath=" + excelPath + "&excelSheet=" + sheetName;
var elemColor;

if (factsParent) {
  for (var i = 0; i < factsParent.length; i++) {
    firstLoad(i, factsParent[i]);
  }
}

/*setting data from backend to individual card with their data appending
 individual sheet name and excel sheet path onload*/
function firstLoad(factsParentIndex, factCard) {
  //background color card
  if (factCard.children[0].children[2].children[2] != undefined) {
    sheetName = factCard.children[0].children[2].children[2].innerHTML;
    excelPath = factCard.children[0].children[2].children[3].innerHTML;
  } else {
    //background image card
    sheetName = factCard.children[2].children[2].children[2].innerHTML;
    excelPath = factCard.children[2].children[2].children[3].innerHTML;
  }

  URLCommon = urlFacts + "excelPath=" + excelPath + "&excelSheet=" + sheetName;

  var xhttp = new XMLHttpRequest();
  xhttp.open("GET", URLCommon, true);
  xhttp.onload = function () { //setting data to html on first time load
    if (xhttp.readyState == 4 && xhttp.status === 200) {
      var elemHeriToChange = factsParent[factsParentIndex].querySelectorAll(".heritageBG .titleContent");
      var elementToChange = factsParent[factsParentIndex].querySelectorAll(".changeBG .titleContent");
      var facts = factsParent[factsParentIndex].querySelectorAll(".facts .ymlFeedArticleW");
      var factsLabel = factsParent[factsParentIndex].querySelectorAll(".facts .urlLabel");
      var nextFeed = factsParent[factsParentIndex].querySelectorAll('.nextFeed');
      var data = xhttp.response;
      var res = JSON.parse(data);
      if (facts) {
        for (var i = 0; i < elemHeriToChange.length; i++) {
          if(document.body.classList.contains('darkMode')){
              elemHeriToChange[i].style.backgroundColor = colorHeriDarkMode[0];
            }else{
          elemHeriToChange[i].style.backgroundColor = colorHeri[0];
        }
      }
        for (var i = 0; i < elementToChange.length; i++) {
          if(document.body.classList.contains('darkMode')){
                        elementToChange[i].style.backgroundColor = colorsDarkMode[0];
                    }else{
          elementToChange[i].style.backgroundColor = colors[0];
                    }
        }
        for (var i = 0; i < nextFeed.length; i++) {
          facts[i].innerHTML = res.response.msg;
          factsLabel[i].innerHTML = res.response.urlLabel;
          factsLabel[i].setAttribute("href", res.response.url);
          if (res.response.url == "NA" || res.response.url == "na") { //if url is NA/na in excel
            factsLabel[i].style.display = "none";
          } else {
            factsLabel[i].style.display = "inline-block";
          }
          //handling hover effect in mobiles and ipad
          if (window.innerWidth < 992) {
            for (var j = 0; j < factsLabel.length; j++) {
              if (factsLabel.length != 0) {
                factsLabel[j].addEventListener("touchstart", function () {
                  this.style.cssText = "opacity:0.5";

                });
                factsLabel[j].addEventListener("touchend", function () {
                  this.style.cssText = "opacity:1 !important";
                });
              }
            }
          }
          nextFeed[i].setAttribute("refreshIndex", 0);
          nextFeed[i].addEventListener("click", refreshTextImg);
        }
      }
    } else {
      console.log('Request failed.  Returned status of ' + xhttp.status);
    }
  };
  xhttp.send();
}

/*changing data with individual click refresh button click*/
function refreshTextImg(e) {
  e.preventDefault();
  var elem = this;
  var factsElem = elem.previousElementSibling.children[0];
  var factsURLElem = elem.previousElementSibling.children[1];
  var lineElem = elem.previousElementSibling.children[4];
  elemColor = elem.parentElement;

  var refreshIndex = parseInt(elem.getAttribute("refreshindex")); //for color
  var refeshIndexPlus = ++refreshIndex;

  refeshIndexPlus %= colors.length;
  refeshIndexPlus %= colorHeri.length;
  elem.setAttribute("refreshindex", refeshIndexPlus);

  sheetName = elem.parentElement.children[2].children[2].innerHTML;
  excelPath = elem.parentElement.children[2].children[3].innerHTML;

  var xhttpFacts = new XMLHttpRequest();
  var newUrl = urlFacts + "excelPath=" + excelPath + "&excelSheet=" + sheetName;

  xhttpFacts.onreadystatechange = function () { //change data on individual card click
    if (xhttpFacts.readyState == 4 && xhttpFacts.status === 200) {
      //if card with changing background color, change color from array
      if (elemColor.parentElement.classList.contains("changeBG")) {
        if(document.body.classList.contains('darkMode')){
                    elemColor.style.backgroundColor = colorsDarkMode[refeshIndexPlus]
                }else{
                    elemColor.style.backgroundColor = colors[refeshIndexPlus]
                }
      }
      if (elemColor.parentElement.classList.contains("heritageBG")) {
        if(document.body.classList.contains('darkMode')){
          elemColor.style.backgroundColor = colorHeriDarkMode[refeshIndexPlus];
        }else{
        elemColor.style.backgroundColor = colorHeri[refeshIndexPlus];
      }
    }
      factsElem.style.opacity = 0;
      factsURLElem.style.opacity = 0;
      if (factsElem.classList.contains("fadeInText")) {
        factsElem.classList.remove("fadeInText");
        factsElem.style.opacity = 0;
        factsURLElem.classList.remove("fadeInText");
        factsURLElem.style.opacity = 0;
      }
      if (lineElem.classList.contains("comeInBorder")) {
        lineElem.classList.remove("comeInBorder");
        lineElem.style.opacity = 0;
      }

      //appending data from backend to html
      var jsonParse = JSON.parse(xhttpFacts.response);
      factsElem.innerHTML = jsonParse.response.msg;
      factsURLElem.innerHTML = jsonParse.response.urlLabel;
      factsURLElem.setAttribute("href", jsonParse.response.url);
      if (jsonParse.response.url == "NA" || jsonParse.response.url == "na") { //if url is NA/na in excel
        factsURLElem.style.display = "none";
      } else {
        factsURLElem.style.display = "inline-block";
      }
      addOpacityText(factsElem);
      addBorderLine(factsElem);
    }
  }
  xhttpFacts.open("GET", newUrl, true);
  xhttpFacts.send();
}

/*adding animation on text*/
function addOpacityText(a) {
  setTimeout(function () {
    a.classList.add("fadeInText");
    a.style.opacity = 1;
    a.nextElementSibling.classList.add("fadeInText");
    a.nextElementSibling.style.opacity = 1;
  }, 200);
}

/*adding animation on line*/
function addBorderLine(b) {
  setTimeout(function () {
    b.parentElement.children[4].classList.add("comeInBorder");
    b.parentElement.children[4].style.opacity = 1;
  }, 100);
}

//banner video autoplay in case it doesnot work
// window.onload = function () {
//   var bannerVideo = document.getElementById("bannerVideo");
//   if (bannerVideo)
//     bannerVideo.play();
// }

//this for styling if main para contains digits/decimals/single quote/double quotes at start
var mainpara = document.getElementsByClassName("mainPara");
if (mainpara.length != 0) {
  var splitText = mainpara[0].innerHTML.match(/^(\S+)\s(.*)/).slice(1); //split innertext into eg. "11", "abc def ghf"
  if ((hasDblQuote(splitText[0]) == true) && hasNumber(splitText[0]) == true) {
    var splitAfterDbl = splitText[0].split(/["\â€œ\""]+/);
    mainpara[0].classList.add("mainActive");
    mainpara[0].classList.remove("mainPara");
    if (splitAfterDbl[0] == "<i>") {
      document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "â€œ" + `</span><span style="float: left;font-size: 72px;line-height: 58px;padding-top: 4px;padding-right: 8px;"><i>` + splitAfterDbl[1] +
        `</span>` + splitText[1];
      if (window.innerWidth < 575) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "â€œ" + `</span><span style="float: left;font-size: 52px;line-height: 40px;padding-top: 4px;padding-right: 8px; font-weight: normal"><i>` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      } else if (window.innerWidth > 767 && window.innerWidth < 991) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "â€œ" + `</span><span style="float: left;font-size: 70px;line-height: 55px;padding-top: 4px;padding-right: 8px; font-weight: normal"><i>` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      }
    } else {
      document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "â€œ" + `</span><span style="float: left;font-size: 72px;line-height: 58px;padding-top: 4px;padding-right: 8px;">` + splitAfterDbl[1] +
        `</span>` + splitText[1];
      if (window.innerWidth < 575) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "â€œ" + `</span><span style="float: left;font-size: 52px;line-height: 40px;padding-top: 4px;padding-right: 8px; font-weight: normal">` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      } else if (window.innerWidth > 767 && window.innerWidth < 991) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "â€œ" + `</span><span style="float: left;font-size: 70px;line-height: 55px;padding-top: 4px;padding-right: 8px; font-weight: normal">` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      }
    }

  } else if ((hasSingleQuote(splitText[0]) == true) && hasNumber(splitText[0]) == true) {
    var splitAfterDbl = splitText[0].split(/["\â€˜\'"]+/);
    mainpara[0].classList.add("mainActive");
    mainpara[0].classList.remove("mainPara");
    if (splitAfterDbl[0] == "<i>") {
      document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "â€˜" + `</span><span style="float: left;font-size: 72px;line-height: 58px;padding-top: 4px;padding-right: 8px;"><i>` + splitAfterDbl[1] +
        `</span>` + splitText[1];
      if (window.innerWidth < 575) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "â€˜" + `</span><span style="float: left;font-size: 52px;line-height: 40px;padding-top: 4px;padding-right: 8px; font-weight: normal"><i>` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      } else if (window.innerWidth > 767 && window.innerWidth < 991) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "â€˜" + `</span><span style="float: left;font-size: 70px;line-height: 55px;padding-top: 4px;padding-right: 8px; font-weight: normal"><i>` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      }
    } else {
      document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "â€˜" + `</span><span style="float: left;font-size:72px;line-height: 58px;padding-top: 4px;padding-right: 8px;">` + splitAfterDbl[1] +
        `</span>` + splitText[1];
      if (window.innerWidth < 575) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "â€˜" + `</span><span style="float: left;font-size: 52px;line-height: 40px;padding-top: 4px;padding-right: 8px; font-weight: normal">` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      } else if (window.innerWidth > 767 && window.innerWidth < 991) {
        document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;">` + "â€˜" + `</span><span style="float: left;font-size: 70px;line-height: 55px;padding-top: 4px;padding-right: 8px; font-weight: normal">` + splitAfterDbl[1] +
          `</span>` + splitText[1];
      }
    }
  } else if (hasDblQuote(splitText[0]) == true) {
    var splitAfterDbl = splitText[0].split(/["\â€œ\""]+/); //split into double quotes and text eg. "â€œ" , "abc"
    if (splitAfterDbl[0] == "<i>") {
      document.getElementsByClassName("mainPara")[0].innerHTML = `<span style="float: left;">` + "â€œ" + `</span><span style="display: block;"><i>` + splitAfterDbl[1] + " " + splitText[1] + `</span>`;
    } else
      document.getElementsByClassName("mainPara")[0].innerHTML = `<span style="float: left;">` + "â€œ" + `</span><span style="display: block;">` + splitAfterDbl[1] + " " + splitText[1] + `</span>`;
  } else if (hasSingleQuote(splitText[0]) == true) {
    var splitAfterDbl = splitText[0].split(/["\â€˜\'"]+/); //split into single quote and text eg. "â€˜" , "abc"
    if (splitAfterDbl[0] == "<i>") {
      document.getElementsByClassName("mainPara")[0].innerHTML = `<span style="float: left;">` + "â€˜" + `</span><span style="display: block;"><i>` + splitAfterDbl[1] + " " + splitText[1] + `</span>`;
    } else
      document.getElementsByClassName("mainPara")[0].innerHTML = `<span style="float: left;">` + "â€˜" + `</span><span style="display: block;">` + splitAfterDbl[1] + " " + splitText[1] + `</span>`;
  } else if (hasNumber(splitText[0]) == true) {
    mainpara[0].classList.add("mainActive");
    mainpara[0].classList.remove("mainPara");
    document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;font-size: 72px;line-height: 58px;padding-top: 4px;padding-right: 8px;">` + splitText[0] +
      `</span>` + splitText[1];
    if (window.innerWidth < 575) {
      document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;font-size: 52px;line-height: 40px;padding-top: 4px;padding-right: 8px; font-weight: normal;">` + splitText[0] +
        `</span>` + splitText[1];
    } else if (window.innerWidth > 767 && window.innerWidth < 991) {
      document.getElementsByClassName("mainActive")[0].innerHTML = `<span style="float: left;font-size: 70px;line-height: 55px;padding-top: 4px;padding-right: 8px; font-weight: normal;">` + splitText[0] +
        `</span>` + splitText[1];
    }
  }
}

function hasNumber(myString) {
  return /\d*\.?\d+$/.test(myString);
}

function hasDblQuote(myString) {
  return /[â€œ||"]/.test(myString);
}

function hasSingleQuote(myString) {
  return /['||â€˜]/.test(myString);
}

var slideCount, slide, indicatorWidth;
slide = document.getElementsByClassName("homeBannerSlide");
if (slide.length > 0) {
  for (let n = 0; n < slide.length; n++) {
    slideCount = slide[n].getElementsByTagName("li").length;
    indicatorWidth = 100 / slideCount;
    for (let i = 0; i < slideCount; i++) {
      slide[0].getElementsByTagName("li")[i].style.width = indicatorWidth + "%";
    }
  }
}
//handling of parallax share icon
function shareIconHandler(){
    

        var parallaxControls = document.querySelector('.parallaxControlsStory').getBoundingClientRect();
        var parallX = document.querySelector('.parallaxControlsStory');
        var articleSectionOld = [...document.querySelectorAll('.paraDiv,.paraIconDiv, .richtext')].filter((x) => { return (x.scrollHeight > (maxHeightParallax * 1.7)) }).filter(x=>!x.classList.contains("parallaxControlsStory")).map(x => x.getBoundingClientRect());
        var articleSection = [];

        var shareOptions = document.querySelector('.shareOptions ');
        var largeImg = document.querySelectorAll(".largeImg");
        var fullImg = document.querySelectorAll(".fullImg");
        var largeVideo = document.querySelectorAll(".largeVideo");
        var dataBoxRow = document.querySelectorAll(".dataBoxRow");

        if (parallX.scrollHeight > maxHeightParallax){
            maxHeightParallax = parallX.scrollHeight;
        }
		 for (let i = 0;i < articleSectionOld.length; i++){
            articleSection.push({"top": articleSectionOld[i].top,"bottom": articleSectionOld[i].bottom});
            for (let j = 0; j < articleSectionOld.length; j++){
                if (articleSectionOld[i].bottom >= articleSectionOld[j].top){
                    if (i != j){
                        articleSection.push({"top": articleSectionOld[i].top,"bottom": articleSectionOld[j].bottom})
                    }
                }
            }
        }

        let articleCurrent = false;
        for (let article of articleSection) {
            if ((article.top <= parallaxControls.top + (maxHeightParallax/4)) && (article.bottom >= parallaxControls.top + maxHeightParallax)) {
                parallX.classList.remove('notActive');
                articleCurrent = true;
				parallX.classList.add('inView');
            }
        }

        if (!articleCurrent) {
            parallX.classList.add('notActive');
            shareOptions.classList.remove('active');
            sharePanelActiveScroll();
        }

    //Code to hide side icon for expanded/large images
    for(let i = 0; i<largeImg.length;i++){
      if((largeImg[i].getBoundingClientRect().top<=parallaxControls.top + (maxHeightParallax )) && !(largeImg[i].getBoundingClientRect().bottom <parallaxControls.top) ){
          parallX.classList.add('notActive');
          shareOptions.classList.remove('active');
          sharePanelActiveScroll();
        }
      }

    //Code to hide side icon for expanded/large video  
    for(let i = 0; i<largeVideo.length;i++){
      if((largeVideo[i].getBoundingClientRect().top<=parallaxControls.top + (maxHeightParallax )) && !(largeVideo[i].getBoundingClientRect().bottom <parallaxControls.top) ){
          parallX.classList.add('notActive');
          shareOptions.classList.remove('active');
          sharePanelActiveScroll();
      }
    }

      //Code to hide side icon for full width images
    for(let i = 0; i<fullImg.length;i++){
      if((fullImg[i].getBoundingClientRect().top<=parallaxControls.top + (maxHeightParallax )) && !(fullImg[i].getBoundingClientRect().bottom <parallaxControls.top) ){
          parallX.classList.add('notActive');
          shareOptions.classList.remove('active');
          sharePanelActiveScroll();
        }
      }
      	//code for hide side icon for data box row 
    if(window.innerWidth > 991 && window.innerWidth <= 1200){
      for(let i = 0; i<dataBoxRow.length;i++){
          if((dataBoxRow[i].getBoundingClientRect().top<=parallaxControls.top + (maxHeightParallax )) && !(dataBoxRow[i].getBoundingClientRect().bottom <parallaxControls.top) ){
              parallX.classList.add('notActive');
              shareOptions.classList.remove('active');
              sharePanelActiveScroll();
          }
      }
  }
}

//this is for health page community full card clickable
function CardClickable(event){

    event.stopImmediatePropagation();
var info = event.currentTarget.querySelector('.infoContent a').getAttribute("href");
var target=event.currentTarget.querySelector('.infoContent a').getAttribute("target")
window.open(info,target);
}  

var emphasis = document.querySelectorAll(".emphasisBox");
for (var i = 0; i < emphasis.length; i++) {
  var currentEmphasisBox = emphasis[i].parentElement;
  while(currentEmphasisBox){
      if(currentEmphasisBox.tagName == "P" || currentEmphasisBox.tagName == "UL"){
          currentEmphasisBox.classList.add(...emphasis[i].classList);
          emphasis[i].classList = [];
          break;
      }
      currentEmphasisBox = currentEmphasisBox.parentElement;
  }
}
var emphasis_doublecol_para = document.querySelectorAll(".emphasis_doublecol_para");
for (var i = 0; i < emphasis_doublecol_para.length; i++) {
  var currentEmphasis = emphasis_doublecol_para[i].parentElement;
  while(currentEmphasis){
      if(currentEmphasis.tagName == "P" || currentEmphasis.tagName == "UL"){
          currentEmphasis.classList.add(...emphasis_doublecol_para[i].classList);
          emphasis_doublecol_para[i].classList = [];
          break;
      }    
      currentEmphasis = currentEmphasis.parentElement;
  }
}
var blueEmphasis = document.querySelectorAll(".blueEmphasis");
var greyEmphasis = document.querySelectorAll(".greyEmphasis");
var orangeEmphasis = document.querySelectorAll(".orangeEmphasis");
for (var i = 0; i < blueEmphasis.length; i++){   
  if (blueEmphasis[i].nextElementSibling && blueEmphasis[i].nextElementSibling.classList.contains("blueEmphasis")){
    if(!blueEmphasis[i].nextElementSibling.classList.contains("emphasis_doublecol_para")){
   blueEmphasis[i].classList.add("noBottomSpace");
  }
   if (blueEmphasis[i].getElementsByClassName("emphasisHeading").length > 0){
       blueEmphasis[i].nextElementSibling.setAttribute('style', 'padding-top:0px !important');
    }
  }
  else if (blueEmphasis[i].nextElementSibling && blueEmphasis[i].nextElementSibling.children[0] && blueEmphasis[i].nextElementSibling.children[0].classList.contains("subHeadingsHok")){
   blueEmphasis[i].classList.add("lessBottomSpace");
  }

}
for (var i = 0; i < greyEmphasis.length; i++){   
   if (greyEmphasis[i].nextElementSibling  && greyEmphasis[i].nextElementSibling.classList.contains("greyEmphasis")){
    if(!greyEmphasis[i].nextElementSibling.classList.contains("emphasis_doublecol_para")){
       greyEmphasis[i].classList.add("noBottomSpace");
      }
       if (greyEmphasis[i].getElementsByClassName("emphasisHeading").length > 0){
           greyEmphasis[i].nextElementSibling.setAttribute('style', 'padding-top:0px !important');
       }
   }
  else if (greyEmphasis[i].nextElementSibling && greyEmphasis[i].nextElementSibling.children[0] && greyEmphasis[i].nextElementSibling.children[0].classList.contains("subHeadingsHok")){
   greyEmphasis[i].classList.add("lessBottomSpace");
  }
}
for (var i = 0; i < orangeEmphasis.length; i++){   
   if (orangeEmphasis[i].nextElementSibling && orangeEmphasis[i].nextElementSibling.classList.contains("orangeEmphasis")){
    if(!orangeEmphasis[i].nextElementSibling.classList.contains("emphasis_doublecol_para")){
       orangeEmphasis[i].classList.add("noBottomSpace");
      }
       if (orangeEmphasis[i].getElementsByClassName("emphasisHeading").length > 0){
           orangeEmphasis[i].nextElementSibling.setAttribute('style', 'padding-top:0px !important');
       }
   }
  else if (orangeEmphasis[i].nextElementSibling && orangeEmphasis[i].nextElementSibling.children[0] && orangeEmphasis[i].nextElementSibling.children[0].classList.contains("subHeadingsHok")){
   orangeEmphasis[i].classList.add("lessBottomSpace");
}
}

var ImageEmphasis = document.querySelectorAll(".ImageEmphasis");
for (var i = 0; i < ImageEmphasis.length; i++){
if (ImageEmphasis[i].nextElementSibling  && ImageEmphasis[i].nextElementSibling.classList.contains("emphasisBox")){
        ImageEmphasis[i].classList.add(...ImageEmphasis[i].nextElementSibling.classList,"noBottomSpace");
        if(ImageEmphasis[i].previousElementSibling && ImageEmphasis[i].previousElementSibling.classList.contains("emphasisBox") && ImageEmphasis[i].previousElementSibling.classList.contains("noBottomSpace")){
      ImageEmphasis[i].previousElementSibling.classList.remove("noBottomSpace")
        }
    }
}
var emphasis = document.querySelectorAll(".emphasisBox");
var emphasis_doublecol_para = document.querySelectorAll(".emphasis_doublecol_para");
for (var i = 0; i < emphasis.length; i++){
    if(emphasis[i].classList.contains('blueEmphasis') &&  emphasis[i].classList.contains("emphasis_doublecol_para") && !emphasis[i].classList.contains("hockeyImg") && !emphasis[i].getElementsByClassName("emphasisHeading").length > 0){
            var blueNewDiv1;
            var blueNewDiv2;
            if(emphasis[i].previousElementSibling){
                blueNewDiv1 = emphasis[i].previousElementSibling;
            }else if(!emphasis[i].previousElementSibling && emphasis[i].parentElement){
                blueNewDiv2 = emphasis[i].parentElement;
            }
            var blueEmphasisPara = [emphasis[i]]; 
            var blueCurrentEmphsis = emphasis[i].nextElementSibling;
            while(blueCurrentEmphsis){
                if(blueCurrentEmphsis.classList.contains("emphasis_doublecol_para") && blueCurrentEmphsis.classList.contains('blueEmphasis') && !blueCurrentEmphsis.classList.contains("hockeyImg") && !blueCurrentEmphsis.getElementsByClassName("emphasisHeading").length > 0){
                    blueEmphasisPara.push(blueCurrentEmphsis);
                    blueCurrentEmphsis = blueCurrentEmphsis.nextElementSibling;
                }else{
                    break;
                }    
            }
            var  twoColDivBlue = document.createElement('div');
            twoColDivBlue.classList.add("emphasis2ColP","emphasisBox","blueEmphasis");
            blueEmphasisPara.forEach(b => {
                twoColDivBlue.appendChild(b);
                b.classList = [];
                b.classList.add("doubleParagraph");
            });
            if(blueNewDiv1){
                blueNewDiv1.insertAdjacentElement('afterend', twoColDivBlue);
                blueNewDiv1="";
            }else if(blueNewDiv2){
                blueNewDiv2.insertBefore(twoColDivBlue, blueNewDiv2.firstChild);
                blueNewDiv2="";
            }
             //
        if(twoColDivBlue.previousElementSibling && twoColDivBlue.previousElementSibling.classList.contains("blueEmphasis") && twoColDivBlue.previousElementSibling.classList.contains("emphasis_doublecol_para") && !twoColDivBlue.previousElementSibling.classList.contains("hockeyImg")){
            twoColDivBlue.previousElementSibling.classList.add("noBottomSpace");
            twoColDivBlue.setAttribute('style', 'padding-top:0px !important');
        }
        if(twoColDivBlue.nextElementSibling && twoColDivBlue.nextElementSibling.classList.contains("blueEmphasis") && twoColDivBlue.nextElementSibling.classList.contains("emphasis_doublecol_para") && !twoColDivBlue.nextElementSibling.classList.contains("hockeyImg")){
            twoColDivBlue.classList.add('noBottomSpace');
                    } 
    }
    if(emphasis[i].classList.contains('greyEmphasis') &&  emphasis[i].classList.contains("emphasis_doublecol_para") && !emphasis[i].classList.contains("hockeyImg") && !emphasis[i].getElementsByClassName("emphasisHeading").length > 0){
            var greyNewDiv1;
            var greyNewDiv2;
            if(emphasis[i].previousElementSibling){
                greyNewDiv1 = emphasis[i].previousElementSibling;
            }else if(!emphasis[i].previousElementSibling && emphasis[i].parentElement){
                greyNewDiv2 = emphasis[i].parentElement;
            }
            var greyEmphasisPara = [emphasis[i]];   
            var greyCurrentEmphsis = emphasis[i].nextElementSibling;
            while(greyCurrentEmphsis){
                if(greyCurrentEmphsis.classList.contains("emphasis_doublecol_para") && greyCurrentEmphsis.classList.contains('greyEmphasis') && !greyCurrentEmphsis.classList.contains("hockeyImg") && !greyCurrentEmphsis.getElementsByClassName("emphasisHeading").length > 0){
                    greyEmphasisPara.push(greyCurrentEmphsis);
                    greyCurrentEmphsis = greyCurrentEmphsis.nextElementSibling;
                }else{
                    break;
                }    
            }
            var  twoColDivgrey = document.createElement('div');
            twoColDivgrey.classList.add("emphasis2ColP","emphasisBox","greyEmphasis");
            greyEmphasisPara.forEach(g => {
                twoColDivgrey.appendChild(g);
                g.classList = [];
                g.classList.add("doubleParagraph");
            });
            if(greyNewDiv1){
                greyNewDiv1.insertAdjacentElement('afterend', twoColDivgrey);
                greyNewDiv1="";
            }else if(greyNewDiv2){
                greyNewDiv2.insertBefore(twoColDivgrey, greyNewDiv2.firstChild);
                greyNewDiv2="";
            }
        //
        if(twoColDivgrey.previousElementSibling && twoColDivgrey.previousElementSibling.classList.contains("greyEmphasis") && twoColDivgrey.previousElementSibling.classList.contains("emphasis_doublecol_para") && !twoColDivgrey.previousElementSibling.classList.contains("hockeyImg")){
            twoColDivgrey.previousElementSibling.classList.add("noBottomSpace");
            twoColDivgrey.setAttribute('style', 'padding-top:0px !important');
        }
        if(twoColDivgrey.nextElementSibling && twoColDivgrey.nextElementSibling.classList.contains("greyEmphasis") && twoColDivgrey.nextElementSibling.classList.contains("emphasis_doublecol_para") && !twoColDivgrey.nextElementSibling.classList.contains("hockeyImg")){
            twoColDivgrey.classList.add('noBottomSpace');
                    }
    }
    if(emphasis[i].classList.contains('orangeEmphasis') &&  emphasis[i].classList.contains("emphasis_doublecol_para") && !emphasis[i].classList.contains("hockeyImg") && !emphasis[i].getElementsByClassName("emphasisHeading").length > 0){
            var orangeNewDiv1;
            var orangeNewDiv2;
            if(emphasis[i].previousElementSibling){
                orangeNewDiv1 = emphasis[i].previousElementSibling;
            }else if(!emphasis[i].previousElementSibling && emphasis[i].parentElement){
                orangeNewDiv2 = emphasis[i].parentElement;
            }
            var orangeEmphasisPara = [emphasis[i]];   
            var orangeCurrentEmphsis = emphasis[i].nextElementSibling;
            while(orangeCurrentEmphsis){
                if(orangeCurrentEmphsis.classList.contains("emphasis_doublecol_para") && orangeCurrentEmphsis.classList.contains('orangeEmphasis') && !orangeCurrentEmphsis.classList.contains("hockeyImg") && !orangeCurrentEmphsis.getElementsByClassName("emphasisHeading").length > 0){
                    orangeEmphasisPara.push(orangeCurrentEmphsis);
                    orangeCurrentEmphsis = orangeCurrentEmphsis.nextElementSibling;
                }else{
                    break;
                }    
            }
            var  twoColDivorange = document.createElement('div');
            twoColDivorange.classList.add("emphasis2ColP","emphasisBox","orangeEmphasis");
            orangeEmphasisPara.forEach(o => {
                twoColDivorange.appendChild(o);
                o.classList = [];
                o.classList.add("doubleParagraph");
            });
            if(orangeNewDiv1){
                orangeNewDiv1.insertAdjacentElement('afterend', twoColDivorange);
                orangeNewDiv1="";
            }else if(orangeNewDiv2){
                orangeNewDiv2.insertBefore(twoColDivorange, orangeNewDiv2.firstChild);
                orangeNewDiv2="";
            }
        //
        if(twoColDivorange.previousElementSibling && twoColDivorange.previousElementSibling.classList.contains("orangeEmphasis") && twoColDivorange.previousElementSibling.classList.contains("emphasis_doublecol_para") && !twoColDivorange.previousElementSibling.classList.contains("hockeyImg")){
            twoColDivorange.previousElementSibling.classList.add("noBottomSpace");
            twoColDivorange.setAttribute('style', 'padding-top:0px !important');
        }
        if(twoColDivorange.nextElementSibling && twoColDivorange.nextElementSibling.classList.contains("orangeEmphasis") && twoColDivorange.nextElementSibling.classList.contains("emphasis_doublecol_para") && !twoColDivorange.nextElementSibling.classList.contains("hockeyImg")){
          twoColDivorange.classList.add('noBottomSpace');
        }    
    }
}
var ymlCardVideoTag = document.querySelectorAll(".ymlCardVideo");

if(ymlCardVideoTag.length !== 0){

  function isVisibleCard(element){
    var vid = element.getBoundingClientRect();
    return vid.top <= window.innerHeight && vid.bottom >= 0;
}

function playVideo(video){
    if(video.paused === true){
        try{
            video.play().catch(function(error){
            })
        } catch(error){
        }
    }
}
function pauseVideo(video){
    if(video.paused === false){
    video.pause();
  }
}
function checkVisibility(){
  ymlCardVideoTag.forEach((video) => {  
    if(document.visibilityState === "hidden"){
            pauseVideo(video);
        }else if(document.visibilityState === "visible"){
          playPauseVideoVisibility(video);
        }
  });    
}
window.addEventListener("DOMContentLoaded", function(){
    ymlCardVideoload();
    cardOnView();
    windowSizeForiOS();
})

window.addEventListener('scroll',function(){
  cardOnView();
});

window.addEventListener("focus", function () { 
    checkVisibility(); 
});

window.addEventListener("blur", function () {
  ymlCardVideoTag.forEach((video) => {
    pauseVideo(video)
  });
});
window.addEventListener('visibilitychange',function(){
    checkVisibility();
});

function ymlCardVideoload(){
    for (var i = 0; i < ymlCardVideoTag.length; i++) {
        if(!(ymlCardVideoTag[i].children[0].getAttribute('src').trim() == "")){
            ymlCardVideoTag[i].parentElement.children[0].lastElementChild.classList.add("noDisplay")
            ymlCardVideoTag[i].setAttribute("poster",ymlCardVideoTag[i].parentElement.children[0].lastElementChild.src);
        }else{
            ymlCardVideoTag[i].remove();
        }
    } 
}
window.onpageshow = function(){
    setTimeout(() => {
      cardOnView();
    }, 500);
}
function playPauseVideoVisibility(video){
  if(isVisibleCard(video)){
            if(video.paused === true){
              playVideo(video)
            }
        }
        else {
          if(video.paused === false){
            pauseVideo(video)            
        }
    }
}
function windowSizeForiOS(){
  var ymlCardVideoTag = document.querySelectorAll(".ymlCardVideo");
  var isIOSDevices = /(Mac|iPhone|iPod|iPad)/i.test(navigator.userAgent);
    if(isIOSDevices){
        var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
        if(isSafari){
            var browserVersion = navigator.userAgent.match(/Version\/(\d+\.\d+)/);
            var versionIs = parseFloat(browserVersion[1]);
            if(versionIs === 15.5 || versionIs === 15.6){
                for(var i = 0; i<ymlCardVideoTag.length; i++){
                    ymlCardVideoTag[i].style= "object-fit:cover";
                }
            }
        }
        //Check mac firefox browser 
        if(navigator.userAgent.toLowerCase().indexOf('mac') >= 0 && navigator.userAgent.toLowerCase().indexOf('firefox') > -1){
            for (var i = 0; i < ymlCardVideoTag.length; i++) {
                ymlCardVideoTag[i].parentElement.children[0].lastElementChild.classList.remove("noDisplay");
                ymlCardVideoTag[i].remove();
            }
        }
    }
}
function cardOnView(){
  var ymlCardVideoTag = document.querySelectorAll(".ymlCardVideo");
  ymlCardVideoTag.forEach((card) => {
      playPauseVideoVisibility(card);
  });
}
}
var jobAlertStrip = document.querySelector(".jobAlertStrip");
var jobUpdateImg = document.querySelector(".jobAlertStrip .contntD .stripBg");
function jobUpdatesStrip(){
  if(!jobUpdateImg.hasAttribute('src')){
        jobUpdateImg.parentElement.remove();
    } 
}
document.addEventListener('DOMContentLoaded', function () {
    if(jobAlertStrip){
        jobUpdatesStrip();
    }
});

var dataBox = document.querySelectorAll(".dataBox");
var dataBoxImg = document.querySelectorAll(".dataBoxImg");
var animDiv = document.querySelectorAll(".animDiv");
if(animDiv){
for (var i = 0; i < animDiv.length; i++) {
var integerValue =parseInt(animDiv[i].innerText.trim());
	animDiv[i].innerText =integerValue;

}
}

if(dataBox){
    for (var i = 0; i < dataBoxImg.length; i++) {
        if(dataBoxImg[i].getAttribute('src').trim() == ""){
            if(dataBoxImg[i].nextElementSibling.className == "imageOverlay20"){
                dataBoxImg[i].nextElementSibling.remove()
            }
            dataBoxImg[i].remove();
        }
    }

}


var quotesParent = document.querySelectorAll(".quoteBoxSection");
var quoteBoxDesc = document.getElementsByClassName("quoteBoxDesc");
var colorsQ = ["#0a8ee0", "#076AA6", "#043A5B"];
var darkModeColorsQ = ["#072E40","#051C2E","#010C14"];
var urlQuote = "/bin/factDataServlet?";
var sheetNameQ = "";
var excelPathQ = "";
var elemColorQ;

var quoteURL = urlQuote + "excelPath=" + excelPathQ + "&excelSheet=" + sheetNameQ;
if (quotesParent) {
    for (var i = 0; i < quotesParent.length; i++) {
        firstLoadquote(i, quotesParent[i]);
    }
}

function firstLoadquote(quotesParentIndex, quoteBox) {
    if (quoteBox.children[0].children[0].children[0].children[0].children[1].children[4] != undefined) {
        sheetNameQ = quoteBox.children[0].children[0].children[0].children[0].children[1].children[4].innerHTML;
        excelPathQ = quoteBox.children[0].children[0].children[0].children[0].children[1].children[5].innerHTML;
    } 

    quoteURL = urlQuote + "excelPath=" + excelPathQ + "&excelSheet=" + sheetNameQ;
    var xhttpQ = new XMLHttpRequest();
    xhttpQ.open("GET", quoteURL, true);
    xhttpQ.onload = function () { 
        if (xhttpQ.readyState == 4 && xhttpQ.status === 200) {
            var quoteBoxToChange = quotesParent[quotesParentIndex].querySelectorAll(".quoteMain");
            var quoteBoxHeadline = quotesParent[quotesParentIndex].querySelectorAll(".quoteBox .quoteBoxHeadline");
            var quoteBoxDesc = quotesParent[quotesParentIndex].querySelectorAll(".quoteBox .quoteBoxDesc");
            var quoteBoxnextFeed = quotesParent[quotesParentIndex].querySelectorAll('.quoteBoxnextFeed');
            var readQuoteBox = quotesParent[quotesParentIndex].querySelectorAll('.readQuoteBox');
            
            var data = xhttpQ.response;
            var res = JSON.parse(data);
            if (quoteBoxHeadline) {
                for (var i = 0; i < quoteBoxToChange.length; i++) {
                  if(quoteBoxToChange[i].children[2] && quoteBoxToChange[i].children[2].lastElementChild.hasAttribute('src')){
                      quoteBoxToChange[i].style.backgroundColor = "none";
                        
                    }else{
                      if(quoteBoxToChange[i].children[3] || quoteBoxToChange[i].children[2]){
                      quoteBoxToChange[i].children[3].remove();
                      quoteBoxToChange[i].children[2].remove();
                      }
                        if(document.body.classList.contains('darkMode')){
                            quoteBoxToChange[i].style.backgroundColor = darkModeColorsQ[i];
                        }else{
                      quoteBoxToChange[i].style.backgroundColor = colorsQ[i];
                        }  
                    }

                }
                for (var i = 0; i < quoteBoxnextFeed.length; i++) {
                    quoteBoxHeadline[i].innerHTML = res.response.msg;
                    quoteBoxDesc[i].innerHTML = res.response.urlLabel;
                    readQuoteBox[i].setAttribute("href", res.response.url);
                    DscptLength();
                    if (res.response.url == "NA" || res.response.url === "na" || res.response.url.trim() === "") { 
                        readQuoteBox[i].style.display = "none";
                    } else {
                        readQuoteBox[i].style.display = "block";
                    }
                    if (res.response.urlLabel == "NA" || res.response.urlLabel == "na"|| res.response.url.trim() === "") { 
                        quoteBoxDesc[i].style.display = "none";
                    } else {
                        quoteBoxDesc[i].style.display = "block";
                    }
                    quoteBoxnextFeed[i].setAttribute("quoterefreshIndex", 0);
                    quoteBoxnextFeed[i].addEventListener("click", refreshQuoteText);
                }
            }
        } else {
            console.log('Request failed.  Returned status of ' + xhttpQ.status);
        }
    };
    xhttpQ.send();
}
function refreshQuoteText(e) {
    e.preventDefault();
    var elem = this;
    var quotesElm = elem.previousElementSibling.children[0].children[0].children[1].children[0];
    var quotesDescElm = elem.previousElementSibling.children[0].children[0].children[1].children[1];
    var quotesUrlElm = elem.previousElementSibling.children[0].children[0].children[1].children[2];
    elemColorQ = elem.parentElement;

    var quoterefreshIndex = parseInt(elem.getAttribute("quoterefreshIndex"));
    var qrefeshIndexPlus = ++quoterefreshIndex;

    qrefeshIndexPlus %= colorsQ.length;
    elem.setAttribute("quoterefreshIndex", qrefeshIndexPlus);

    sheetNameQ = elem.previousElementSibling.children[0].children[0].children[1].children[4].innerHTML;
    excelPathQ = elem.previousElementSibling.children[0].children[0].children[1].children[5].innerHTML;

    var xhttpQuote = new XMLHttpRequest();
    var newQuoteUrl = urlQuote + "excelPath=" + excelPathQ + "&excelSheet=" + sheetNameQ;
    
    xhttpQuote.onreadystatechange = function () { //change data on individual card click
        if (xhttpQuote.readyState == 4 && xhttpQuote.status === 200) {
            if (elemColorQ.parentElement.classList.contains("quoteBoxSection") && !elemColorQ.nextElementSibling) {
              if(document.body.classList.contains('darkMode')){
                    elemColorQ.style.backgroundColor = darkModeColorsQ[qrefeshIndexPlus];
                }else{
                elemColorQ.style.backgroundColor = colorsQ[qrefeshIndexPlus];
            }
          }
            quotesElm.style.opacity = 0;
            quotesDescElm.style.opacity = 0;
            if (quotesElm.classList.contains("fadeInText")) {
                quotesElm.classList.remove("fadeInText");
                quotesElm.style.opacity = 0;
                quotesDescElm.classList.remove("fadeInText");
                quotesDescElm.style.opacity = 0;
            }
            var jsonParse = JSON.parse(xhttpQuote.response);
            quotesElm.innerHTML = jsonParse.response.msg;
            quotesDescElm.innerHTML = jsonParse.response.urlLabel;
            quotesUrlElm.setAttribute("href", jsonParse.response.url);
            DscptLength();
            if (jsonParse.response.url == "NA" || jsonParse.response.url == "na" || jsonParse.response.url.trim() === "") {
                quotesUrlElm.style.display = "none";
            } else {
                quotesUrlElm.style.display = "block";
            }
            if (jsonParse.response.urlLabel == "NA" || jsonParse.response.urlLabel == "na" || jsonParse.response.url.trim() === "") { 
                quotesDescElm.style.display = "none";
            } else {
                quotesDescElm.style.display = "block";
            }
            addOpacityText(quotesElm);
        }
    }
    xhttpQuote.open("GET", newQuoteUrl, true);
    xhttpQuote.send();
}
function DscptLength(){
    for (var i = 0; i < quotesParent.length; i++) {
        if(quoteBoxDesc[i]){
            var len = quoteBoxDesc[i].innerHTML.length;
            if(window.innerHeight <= 768 && window.innerWidth <= 575 && len > 135){
                quoteBoxDesc[i].innerHTML =quoteBoxDesc[i].innerHTML.substring(0, 135) + "...";
            }
            else if(len > 190) {
                quoteBoxDesc[i].innerHTML =quoteBoxDesc[i].innerHTML.substring(0, 190) + "...";
            }
  }
}
}
var quoteBoxnextFeed = document.querySelectorAll(".quoteBoxnextFeed");
for (var i = 0; i < quoteBoxnextFeed.length; i++) {
    if (window.innerWidth > 992) {
        quoteBoxnextFeed[i].addEventListener("mouseover", function () {
            var el = this;
            el.children[0].style.display = "none";
            el.children[1].style.display = "inline-block";
        });
        quoteBoxnextFeed[i].addEventListener("mouseout", function () {
            var el = this;
            el.children[0].style.display = "inline-block";
            el.children[1].style.display = "none";
        });
    }
}
var GenerateSummary = document.getElementsByClassName('generateSummary');
if(GenerateSummary.length > 0){
var summaryOverlay = document.getElementsByClassName('summaryOverlay')[0];
var summaryOption = document.querySelectorAll('.summaryOptionsDesk .summaryOption');
var summaryOptionMob = document.querySelectorAll('.summaryOptionsMob .summaryOption');
var summaryContent = document.querySelectorAll('.summaryContent');
var overlayClose =  document.getElementsByClassName('overlayClose')[0];
var summaryWordValue = document.getElementsByClassName('summaryWordValue')[0];
var summaryOverlayShare = document.getElementsByClassName('summaryOverlayShare')[0];
    var summaryWordcount = 100;
var animatedParas = document.getElementsByClassName("animatePara");
var currentParaIndex = 0;
var timer = 0;
var summaryTimer = 0;
    var summaryLinks = summaryOverlayShare.getElementsByTagName("a");
    var summaryHeadings = summaryOverlay.getElementsByTagName("h2");
    var summaryFBAnchor = new URL(summaryOverlayShare.getElementsByClassName("fbAnchor")[0].href);
    var summaryTwitterAnchor =  new URL(summaryOverlayShare.getElementsByClassName("twitterAnchor")[0].href);
    var summarylinkedinAnchor = new URL(summaryOverlayShare.getElementsByClassName("linkedinAnchor")[0].href);
    var summaryMailtoAnchor = summaryOverlayShare.getElementsByClassName("mailtoAnchor")[0].href;
   
var summaryShareBtn  = document.querySelectorAll('.summaryOverlayShare .shareBtnParent')[0];
if(window.innerWidth > 767){
    for (let i = 0; i < summaryOption.length; i++) {
        summaryOption[i].addEventListener('click',()=>{
                let summaryHeading = summaryContent[i].getElementsByTagName("h2")[0];
                if (summaryHeading){
                    summaryHeading.classList.add("summaryCopyText");
                }
            
            printParagraph(summaryContent[i]);

            closeOverlays();
            summaryContent[i].classList.add('active');
                if(summaryContent[i].classList.contains('summary_100_word')) summaryWordcount = 100;
                else if(summaryContent[i].classList.contains('summary_250_word')) summaryWordcount = 250;
                else if(summaryContent[i].classList.contains('summary_500_word')) summaryWordcount = 500;;
            summaryOverlay.classList.add('active');
                document.body.classList.add('no-scroll');
                    
                    if(summaryFBAnchor){
                        summaryFBAnchor.searchParams.set('u',summaryFBAnchor.searchParams.get("u") + "?summary="+summaryWordcount);  
                        summaryOverlayShare.getElementsByClassName("fbAnchor")[0].href = summaryFBAnchor.href;

                        summaryTwitterAnchor.searchParams.set('url',summaryTwitterAnchor.searchParams.get("url") + "?summary="+summaryWordcount); 
                        summaryOverlayShare.getElementsByClassName("twitterAnchor")[0].href = summaryTwitterAnchor.href;
                        
                        summarylinkedinAnchor.searchParams.set('url',summarylinkedinAnchor.searchParams.get("url") + "?summary="+summaryWordcount); 
                        summaryOverlayShare.getElementsByClassName("linkedinAnchor")[0].href = summarylinkedinAnchor.href;

                        summaryOverlayShare.getElementsByClassName("mailtoAnchor")[0].href = summaryMailtoAnchor + encodeURIComponent("?summary="+summaryWordcount);
                    }
        });
    }
}else{
    for (let i = 0; i < summaryOptionMob.length; i++) {
        summaryOptionMob[i].addEventListener('click',()=>{
                let summaryHeading = summaryContent[i].getElementsByTagName("h2")[0];
                if (summaryHeading){
                    summaryHeading.classList.add("summaryCopyText");
                }
                printParagraph(summaryContent[i]);
            closeOverlays();
            summaryContent[i].classList.add('active');
                    if(summaryContent[i].classList.contains('summary_100_word')){
                        summaryWordcount = 100;
                        summaryOverlayShare.classList.add("WA_summary_100_word");
                        summaryOverlayShare.classList.remove("WA_summary_250_word");
                        summaryOverlayShare.classList.remove("WA_summary_500_word");

                    } 
                    else if(summaryContent[i].classList.contains('summary_250_word')){
                        summaryWordcount = 250;
                        summaryOverlayShare.classList.add("WA_summary_250_word");
                        summaryOverlayShare.classList.remove("WA_summary_100_word");
                        summaryOverlayShare.classList.remove("WA_summary_500_word");
                    } 
                    else if(summaryContent[i].classList.contains('summary_500_word')){
                        summaryWordcount = 500;
                        summaryOverlayShare.classList.add("WA_summary_500_word");
                        summaryOverlayShare.classList.remove("WA_summary_250_word");
                        summaryOverlayShare.classList.remove("WA_summary_100_word");
                    } 
            summaryOverlay.classList.add('active');
                document.body.classList.add('no-scroll');
                
                if(summaryFBAnchor){
                    
                    summaryFBAnchor.searchParams.set('u',summaryFBAnchor.searchParams.get("u") + "?summary="+summaryWordcount);  
                    summaryOverlayShare.getElementsByClassName("fbAnchor")[0].href = summaryFBAnchor.href;

                    summaryTwitterAnchor.searchParams.set('url',summaryTwitterAnchor.searchParams.get("url") + "?summary="+summaryWordcount); 
                    summaryOverlayShare.getElementsByClassName("twitterAnchor")[0].href = summaryTwitterAnchor.href;
                    
                    summarylinkedinAnchor.searchParams.set('url',summarylinkedinAnchor.searchParams.get("url") + "?summary="+summaryWordcount); 
                    summaryOverlayShare.getElementsByClassName("linkedinAnchor")[0].href = summarylinkedinAnchor.href;

                    summaryOverlayShare.getElementsByClassName("mailtoAnchor")[0].href = summaryMailtoAnchor + encodeURIComponent("?summary="+summaryWordcount);
                }
        });
    }
}
    getSummaryParametersPre();

function closeOverlays(){
    for (let i = 0; i < summaryContent.length; i++) {
        summaryContent[i].classList.remove('active');
        summaryContent[i].scrollTop = 0;
    }
    summaryOverlay.classList.remove('active');
    document.body.classList.remove('no-scroll');
    summaryOverlay.scrollTop = 0;
}
overlayClose.addEventListener('click',()=>{
    closeOverlays();
   stopPrintParagraph();
    for (var i=0; i < summaryHeadings.length; i++){
        summaryHeadings[i].classList.remove("summaryCopyText");
    }
})
summaryOverlay.addEventListener('click', (e)=>{
    if(e.target === summaryOverlay){
        closeOverlays();
       stopPrintParagraph();
        for (var i=0; i < summaryHeadings.length; i++){
            summaryHeadings[i].classList.remove("summaryCopyText");
        }
    }
})

function printParagraph(currentPara) {
    var mainPara = currentPara.getElementsByClassName("saltPara");
    var animatePara = currentPara.getElementsByClassName("animatePara")[0];

      if (currentParaIndex >= mainPara.length){
        var summaryParaElement = document.createElement("p");
        var summaryIndex = 0;

       var summaryText = "- Approximately "+summaryWordcount + " words "+ summaryWordValue.textContent;
        summaryParaElement.className = "summaryWordDetails summaryCopyText";
        animatePara.appendChild(summaryParaElement);
        let cursorSpan = document.createElement("span");
        cursorSpan.className = "cursor";
        function printSummaryWords(){
                if (summaryIndex < summaryText.length) {
                    summaryParaElement.textContent = summaryText.substring(0, summaryIndex+1);
                    summaryParaElement.appendChild(cursorSpan);
                    summaryIndex++;
                    summaryTimer = setTimeout(printSummaryWords, 20);
                }
                else{
                    cursorSpan.remove();
                    summaryOverlayShare.style.display = 'inline-flex';
                }
        }
        printSummaryWords();
        return;
      } 
  
      var paraElement = document.createElement("p");
      paraElement.className = "summaryPara summaryCopyText";
      animatePara.appendChild(paraElement);
      var text = mainPara[currentParaIndex].innerText;
      var index = 0;
      var cursorSpan = document.createElement("span");
      cursorSpan.className = "cursor";
      paraElement.appendChild(cursorSpan);
      function printLetters() {
          if (index < text.length) {
            paraElement.textContent = text.substring( 0, index + 1 );
            paraElement.appendChild(cursorSpan);
              index++;  
            timer = setTimeout(printLetters, 20);
          } else {
              currentParaIndex++;
              cursorSpan.remove();
              printParagraph(currentPara);
          }
      }
      printLetters();
}
function stopPrintParagraph(){
    if (timer){
        clearTimeout(timer);  
    }
    if (summaryTimer){
        clearTimeout(summaryTimer); 
    }
    for (let paras of animatedParas){
        paras.innerHTML ="";
    }
    timer = 0;
    summaryTimer = 0;
    currentParaIndex = 0;
    summaryOverlayShare.style.display = 'none';
    
}

var summaryFlagCopy = false;
var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) {
    return p.toString() === "[object SafariRemoteNotification]";
})(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));
var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
var copyBtnModalSummary = document.getElementsByClassName("copyBtnModalSummary")[0];
if (copyBtnModalSummary){
    copyBtnModalSummary.addEventListener("click",copyAllFunctionSummary);
}
if (navigator.platform === "MacIntel"){
    if (navigator.maxTouchPoints > 0){
        iOS = true;
    }
}
var textareaOpen = false;
 function copyAllFunctionSummary() {
    var copyAll = document.querySelectorAll(".copyBtnModalSummary")[0];
    copyAll.classList.add("activeText");
    setTimeout(function () {
        if (copyAll.classList.contains("activeText")) {
            copyAll.classList.remove("activeText");
        }
    }, 200);
    var paraDiv = document.getElementsByClassName("summaryCopyText");
  
    var allText = [];
    var textArea = copyAll.nextElementSibling.nextElementSibling.children[0];
    for (var i = 0; i < paraDiv.length; i++) {
        allText.push(paraDiv[i].innerText.trim());
    }
    var str = allText.join("\n");
    if ((isSafari || iOS) && window.innerWidth < 991) {
        textArea.readOnly = false;
        var elem = document.getElementsByClassName("urlCopiedSummary" && "urlCopiedSummaryiOs");
        if (elem.length !== 0) {
            elem[0].style.display = "none";
            elem[0].classList.remove("urlCopiedSummaryiOs");
        }
        
        textArea.style.display = "block";
        textArea.classList.add("urlCopiedSummaryiOs");
        textArea.innerHTML = str;
        textArea.focus();
        textArea.setSelectionRange(0, 99999);
        summaryFlagCopy = true;
        textareaOpen = true;
        textArea.readOnly = true;
    } else {
        textArea.style.display = "block";
        textArea.style.width = "0";
        textArea.style.height = "0";
        textArea.style.opacity = "0";
        textArea.style.zIndex = "2";
        textArea.innerHTML = str;
        textArea.readOnly = true;
        var copyText = textArea;
        copyText.select();
        document.execCommand("copy");
}
}
function closeTextAreaCopySummary(e) {
    if ((iOS || isSafari) && (e.target != document.getElementsByClassName('summaryCopyImg')[0] && e.target != document.getElementsByClassName('summaryCopyImg')[1]) && document.getElementsByClassName('urlCopiedSummary')[0].classList.contains('urlCopiedSummaryiOs') && e.target != document.getElementsByClassName('urlCopiedSummary')[0] && textareaOpen) {
        var urlCopiedSummary = document.getElementsByClassName("urlCopiedSummary")[0];
        urlCopiedSummary.style.display = "none";
        urlCopiedSummary.classList.remove("urlCopiedSummaryiOs");
        urlCopiedSummary.readOnly = false;
        textareaOpen=false;
    }
    if(window.innerWidth < 768 && ((e.target != summaryShareBtn.children[0]) && (e.target != summaryShareBtn.children[1])) && summaryShareBtn.parentElement.nextElementSibling.classList.contains("shareOptions") && summaryShareBtn.closest('.summaryOverlayShare').classList.contains("summaryShareBottomMargin")){
        summaryShareBtn.closest('.summaryOverlayShare').classList.remove("summaryShareBottomMargin");
    }
}
document.addEventListener("click", closeTextAreaCopySummary);
summaryShareBtn.addEventListener('click', function(){
    if(window.innerWidth < 768 && summaryShareBtn.parentElement.nextElementSibling.classList.contains("shareOptions") && summaryShareBtn.parentElement.nextElementSibling.classList.contains("active")){
        summaryShareBtn.closest('.summaryOverlayShare').classList.add("summaryShareBottomMargin");
        summaryOverlay.children[0].lastElementChild.scrollIntoView({behavior:'smooth'});
    }
});
    function getSummaryParametersPre(){
        console.log(summaryOption)
        let urlGet = new URL(window.location.href);
        let summaryPara = urlGet.searchParams.get("summary") ? "summary_"+urlGet.searchParams.get("summary")+"_word" : null;

        if (summaryPara && window.innerWidth > 767){
            for (let i = 0; i < summaryOption.length; i++) {
                console.log("In loop", i)
            if(summaryPara == "summary_100_word" && summaryContent[i].classList.contains('summary_100_word') ){
                summaryOption[i].click();
                break;
            }else if(summaryPara == "summary_250_word" && summaryContent[i].classList.contains('summary_250_word')){
                summaryOption[i].click();
                break;
            }else if(summaryPara == "summary_500_word" && summaryContent[i].classList.contains('summary_500_word')){
                summaryOption[i].click();
                break;
            }
            }     
        }
        else if (summaryPara && window.innerWidth <= 767){
            for (let i = 0; i < summaryOptionMob.length; i++) {
                console.log("In mobile loop", i)
            if(summaryPara == "summary_100_word" && summaryContent[i].classList.contains('summary_100_word') ){
                summaryOptionMob[i].click();
                break;
            }else if(summaryPara == "summary_250_word" && summaryContent[i].classList.contains('summary_250_word')){
                summaryOptionMob[i].click();
                break;
            }else if(summaryPara == "summary_500_word" && summaryContent[i].classList.contains('summary_500_word')){
                summaryOptionMob[i].click();
                break;
            }
            }     
        }
        window.history.replaceState({}, document.title, window.location.href.split('?')[0]);
    }

}

var lightDarkModeIcon = document.getElementsByClassName("lightDarkModeIcon")[0];

window.addEventListener('DOMContentLoaded', () => {
  if(lightDarkModeIcon){darkLightMode();}
});
function darkLightMode(){
   var themeTooltip = document.getElementsByClassName("themeTooltip");
    var currentTheme = localStorage.getItem('theme');
  if(currentTheme === 'dark'){
      document.body.classList.add("darkMode");
      lightDarkModeIcon.classList.remove("lightIcon");
      lightDarkModeIcon.classList.add("darkIcon");
      themeTooltip[0].classList.remove("tooltiptextHeader");
      themeTooltip[1].classList.add("tooltiptextHeader");
  }
  else if(!localStorage.getItem('theme') && window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches){
        document.body.classList.add("darkMode");
        lightDarkModeIcon.classList.remove("lightIcon");
        lightDarkModeIcon.classList.add("darkIcon");
        themeTooltip[0].classList.remove("tooltiptextHeader");
        themeTooltip[1].classList.add("tooltiptextHeader");
  }   
  else{
      document.body.classList.remove("darkMode");
      lightDarkModeIcon.classList.remove("darkIcon");
      lightDarkModeIcon.classList.add("lightIcon");
      themeTooltip[0].classList.add("tooltiptextHeader");
      themeTooltip[1].classList.remove("tooltiptextHeader");
  }
  
  lightDarkModeIcon.addEventListener('click', ()=>{
      if(lightDarkModeIcon.classList.contains('lightIcon') && !document.body.classList.contains("darkMode")){
          document.body.classList.add("darkMode");
          lightDarkModeIcon.classList.remove("lightIcon");
          lightDarkModeIcon.classList.add("darkIcon");
          localStorage.setItem('theme', 'dark');
          themeTooltip[0].classList.remove("tooltiptextHeader");
          themeTooltip[1].classList.add("tooltiptextHeader");
      }else{
          document.body.classList.remove("darkMode");
          lightDarkModeIcon.classList.add("lightIcon");
          lightDarkModeIcon.classList.remove("darkIcon");
          localStorage.setItem('theme', 'light');
          themeTooltip[0].classList.add("tooltiptextHeader");
          themeTooltip[1].classList.remove("tooltiptextHeader");
      }
        reloadFunForDarkTheme();
  })
}
function reloadFunForDarkTheme(){
    if (factsParent) {
        for (var i = 0; i < factsParent.length; i++) {
            firstLoad(i, factsParent[i]);
        }
    }
    if (quotesParent) {
        for (var i = 0; i < quotesParent.length; i++) {
            firstLoadquote(i, quotesParent[i]);
        }
    }
    darkModeShareComp();    
}
function darkModeShareComp(){
    for (var i = 0; i < shareBtnParent.length; i++) {
        var el = shareBtnParent[i];
        if(!el.classList.contains("activeShare")){
            if(el.children[2]){
                if(document.body.classList.contains('darkMode')){
                    el.children[0].style.display = "none";
                    el.children[1].style.display = "inline-block";
                    el.children[2].style.display = "none";
                }else{
                    el.children[0].style.display = "inline-block";
                    el.children[1].style.display = "none";
                    el.children[2].style.display = "none";
                }
            }else{
                el.children[0].style.display = "inline-block";
                el.children[1].style.display = "none";
            }
        }else{
            if(el.children[2]){
                el.children[0].style.display = "none";
                el.children[1].style.display = "none";
                el.children[2].style.display = "inline-block";
            }else{
                el.children[0].style.display = "none";
                el.children[1].style.display = "inline-block";
            }
        }
    }
}
var modalOpen;
var noSliderDiv;
var appendFlag = true;
var modalOverlay = document.getElementById("modalOverlay");
var urlRef = "";
var activecaritem;
var modelOpenCurrentFlag = true;

var openModel = document.getElementsByClassName("saltModal");
for (var i = 0; i < openModel.length; i++) {
  openModel[i].addEventListener("click", function (event) {
    var el = event.currentTarget;
    activecaritem = el.getAttribute("data-index");
  });
}

//code for copy url Link
var flagCopy = false;
var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) {
  return p.toString() === "[object SafariRemoteNotification]";
})(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));
var iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
if (navigator.platform === "MacIntel"){
  if (navigator.maxTouchPoints > 0){
      iOS = true;
  }
}

var textareaOpen = false;
function initializeWrapper(){
  let inViewList = document.getElementsByClassName("overlayWrapper");
  for (let wrapper of inViewList){
  var rect = wrapper.getBoundingClientRect();

    if (
        rect.top >= 0 &&
        rect.bottom <= (window.innerHeight || document.documentElement.clientHeight)
        
    ){
      wrapper.classList.add("inView");
      wrapper.children[0].classList.add("inView");
      wrapper.children[2].classList.add("inView");
       wrapper.children[2].children[1].classList.add("inView");
    };
} 
}
(function () {
  var Modal = function (el, options) {
    var self = this;
    self.el = document.querySelector(el);
    self.options = options;
  };
  //modal prototype
  Modal.prototype = {
    // to show modal
    show: function () {
            /*Removed code for ReCaptcha error*/ 
            // (function () {
            //     var CFG = '___grecaptcha_cfg';
            //     if (!window[CFG]) {
            //         window[CFG] = {};
            //     }
            //     var GR = 'grecaptcha';
            //     if (!window[GR]) {
            //         window[GR] = {};
            //     }
            //     window[GR].ready = window[GR].ready || function (f) {
            //         (window[CFG]['fns'] = window[CFG]['fns'] || []).push(f);
            //     };
            //     (window[CFG]['render'] = window[CFG]['render'] || []).push('onload');
            //     window['__google_recaptcha_client'] = true;
            //     var po = document.createElement('script');
            //     po.type = 'text/javascript';
            //     po.async = true;
            //     po.src = 'https://www.gstatic.com/recaptcha/api2/v1531759913576/recaptcha__en.js';
            //     var elem = document.querySelector('script[nonce]');
            //     var n = elem && (elem['nonce'] || elem.getAttribute('nonce'));
            //     if (n) {
            //         po.setAttribute('nonce', n);
            //     }
            //     var s = document.getElementsByTagName('script')[0];
            //     s.parentNode.insertBefore(po, s);
            // })();
      //update new code for neverest people overlay section background color change
            //added code for modal overlay background color transperent
            let nrstorypopup = document.querySelector('.neverRestStoryPopUp');
            let OpenManagementModal = document.querySelector('.managementModal');
            if(nrstorypopup){
            let NRModalVideo = document.querySelector(".neverRestStoryPopUp .videoContainerNeverRest [id^='divVideo']");
            let NRModalLinks = document.querySelectorAll(".neverRestStoryPopUp .hoverCard");
            if (NRModalVideo){
                var NRModalVideoplayerInstance = jwplayer(NRModalVideo);
                for (var i=0; i < NRModalLinks.length; i++){
                  NRModalLinks[i].addEventListener("click", function(){
                  NRModalVideoplayerInstance.stop();
                  })
              }  

            }
            let nrPreviousSib = nrstorypopup.closest('section');
            let overlycls = nrPreviousSib.nextElementSibling;
            if(overlycls == null || overlycls.id !== "modalOverlay"){
                let addoverlaysec = document.createElement("SECTION");
                addoverlaysec.setAttribute("id", "modalOverlay");
                nrPreviousSib.insertAdjacentElement('afterend', addoverlaysec);
            }}

      let lengvalue = 0;
      let current = document.querySelector('#modalOverlay');
      if(current.previousElementSibling){
        let prevSiblings = current.previousElementSibling;
        lengvalue = prevSiblings.getElementsByClassName("neverRestStoryPopUp").length;
      }

      if (!modalOverlay.classList.contains("overlaySection") && lengvalue == 0) {
        modalOverlay.classList.add("overlaySection");
        var articleIcon1 = document.getElementsByClassName("articleIcon1");
        var articleIcon2 = document.getElementsByClassName("articleIcon2");
        var arrowSection = document.getElementsByClassName("arrowSection");
        var soundImg = document.getElementsByClassName("soundImg");
        if (soundImg.length !== 0) {
          soundImg[0].classList.add("addOpacityIcons");
        }
        if (arrowSection.length !== 0) {
          arrowSection[0].classList.add("addOpacityIcons");
        }
        if (articleIcon1.length !== 0) {
          for (var i = 0; i < articleIcon1.length; i++) {
            articleIcon1[i].classList.add("addOpacityIcons");
          }
        }
        if (articleIcon2.length !== 0) {
          for (var i = 0; i < articleIcon2.length; i++) {
            articleIcon2[i].classList.add("addOpacityIcons");
          }
        }
      }
      modelOpenCurrentFlag = modalOpen;
      modalOpen = true;
      noSliderDiv = false;
      var self = this;
      if (self.options.backdrop) {
        var backdrop = document.getElementById('backdropM');
        if (backdrop === null) {
          backdrop = document.createElement('div');
          backdrop.id = "backdropM";
          backdrop.className = "modal-backdrop fade in";
          if (nrstorypopup){
              backdrop.classList.add("modalNRStoryPopup")
          }
                    if(OpenManagementModal){
                        backdrop.classList.add("managementModalPopup");
                    }
          document.body.appendChild(backdrop);
        }
      }
      self.el.classList.add('in');
      self.el.style.display = 'block';
      document.body.classList.add('modal-open');
      document.getElementById("modalD").scrollTop = 0;
      //share functionality
      var fb = document.querySelectorAll(".fb > .fbAnchor");
      var twitter = document.querySelectorAll(".twitter > .twitterAnchor");
      var linkedin = document.querySelectorAll(".linkedin > .linkedinAnchor");
      var mailto = document.querySelectorAll(".mailto > .mailtoAnchor");
      for (var i = 0; i < fb.length; i++) {
        if (fb || twitter || linkedin || mailto) {
          // if (fb[i]) {
          //   fb[i].addEventListener("mouseenter", chngImgColorfb);
          //   function chngImgColorfb() {
          //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/FB.svg)";
          //   }
          //   fb[i].addEventListener("mouseleave", chngImgfb);
          //   function chngImgfb() {
          //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/FB.svg)";
          //   }
          // }
          // if (twitter[i]) {
          //   twitter[i].addEventListener("mouseenter", chngImgColortwitter);
          //   function chngImgColortwitter() {
          //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/x-icon.svg)";
          //   }
          //   twitter[i].addEventListener("mouseleave", chngImgtwitter);
          //   function chngImgtwitter() {
          //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/x-icon.svg)";
          //   }
          // }
          // if (linkedin[i]) {
          //   linkedin[i].addEventListener("mouseenter", chngImgColorlinkedin);
          //   function chngImgColorlinkedin() {
          //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/LinkedIn.svg)";
          //   }
          //   linkedin[i].addEventListener("mouseleave", chngImglinkedin);
          //   function chngImglinkedin() {
          //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/LinkedIn.svg)";
          //   }
          // }
          // if (mailto[i]) {
          //   mailto[i].addEventListener("mouseenter", chngImgColormailto);
          //   function chngImgColormailto() {
          //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/color/Contact_Us.svg)";
          //   }
          //   mailto[i].addEventListener("mouseleave", chngImgmailto);
          //   function chngImgmailto() {
          //     this.style.backgroundImage = "url(/etc.clientlibs/tata/clientlibs/assets/resources/img/common/shareOptions/Contact_Us.svg)";
          //   }
          // }
          var currentUrl = window.location.href;
          fb[i].setAttribute("href", "https://www.facebook.com/sharer/sharer.php?u=" + currentUrl);
          twitter[i].setAttribute("href", "https://twitter.com/share?url=" + currentUrl);
          linkedin[i].setAttribute("href", "http://www.linkedin.com/shareArticle?mini=true&url=" + currentUrl.split('#//management-team')[0] + currentUrl.split('#//management-team')[1]);
          mailto[i].setAttribute("href", "mailto:?Subject= Tata.com url&Body=%20" + currentUrl);
          var isMobile = {
            Android: function () {
              return navigator.userAgent.match(/Android/i);
            },
            BlackBerry: function () {
              return navigator.userAgent.match(/BlackBerry/i);
            },
            iOS: function () {
              return navigator.userAgent.match(/iPhone|iPad|iPod/i);
            },
            Opera: function () {
              return navigator.userAgent.match(/Opera Mini/i);
            },
            Windows: function () {
              return navigator.userAgent.match(/IEMobile/i);
            },
            any: function () {
              return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());
            }
          };
          var whatsApp = document.getElementsByClassName("whatsApp");
          for (var j = 0; j < whatsApp.length; j++) {
            whatsApp[j].addEventListener("click", function () {
              if (isMobile.any()) {
                var whatsapp_url = "whatsapp://send?text=" + currentUrl;
                window.location.href = whatsapp_url;
              } else {
                console.log("Please share this article in mobile device");
              }
            });
          }
        }
      }
    },
    //to hide modal
    hide: function () {
      var currentDiv = document.getElementsByTagName("section");
      if (modalOverlay.classList.contains("overlaySection")) {
        modalOverlay.classList.remove("overlaySection");
        var articleIcon1 = document.getElementsByClassName("articleIcon1");
        var articleIcon2 = document.getElementsByClassName("articleIcon2");
        var arrowSection = document.getElementsByClassName("arrowSection");
        var soundImg = document.getElementsByClassName("soundImg");
        if (soundImg.length !== 0) {
          soundImg[0].classList.remove("addOpacityIcons");
        }
        if (articleIcon1.length !== 0) {
          for (var i = 0; i < articleIcon1.length; i++) {
            articleIcon1[i].classList.remove("addOpacityIcons");
          }
        }
        if (arrowSection.length !== 0) {
          arrowSection[0].classList.remove("addOpacityIcons");
        }
        if (articleIcon2.length !== 0) {
          for (var i = 0; i < articleIcon2.length; i++) {
            articleIcon2[i].classList.remove("addOpacityIcons");
          }
        }
      }
      modalOpen = false;
      var self = this;
      self.el.classList.remove('in');
      self.el.innerHTML = '';
      self.el.style.display = 'none';
      document.body.classList.remove('modal-open');
      //window.history.back(); //  for backbutton
      if (document.getElementsByClassName('managementModal').length) {
        var elem = document.querySelector('.managementModal');
        elem.parentNode.removeChild(elem);
        if (self.options.backdrop) {
          var backdrop = document.getElementById('backdropM');
          if (backdrop !== null) document.body.removeChild(backdrop);
        }
      }
      if (self.options.backdrop) {
        var backdrop = document.getElementById('backdropM');
        if (backdrop !== null) document.body.removeChild(backdrop);
      }
      for (i = 0; i < currentDiv.length; i++) {
        if (currentDiv[i].classList.contains("active") && currentDiv[i].classList.contains("noSlider")) {
          modalOpen = true;
        }
      }
      modalOpen = modelOpenCurrentFlag; //   set current modelStatus open
    }
  }
  //this function is called on domloaded for loading of modal data 
  document.addEventListener('DOMContentLoaded',()=>{showModal();initializeWrapper();});
  window.addEventListener('hashchange',showModal);
  window.addEventListener('pageshow',initializeWrapper);
  function showModal() {
    var url = "";
    var modalN = new Modal('#modalD', {
      backdrop: true
    });
    var Links = document.getElementsByClassName("openModel")
    document.addEventListener("click", function (e) {
      if (e.target.parentNode) {
        if ((e.target.classList != undefined && e.target.classList.contains("openModel")) || (e.target.parentNode.classList != undefined && e.target.parentNode.classList.contains("openModel"))) {
          if (e) e.preventDefault();
          var evTar;
          if (e.target.classList != undefined && e.target.classList.contains("openModel"))
            evTar = e.target
          else
            evTar = e.target.parentNode
          if (evTar.classList.contains("externalSite")) {
            urlRef = evTar.getAttribute("data-redirectionLink")
          }
          if (window.location.hash != ("#/" + evTar.getAttribute("href").split(".html")[0])){
          history.pushState('', document.URL, document.URL.split("#")[0] + "#/" + evTar.getAttribute("href").split(".html")[0]);
          }
          url = evTar.getAttribute("href");
          var xmlhttp;
          if (window.XMLHttpRequest) {
            // code for modern browsers
            xmlhttp = new XMLHttpRequest();
          } else {
            // code for old IE browsers
            xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
          }
          xmlhttp.onreadystatechange = function (event, response) {
            if (this.readyState == 4 && this.status == 200) {
              // Typical action to be performed when the document is ready:
              document.getElementById("modalD").innerHTML = this.responseText;
              if (document.getElementById("modalD").getElementsByClassName("modal-dialog")[0].classList.contains("popUpModalBox")) {
                document.getElementById("modalD").getElementsByClassName("redirect")[0].setAttribute("href", urlRef)
              }
              if (document.getElementById("modalD").getElementsByClassName("modal-dialog")[0].classList.contains("modalVideo")) {
                var currElement = document.getElementById("modalD")
                var elemListC = currElement.getElementsByClassName("carItem");
                var videoObj = new Array();
                videoObj[0] = new videoComp(elemListC[0]);
                for (var i = 0; i < elemListC.length; i++) {
                  elemListC[i].classList.remove("active");
                  var elemDataAttr = elemListC[i].getAttribute("data-step");
                  if (activecaritem === elemDataAttr) {
                    elemListC[i].classList.add("active");
                    activecaritem = "";
                  }
                  //for maintaining position of video in saltstory
                  if (window.innerWidth < 992 && window.innerWidth > 767) {
                    if (elemListC[i].children[0].classList.contains("jwplayer")) {
                      elemListC[i].style.height = "66.6rem";
                    }
                  } else if (window.innerWidth < 767) {
                    if (elemListC[i].children[0].classList.contains("jwplayer")) {
                      elemListC[i].style.height = "28rem";
                    }
                  }
                }
                var objs = new Array();
                for (var i = 0; i < document.getElementsByClassName("videoCarousel").length; i++) {
                  objs[objs.length] = new CarousalComp(document.getElementsByClassName("videoCarousel")[i], 0);
                }
              }
              var linkList = document.getElementById("modalD").getElementsByClassName("closeIcon");
              for (var i = 0; i < linkList.length; i++) {
                linkList[i].addEventListener('click', function (e) {
                  modalN.hide();
                })
              }
              var videoModalClose = document.getElementById("modalD").getElementsByClassName("vidcloseIcon");
              for (var i = 0; i < videoModalClose.length; i++) {
                videoModalClose[i].addEventListener('click', function (e) {
                  modalN.hide();
                })
              }
              var shareBtnParent = document.querySelectorAll(".shareBtnParentModal")[0];
              if (shareBtnParent) {
                shareBtnParent.addEventListener("click", shareIcons);
              }
              //for NChandraModal icon arrangements in mobile
              var modalIcons = document.getElementsByClassName("modalIcons");
              if (modalIcons) {
                if (window.innerWidth < 767) {
                  for (var i = 0; i < modalIcons.length; i++) {
                    modalIcons[i].classList.add("iconsMobile");
                  }
                }
              }
              modalN.show();

              let firstSlide = document.querySelectorAll("div.modal-dialog div.videoContainer div.innerCarousel > div.carItem")[0];
              let activeSlide = document.querySelectorAll("div.modal-dialog div.videoContainer div.innerCarousel > div.carItem.active");
              if (firstSlide && (activeSlide.length < 1)) {
                  firstSlide.classList.add("active");
              }
            }
          };
          xmlhttp.open("GET", url, true);
          xmlhttp.send();
        } else {
          if ((e.target.parentNode.classList != undefined && e.target.parentNode.classList.contains("openModel"))) {
            if (e) e.preventDefault();
            var evTar;
            if (e.target.classList != undefined && e.target.classList.contains("openModel"))
              evTar = e.target
            else
              evTar = e.target.parentNode
            if (evTar.classList.contains("externalSite")) {
              urlRef = evTar.getAttribute("data-redirectionLink")
            }
            if (window.location.hash != ("#/" + evTar.getAttribute("href").split(".html")[0])){
            history.pushState('', document.URL, document.URL.split("#")[0] + "#/" + evTar.getAttribute("href").split(".html")[0]);
            }
            url = evTar.getAttribute("href");
            var xmlhttp;
            if (window.XMLHttpRequest) {
              // code for modern browsers
              xmlhttp = new XMLHttpRequest();
            } else {
              // code for old IE browsers
              xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
            }
            xmlhttp.onreadystatechange = function (event, response) {
              if (this.readyState == 4 && this.status == 200) {
                // Typical action to be performed when the document is ready:
                document.getElementById("modalD").innerHTML = this.responseText;
                if (document.getElementById("modalD").getElementsByClassName("modal-dialog")[0].classList.contains("popUpModalBox")) {
                  document.getElementById("modalD").getElementsByClassName("redirect")[0].setAttribute("href", urlRef)
                }
                if (document.getElementById("modalD").getElementsByClassName("modal-dialog")[0].classList.contains("modalVideo")) {
                  var currElement = document.getElementById("modalD")
                  var elemListC = currElement.getElementsByClassName("carItem");
                  var videoObj = new Array()
                  videoObj[0] = new videoComp(elemListC[0])
                  for (var i = 0; i < elemListC.length; i++) {
                    elemListC[i].classList.remove("active");
                    var elemDataAttr = elemListC[i].getAttribute("data-step");
                    if (activecaritem === elemDataAttr) {
                      elemListC[i].classList.add("active");
                      activecaritem = "";
                    }
                    //for maintaining position of video in saltstory
                    if (window.innerWidth < 992 && window.innerWidth > 767) {
                      var carItem = document.getElementsByClassName("carItem")[0];
                      if (elemListC[i].children[0].classList.contains("jwplayer")) {
                        carItem.style.height = "56rem";
                      }
                    } else if (window.innerWidth < 767) {
                      var carItem = document.getElementsByClassName("carItem")[0];
                      if (elemListC[i].children[0].classList.contains("jwplayer")) {
                        carItem.style.height = "28rem";
                      }
                    }
                  }
                  var objs = new Array();
                  for (var i = 0; i < document.getElementsByClassName("videoCarousel").length; i++) {
                    objs[objs.length] = new CarousalComp(document.getElementsByClassName("videoCarousel")[i], 0);
                  }
                }
                var linkList = document.getElementById("modalD").getElementsByClassName("closeIcon");
                for (var i = 0; i < linkList.length; i++) {
                  linkList[i].addEventListener('click', function (e) {
                    modalN.hide();
                  })
                }
                var videoModalClose = document.getElementById("modalD").getElementsByClassName("vidcloseIcon");
                for (var i = 0; i < videoModalClose.length; i++) {
                  videoModalClose[i].addEventListener('click', function (e) {
                    modalN.hide();
                  })
                }
                var shareBtnParent = document.querySelectorAll(".shareBtnParentModal")[0];
                if (shareBtnParent) {
                  shareBtnParent.addEventListener("click", shareIcons);
                }
                //for NChandraModal icon arrangements in mobile
                var modalIcons = document.getElementsByClassName("modalIcons");
                if (modalIcons) {
                  if (window.innerWidth < 767) {
                    for (var i = 0; i < modalIcons.length; i++) {
                      modalIcons[i].classList.add("iconsMobile");
                    }
                  }
                }
                modalN.show();
              }
            };
            xmlhttp.open("GET", url, true);
            xmlhttp.send();
          }
        }
      }
    });
    //share icons
    var shareBtnParent = document.getElementsByClassName("shareBtnParentModal");
    var shareOptions = document.getElementsByClassName("shareOptions");
    var sharePanelOpen = false;
    var tool = document.getElementsByClassName("tooltiptext");
    //share icons
    function shareIcons() {
      if (!sharePanelOpen) {
        sharePanelOpen = true;
        for (var i = 0; i < tool.length; i++) {
          tool[i].style.visibility = "hidden"
        }
        var el = this;
        el.classList.toggle("activeShare");
        var sharePanel = el.parentElement.nextElementSibling;
        sharePanel.classList.toggle("active");
        if (el.classList.contains("activeShare") && sharePanelOpen == true) {
          shareFlag = true; //from common js
          document.addEventListener("click", function (el) {
            closeSharePanel(el);
          });
        }
      } else {
        sharePanelOpen = true;
        for (var i = 0; i < tool.length; i++) {
          tool[i].style.visibility = "";
        }
        var el = this;
        el.classList.toggle("activeShare");
        var sharePanel = el.parentElement.nextElementSibling;
        sharePanel.classList.toggle("active");
      }
    }
    //close the share panel
    function closeSharePanel(el) {
      shareFlag = false; //from common js
      if (el.target.classList.contains("shareBtnParentModal") && !sharePanelOpen) {
        sharePanelOpen = false;
        for (var i = 0; i < shareBtnParent.length; i++) {
          shareBtnParent[i].classList.toggle("activeShare");
          shareOptions[i].classList.toggle("active");
        }
      } else if (!el.target.parentNode.classList.contains("activeShare")) {
        sharePanelOpen = false;
        for (var i = 0; i < shareBtnParent.length; i++) {
          shareBtnParent[i].classList.remove("activeShare");
          //to handle when there is share panel on both story page as well on modal
          var shareOpt = shareBtnParent[i].parentElement.nextElementSibling;
          shareOpt.classList.remove("active");
        }
        for (var i = 0; i < tool.length; i++) {
          tool[i].style.visibility = "";
        }
      }
    }
    for (var i = 0; i < Links.length; i++) {
      if (document.URL.split("#/").length > 1) {
        if (Links[i].getAttribute("href").split(".html")[0] === document.URL.split("#/")[1]) {
          Links[i].click();
          break;
        }
      }
    }
  };
  document.addEventListener('click', checkModalOutsideClick);
  // event is called when outside click of modal
  function checkModalOutsideClick(e) {
    if (modalOpen == true || window.location.hash !== "") {
            if ((e.target.closest(".closeIcon")) || ((!e.target.closest(".modal-dialog") && !e.target.closest(".searchSection")) && ((document.querySelectorAll(".modal-dialog").length > 0) || (!document.getElementById("searchSection").style.display == "block"))) || e.target.closest(".closeImg") || e.target.closest(".closeTxt")) {
			history.pushState(null, null, ' ');
    
  }
      var modalDialog = document.getElementsByClassName("modal-dialog");
      if (modalDialog.length !== 0) {
        var flyoutElement = document.getElementsByClassName("modal-dialog")[0].parentElement,
          flyoutElement1 = document.getElementById("modalD"),
          linkCopy = document.querySelectorAll(".linkCopyModal"),
          copyAll = document.querySelectorAll(".copyBtnModal"),
          targetElement = e.target; // clicked element
        if ((targetElement == flyoutElement || targetElement == flyoutElement1) && document.getElementById("modalD").getElementsByClassName("jw-orientation-portrait").length == 0) {
          var currentDiv = document.getElementsByTagName("section");
          var modalOverlay = document.getElementById("modalOverlay");
          if (modalOverlay.classList.contains("overlaySection")) {
                        modalOverlay.classList.remove("overlaySection");
            var articleIcon1 = document.getElementsByClassName("articleIcon1");
            var articleIcon2 = document.getElementsByClassName("articleIcon2");
            var arrowSection = document.getElementsByClassName("arrowSection");
            var soundImg = document.getElementsByClassName("soundImg");
            if (soundImg.length !== 0) {
              soundImg[0].classList.remove("addOpacityIcons");
            }
            if (articleIcon1.length !== 0) {
              for (var i = 0; i < articleIcon1.length; i++) {
                articleIcon1[i].classList.remove("addOpacityIcons")
              }
            }
            if (arrowSection.length !== 0) {
              arrowSection[0].classList.remove("addOpacityIcons");
            }
            if (articleIcon2.length !== 0) {
              for (var i = 0; i < articleIcon2.length; i++) {
                articleIcon2[i].classList.remove("addOpacityIcons");
              }
            }
          }
          modalOpen = false;
          var self = document.getElementById("modalD");
          self.classList.remove('in');
          self.innerHTML = '';
          self.style.display = 'none';
          document.body.style = '';
          document.body.classList.remove('modal-open');
          //window.history.back();
          if (document.getElementsByClassName('managementModal').length) {
            var elem = document.querySelector('.managementModal');
            elem.parentNode.removeChild(elem);
            var backdrop = document.getElementById('backdropM');
            if (backdrop !== null) document.body.removeChild(backdrop);
          } else {
            var backdrop = document.getElementById('backdropM');
            if (backdrop !== null) document.body.removeChild(backdrop);
          }
          for (i = 0; i < currentDiv.length; i++) {
            if (currentDiv[i].classList.contains("active") && currentDiv[i].classList.contains("noSlider")) {
              modalOpen = true;
            }
          }
        } else if (linkCopy.length !== 0 || copyAll.length !== 0) {
          if ((targetElement.parentElement.classList.contains("linkCopyModal")) && !textareaOpen) {
            copyUrlModal();
            textareaOpen = false;
          } else if ((targetElement.parentElement.classList.contains("copyBtnModal")) && !textareaOpen) {
            copyAllFunction();
            textareaOpen = false;
          } else {
            var copyAll = document.querySelectorAll(".copyBtnModal");
            var linkCopy = document.querySelectorAll(".linkCopyModal");
            if (copyAll.length !== 0) {
              var urlCopiedall = copyAll[0].nextElementSibling.nextElementSibling.children[0];
              urlCopiedall.style.display = "none";
              if (urlCopiedall.classList.contains("urlCopiediOs")) {
                urlCopiedall.classList.remove("urlCopiediOs");
              }
            }
            if (linkCopy.length !== 0) {
              var urlCopied = linkCopy[0].nextElementSibling.nextElementSibling.children[0];
              urlCopied.style.display = "none";
              if (urlCopied.classList.contains("urlCopiediOs")) {
                urlCopied.classList.remove("urlCopiediOs");
              }
            }
          }
        } else {
          return false;
        }
      }
    }
  }

  //All text selection in modal
  function copyAllFunction() {
    var copyAll = document.querySelectorAll(".copyBtnModal")[0];
    copyAll.classList.add("activeText");
    setTimeout(function () {
      if (copyAll.classList.contains("activeText")) {
        copyAll.classList.remove("activeText");
      }
    }, 200);
    var paraDiv = document.getElementsByClassName("copyText");
    var allText = [];
    var textArea = copyAll.nextElementSibling.nextElementSibling.children[0];
    for (var i = 0; i < paraDiv.length; i++) {
      allText.push(paraDiv[i].innerHTML);
    }
    var str = allText.join(" ");
    if ((isSafari || iOS) && window.innerWidth < 991) {
      textArea.readOnly = false;
      var elem = document.getElementsByClassName("urlCopied" && "urlCopiediOs");
      if (elem.length !== 0) {
        elem[0].style.display = "none";
        elem[0].classList.remove("urlCopiediOs");
      }
      textArea.style.display = "block";
      textArea.classList.add("urlCopiediOs");
      textArea.innerHTML = str;
      textArea.focus();
      textArea.setSelectionRange(0, 99999);
      flagCopy = true;
      textareaOpen = true;
      textArea.readOnly = true;
    } else {
      textArea.style.display = "block";
      textArea.style.width = "0";
      textArea.style.height = "0";
      textArea.style.opacity = "0";
      textArea.style.zIndex = "2";
      textArea.innerHTML = str;
      textArea.readOnly = true;
      var copyText = textArea;
      copyText.select();
      document.execCommand("copy");
    }
  }

  // copy url link
  function copyUrlModal() {
    var linkCopy = document.querySelectorAll(".linkCopyModal")[0];
    linkCopy.classList.add("activeUrl");
    setTimeout(function () {
      if (linkCopy.classList.contains("activeUrl")) {
        linkCopy.classList.remove("activeUrl");
      }
    }, 200);
    var textArea = linkCopy.nextElementSibling.nextElementSibling.children[0];
    if ((isSafari || iOS) && window.innerWidth < 991) {
      textArea.readOnly = false;
      var elem = document.getElementsByClassName("urlCopied" && "urlCopiediOs");
      if (elem.length !== 0) {
        elem[0].style.display = "none";
        elem[0].classList.remove("urlCopiediOs");
      }
      textArea.style.display = "block";
      textArea.classList.add("urlCopiediOs");
      textArea.innerHTML = window.location.href;
      textArea.focus();
      textArea.setSelectionRange(0, 99999);
      textArea.readOnly = true;
      flagCopy = true;
      textareaOpen = true;
    } else {
      textArea.style.display = "block";
      textArea.style.width = "0";
      textArea.style.height = "0";
      textArea.style.opacity = "0";
      textArea.style.zIndex = "2";
      textArea.innerHTML = window.location.href;
      textArea.readOnly = true;
      var copyText = textArea;
      copyText.select();
      document.execCommand("copy");
    }
  }
  window.onhashchange = function () {
    var currentDiv = document.getElementsByTagName("section");
    if (modalOverlay.classList.contains("overlaySection")) {
            modalOverlay.classList.remove("overlaySection");
    }
    modalOpen = false;
    var self = document.getElementById("modalD");
    self.classList.remove('in');
    self.style.display = 'none';
    document.body.style = '';
    document.body.classList.remove('modal-open');
    if (modalOpen) {
      window.history.back();
    }
    if (document.getElementsByClassName('managementModal').length) {
      var elem = document.querySelector('.managementModal');
      elem.parentNode.removeChild(elem);
      var backdrop = document.getElementById('backdropM');
      if (backdrop !== null) {
        document.body.removeChild(backdrop);
      }
    } else {
      var backdrop = document.getElementById('backdropM');
      if (backdrop !== null) document.body.removeChild(backdrop);
    }
    for (i = 0; i < currentDiv.length; i++) {
      if (currentDiv[i].classList.contains("active") && currentDiv[i].classList.contains("noSlider")) {
        modalOpen = true;
      }
    }
  }
})();
var bannerVideoTag = document.getElementById("bannerVideo");
var bannerImage = document.querySelector(".bannerSection img");

function bannerReload(){
    if(window.innerWidth > 991){
        if(bannerVideoTag.hasAttribute("desktopVideo")){
            bannerVideoTag.children[0].setAttribute("src",bannerVideoTag.getAttribute("desktopVideo"));
            bannerVideoTag.setAttribute("poster",bannerVideoTag.getAttribute("desktopPoster"));
            bannerVideoTag.load();
            bannerImage.classList.add("noDisplay");
        }else{
			bannerVideoTag.classList.add("noDisplay");
        }
    }else if(window.innerWidth > 575){
        if(bannerVideoTag.hasAttribute("tabVideo")){
            bannerVideoTag.children[0].setAttribute("src",bannerVideoTag.getAttribute("tabVideo"));
            bannerVideoTag.setAttribute("poster",bannerVideoTag.getAttribute("tabPoster"));
            bannerVideoTag.load();
            bannerImage.classList.add("noDisplay");
        }else{
			bannerVideoTag.classList.add("noDisplay");
        }
    }else{
        if(bannerVideoTag.hasAttribute("mobileVideo")){
            bannerVideoTag.children[0].setAttribute("src",bannerVideoTag.getAttribute("mobileVideo"));
            bannerVideoTag.setAttribute("poster",bannerVideoTag.getAttribute("mobilePoster"));
            bannerVideoTag.load();
            bannerImage.classList.add("noDisplay");
        }else{
			bannerVideoTag.classList.add("noDisplay");
        }
    }
}

document.addEventListener('DOMContentLoaded', function () {
    if(bannerVideoTag){
        bannerReload();
    }
});
function videoComp(element) {
  var self = this;
  self.el = element;
  self.video = self.el.querySelectorAll(".videoDiv")[0];
  self.init(self);
}

function addToDataLayerWithPct(src,action,pct){
  if(isNaN(pct)){
    pct = 0;
    }
   dataLayer.push({
     'event': 'GAJWVideoEvent',
     'eventCategory' : 'JW video player',
     'eventAction' : decodeURIComponent(src.split('/')[src.split('/').length - 1]),
     'eventLabel' : action + ', ' + pct + "%"
    });
}

videoComp.prototype = {
  init: function(self) {
    
    var innerCarousel = document.querySelectorAll("#modalD .innerCarousel")[0];
    var navDiv = document.querySelector(".videoCarousel > .navDiv");

    if (innerCarousel.children.length > 1) {
      if (navDiv.classList.contains("noDisplay")) {
        navDiv.classList.remove("noDisplay");
      }
    }
    var carItem = document.getElementsByClassName("carItem");
    var src, posterImage;
    for (var i = 0; i < carItem.length; i++) {
      if (carItem[i].children[0].classList.contains("videoContainerdiv")) {
        carItem[i].children[0].children[0].id = "divVideo" + i;
        var videoDiv = carItem[i].children[0].children[0].dataset;
        src = videoDiv.href;
        posterImage = videoDiv.image;
        var playerInstance = jwplayer(carItem[i].children[0].children[0].id);
        playerInstance.setup({
          skin: {
            name: "myskin"
          },
          file: src,
          image: posterImage,
          width: "100%",
          aspectratio: "16:9"
        });

        var markers = [25,50,75]; //adjust these values if you want different progress reports
        var playersMarkers = [];
        playersMarkers.push({
          'id': "divVideo" + i,
          'markers': [],
          'paused':true
         });

         function findObjectIndexById(allElements, key, objectId) {
           for (var i = 0; i < allElements.length; i++) {
             if (allElements[i][key] == objectId) {
               return i;
             }
           }
           return null;
         }
         
         playerInstance.on('time', function(e){
           let percentPlayed = Math.floor( 100 * e.position / e.duration );
           let percentPlayedupper = Math.ceil( 100 * e.position / e.duration );
            
           var playerMarkerIndex = findObjectIndexById(playersMarkers,'id',this.id); 
            if (markers.indexOf(percentPlayed)>-1 && playersMarkers[playerMarkerIndex].markers.indexOf(percentPlayed)==-1) {
              playersMarkers[playerMarkerIndex].markers.push(percentPlayed);
              addToDataLayerWithPct(src,"Progress",percentPlayed);
            }
            else if (markers.indexOf(percentPlayedupper)>-1 && playersMarkers[playerMarkerIndex].markers.indexOf(percentPlayedupper)==-1) {
              playersMarkers[playerMarkerIndex].markers.push(percentPlayedupper);
              addToDataLayerWithPct(src,"Progress",percentPlayedupper);
            }
          });

          playerInstance.on('play',function(e){
            let percentPlayed = Math.floor(100 * playerInstance.getPosition() / playerInstance.getDuration());
            var playerMarkerIndex = findObjectIndexById(playersMarkers,'id',this.id); 

            if (playersMarkers[playerMarkerIndex].paused){
              addToDataLayerWithPct(src,"Play",percentPlayed);
              //make current video paused status as false
              playersMarkers[playerMarkerIndex].paused = false;
            }
          });

          playerInstance.on('pause',function(e){
            let percentPlayed = Math.floor(100 * playerInstance.getPosition() / playerInstance.getDuration());
            addToDataLayerWithPct(src,"Pause",percentPlayed);
            //to make current video status paused
            var playerMarkerIndex = findObjectIndexById(playersMarkers,'id',this.id); 
            playersMarkers[playerMarkerIndex].paused = true;
          });

          playerInstance.on('seek',function(e){
            var pct =  Math.floor(100 * e.offset / playerInstance.getDuration());
            addToDataLayerWithPct(src,"Seek",pct);
          });

          playerInstance.on('complete',function(e){
            var playerMarkerIndex = findObjectIndexById(playersMarkers,'id',this.id);
            playersMarkers[playerMarkerIndex].markers=[];
            addToDataLayerWithPct(src,"Complete",100);
            //make video paused status true
            playersMarkers[playerMarkerIndex].paused = true;
          });
        }//end for
      }    
  }
};

let isAlreadyClicked = false;
let isbannerScrolled = false;
var startAni = true;
var modalOpen = false;
var manualSrollSet = true;
var noSliderDiv = false;
var timeoutS;
var viewBuc = false;
var lastScrollTop = window.pageYOffset || 0;
var frompagename = "";
var scrollFlagCountForManageTeam = false;
var ComunityFlagSet = false;
var returnScroll = false;
var mouseScrolling = true;
var winScrollFlag = false;
var sideScroll = true;
var parallaxCtrlClicked = false;
var banners = [...document.querySelectorAll("section.bannerSection, section.headerFade, section.aboutUsSection")];
(function () {
    var scrolled = false;
    var anchorVal = 0;
    var scrollFlag = true;
    var activeIndex = 0;
    var touchDirY = 0;
    var touchFlag = true;
    var touchDirX = 0
    var downArrClicked = false;
    var elemList = document.getElementsByClassName("mainSliderElem");
    elemList[anchorVal].classList.add("active");
    var nav = document.getElementsByTagName('nav');
    nav[0].addEventListener("mouseenter", () => nav[0].style.opacity = 1);
    nav[0].addEventListener("mouseleave", (e) => { if (!window.location.hash) { return changeNavColor(e); } });
    var mainDiv = document.getElementsByTagName("section");
    /*Initialise the variables and function*/
    setInterval(function () {
        var checkPostion = position();
        if (checkPostion == 0 && anchorVal == 1) {
            anchorVal = 0;
        }
    }, 1000)

    function init() {
        sideScroll = true;

        banners = banners.filter((x) => x.scrollHeight > 0);
        if (document.getElementsByClassName('arrowSection').length != 0) {
            var btnClick = document.getElementsByClassName('arrowSection')[0];
            btnClick.addEventListener("click", function (e) {
                if(!isAlreadyClicked){
                    arrowClickEvent(e);
                    isbannerScrolled = true;
                    setTimeout(function () {
                        isbannerScrolled = false;
                    }, 1500);
                }
                if (e.currentTarget.attributes.length > 1) {
                    frompagename = e.currentTarget.attributes[1].value;
                }
            }, false); //for arrowClick pointing down
        }
        /* added for manualSroll from sideScroll */
        for (var i = 0; i < elemList.length; i++) {
            elemList[i].setAttribute("anchorval", i);
        }
        /*If Slider element is present and is not hidden*/
        for (var i = 1; i < mainDiv.length; i++) {
            if (document.getElementsByClassName("sliderElem").length != 0 && window.getComputedStyle(document.getElementsByClassName("sliderElem")[0], null).getPropertyValue("display") !== "none") {
                document.addEventListener("wheel", function (e) {
                    mouseWheelEvent(e);
                }, {
                    passive: false
                });
               
                window.addEventListener("scroll", function (e) {
                    if (sideScroll && !isbannerScrolled) {
                        winScrollEvent(e);
                    }
                }, false);
                mainDiv[i].addEventListener("touchstart", function (e) {
                    touchDirY = e.touches[0].clientY;
                    touchDirX = e.touches[0].clientX;
                    scrollFlag = false;
                }, false);
                mainDiv[i].addEventListener("touchend", function (e) {
                    if (Math.abs(e.changedTouches[0].clientY - touchDirY) > Math.abs(e.changedTouches[0].clientX - touchDirX)) {
                        if (touchDirY > e.changedTouches[0].clientY || touchDirY < e.changedTouches[0].clientY) {
                            if (touchDirY > e.changedTouches[0].clientY)
                                touchFlag = false;
                            else
                                touchFlag = true;
                            if (event.target.parentNode.classList.contains("scrollableDiv") || event.target.classList.contains("scrollableDiv")) {
                                if (touchDirY > e.changedTouches[0].clientY) {
                                    if (event.target.parentNode.scrollTop == 0) {
                                        modalOpen = false;
                                    }
                                } else {
                                    if (event.target.parentNode.scrollHeight - event.target.parentNode.scrollTop == event.target.parentNode.offsetHeight) {
                                        modalOpen = false;
                                    }
                                }
                            }
                            mouseWheelEvent(event, touchFlag);
                        }
                    } else if (Math.abs(e.changedTouches[0].clientY - touchDirY) < Math.abs(e.changedTouches[0].clientX - touchDirX)) {
                        if (dropPar(composedPath(event.target))) {
                            var elem = dropPar(composedPath(event.target));
                            var result = compObj(sliderObj, elem[1]);
                            if (result != "false") {
                                var self = sliderObj[result];
                                if (self.el.getElementsByClassName("carItemParent").length == 0) {
                                    swipeScroll(self, e.changedTouches[0], document.querySelectorAll(".carItem.active")[0], touchDirX)
                                } else {
                                    swipeScroll(self, e.changedTouches[0], "", touchDirX)
                                }
                            }
                        }
                    }
                }, false);
            } else {
                mainDiv[i].addEventListener("touchstart", function (e) {
                    touchDirY = e.touches[0].clientY;
                    touchDirX = e.touches[0].clientX;
                    scrollFlag = false;
                }, false);
                mainDiv[i].addEventListener("touchend", function (e) {
                    if (Math.abs(e.changedTouches[0].clientY - touchDirY) < Math.abs(e.changedTouches[0].clientX - touchDirX)) {
                        //safari swipe functionality
                        if (dropPar(composedPath(event.target))) {
                            var elem = dropPar(composedPath(event.target));
                            var result = compObj(sliderObj, elem[1]);
                            if (result != "false") {
                                var self = sliderObj[result];
                                if (self.el.getElementsByClassName("carItemParent").length == 0) {
                                    swipeScroll(self, e.changedTouches[0], document.querySelectorAll(".carItem.active")[0], touchDirX)
                                } else {
                                    swipeScroll(self, e.changedTouches[0], "", touchDirX)
                                }
                            }
                        }
                    }
                }, false);
            }
        }

        //swipe functionality safari
        function composedPath(event) {
            var path = [];
            while (event) {
                path.push(event);
                if (event.tagName === 'HTML') {
                    path.push(document);
                    path.push(window);
                    return path;
                }
                event = event.parentElement;
            }
        }

        /*If parallex controls are present*/
        if (document.getElementsByClassName("parallaxControls").length != 0) {
            document.addEventListener('DOMContentLoaded', function () {
                initParallexE();
            });
        }
        document.addEventListener("scroll", function (e) {
            if (timeoutS != undefined)
                clearTimeout(timeoutS);
            timeoutS = setTimeout(function () {
                if (document.getElementsByClassName("jw-flag-fullscreen").length == 0) {
                    scrollEvent(e);
                }
            }, 50);

        }, false);
        if (!nav[0].classList.contains("navSlideDown")) {
            nav[0].classList.add('navSlideDown'); //navBar appearance
            nav[0].style.visibility = "visible";
        }
        let sec = document.querySelectorAll(".mainSliderElem");

        //let currPosition = document.documentElement.scrollTop;
        let currPosition = position();
         for (i = 0; i < sec.length; i++) {
            let elemSec = sec[i];
            if (currPosition >= elemSec.offsetTop) {
                if (elemSec.getAttribute("anchorval") && (elemSec.scrollHeight > 0)) {
                    anchorVal = parseInt(elemSec.getAttribute("anchorval"));
                }
            }
        }
        if (window, innerWidth > 991) {
            winScrollEvent({ "type": "scroll" });
        }

        if (document.querySelectorAll("section.active").length < 1) {
            noSliderDiv = true;
            modalOpen = true;
        }
        let sectionList = [...document.querySelectorAll("section.customScroll")].filter((x) => { return ((x.scrollHeight > 0) && (!x.closest(".modal-dialog"))) });
        for (let section of sectionList) {
            if ((section.offsetTop <= position()) && (section.offsetTop + section.scrollHeight > position())) {
                nav[0].classList.add('navBackground');
            }
        }
        sectionList = [...document.querySelectorAll("section.noSlider")].filter((x) => { return ((x.scrollHeight > 0) && (!x.closest(".modal-dialog"))) });
        for (let section of sectionList) {
            if ((section.offsetTop <= position()) && (section.offsetTop + section.scrollHeight > position())) {
                noSliderDiv = true;
                modalOpen = true;
            }
        }
        if (document.querySelectorAll(".modal.in").length > 0) {
            modalOpen = true;
        }
        if (window.innerWidth > 992) {
            changeNavColor({});
        }
        else if (position() > 0) {
            nav[0].classList.add('navBackground');
        }
    }
    //this event for window side scroll event
    function winScrollEvent(event) {

        if (event.type === "scroll") {
            winScrollFlag = true;
            var sec = document.querySelectorAll(".mainSliderElem");
            var nav = document.getElementsByClassName('navbar');
            var pagefooter = document.querySelector('.footer-bottom').parentElement;
            var parallX = document.querySelector('.parallaxControls');
            var parallaxControls = document.querySelector('.parallaxControls');
            var currPosition = document.documentElement.scrollTop;
           
            if (parallaxControls) {
                parallaxControls.getBoundingClientRect();
            }
            for (i = 0; i < sec.length; i++) {

                let elemSec = sec[i];
                if (currPosition >= elemSec.offsetTop && currPosition < (elemSec.offsetTop + elemSec.offsetHeight)) {
                    if (!elemSec.classList.contains("active")) {
                        elemSec.classList.add('active');
                        if (!parallaxCtrlClicked) {
                            if (window.innerWidth > 992) {
                                if (elemSec.getAttribute("anchorval")) {
                                    anchorVal = parseInt(elemSec.getAttribute("anchorval"));
                                }
                            }
                        }
                            if (elemList[anchorVal].classList.contains("grayNav")) {
                                nav[0].classList.add('grayMenu');
                            } else if (nav[0].classList.contains('grayMenu')) {
                                nav[0].classList.remove('grayMenu');
                            }

                    }
                } else if (elemSec.classList.contains("active")) {
                    elemSec.classList.remove('active');
                }

                if (parallX) {
                    if (pagefooter.getBoundingClientRect().top < (parallX.offsetTop + parallX.offsetHeight)) {
                        if (!parallX.classList.contains("notActive")) {
                            parallX.classList.add("notActive");
                        }
                    } else {
                        parallX.classList.remove("notActive");
                    }

                }
                parallaxCtrlClicked = false;
            };
            changeNavColor(event);
        } else {
            winScrollFlag = false;
        }
    }
    /*On mousewheel*/
    function mouseWheelEvent(event, flagG) {
        sideScroll = false;
        var elemTop = position();
        if (document.querySelectorAll(".modal.in").length < 1) {
            if (viewBuc) {
                noSliderDiv = true;
                modalOpen = true;
                viewBuc = false;
            }
            if ((-event.deltaY) > 0 || event.detail < 0) {
            }
            if (noSliderDiv) {
                if ((-event.deltaY) > 0 || event.detail < 0) {
                    if (elemList[anchorVal].offsetTop >= position()) {
                        modalOpen = false;
                        if (localStorage.searchBar == "true" && window.location.hash == "#/searchPanel") {
                            modalOpen = true;
                        }
                        noSliderDiv = false;
                    }
                    if (elemList[anchorVal].offsetTop >= position()) {
                        for (i = anchorVal - 1; i >= 0; i = i - 1) {
                            if (elemList[i].offsetTop >= position()) {
                                anchorVal = i;
                                break;
                            }
                        }

                    }
                } else if (flagG != undefined) {
                    if ((anchorVal != elemList.length - 1 && elemList[anchorVal + 1].offsetTop >= position() &&
                        (elemList[anchorVal + 1].offsetTop < position() + document.documentElement.clientHeight)
                    ) ||
                        (anchorVal != 0 && (elemList[anchorVal - 1].offsetTop + elemList[anchorVal - 1].clientHeight) >= position() &&
                            (elemList[anchorVal - 1].offsetTop < position())
                        )
                    ) {
                        modalOpen = false;
                        noSliderDiv = false;
                    }
                }
            }
            if (!modalOpen) {
                if (scrolled) {
                    event.preventDefault();
                }
                if (window.location.hash === "#/searchPanel") {
                    return false;
                }
                if (!scrolled) {
                    animateElem(event, flagG);
                    if (document.getElementsByClassName("navbar").length != 0) {
                        for (var i = 0; i < elemList.length; i++) {
                            if (!window.scrollY == 0) {
                                if (window.innerWidth > 992 && !returnScroll) {
                                    changeNavColor(event);
                                }
                            }
                            if (scrolled) {
                                if (window.innerWidth > 992) {

                                    if (!nav[0].classList.contains("navBackground")) {

                                        nav[0].style.opacity = 0;
                                        nav[0].classList.remove("navSlideDown");
                                    }  
                                    if(elemTop == 0){
                                        nav[0].classList.remove('navBackground');
                                        nav[0].classList.add("navSlideDown");
                                        nav[0].style.opacity = 1;
                                        nav[0].style.visibility = "visible";
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return false;
    }

    //for arrowClick pointing down
    var IncressAnchorValCountFlg = false;

    function arrowClickEvent(e) {
        isAlreadyClicked = true;
        setTimeout(function () {
           isAlreadyClicked = false;
        }, 80);
        IncressAnchorValCountFlg = true;
        if (elemList.length > (anchorVal + 1)) {
            if (window.innerWidth >= 992) {
            nav[0].style.opacity = 0;
            nav[0].classList.remove("navSlideDown");
        }
            anchorVal = 0;
            downArrClicked = true;
            parallaxCtrlClicked = true;
            var elem = elemList[++anchorVal];
            removeActive(document.getElementsByClassName("mainSliderElem"), "active")
            document.getElementsByClassName("mainSliderElem")[anchorVal].classList.add("active")
            scrollTo(elem.offsetTop, e, document.getElementsByClassName("mainSliderElem")[anchorVal], 1500)
        }
    }
    /*On scroll of vertical scrollbar*/
    function scrollEvent(e) {
        var audioCtrlAll = document.querySelector(".audioCtrlAll");
        var audioIcon = document.querySelector(".audioIcon");
        var audioIcons = document.querySelector(".audioIcons");
        var isTop = position();
        if (isTop === 0 || isTop <= 600) {
            if (audioIcon) {
                audioIcon.classList.remove("audioSpeakerIconFixed");
            }
            if (audioIcons) {
                audioIcons.classList.remove("audioIconFixed")
            }
            var audioCtrlAllUp = document.querySelector(".audioCtrlAllUp");
            if (audioCtrlAllUp !== "" && audioCtrlAllUp !== null && audioCtrlAllUp !== undefined) {
                audioCtrlAllUp.classList.remove("audioCtrlAllUp");
                audioCtrlAllUp.classList.add("audioCtrlAll");
            }
            if (audioIcon !== "" && audioIcon !== null && audioIcon !== undefined) {
                audioIcon.classList.remove("noDisplay");
                if (audioIcon.classList.contains("iconsMap")) {
                    audioIcon.classList.remove("iconsMap");
                }
                if (audioIcon.parentElement.parentElement.parentElement.classList.contains("marker-3")) {
                    audioIcon.parentElement.parentElement.parentElement.classList.remove("marker-3");
                }
            }
        } else if (isTop > 600 && audioCtrlAll !== "" && audioCtrlAll !== null && audioCtrlAll !== undefined) {
            if (window.innerHeight < document.querySelector(".coffExp").getBoundingClientRect().top && audioIcon.classList.contains("closeSoundImg")) {
                if (audioIcon) {
                    audioIcon.classList.add("audioSpeakerIconFixed");
                }
                if (audioIcons) {
                    audioIcons.classList.add("audioIconFixed")
                }
            } else {
                audioIcon.classList.remove("audioSpeakerIconFixed");
                audioIcons.classList.remove("audioIconFixed")
            }
        }

        //code for animation in about us page and management page
        /*New code change for iPad scroll issue */
            if (innerWidth < 992) {
            var sec = document.querySelectorAll(".mainSliderElem");
            for (i = 0; i < sec.length; i++) {
                var elemSec = sec[i];
                var abtTop = position();
                var currPosition = abtTop;
                if (currPosition >= elemSec.offsetTop && currPosition < (elemSec.offsetTop + elemSec.offsetHeight)) {
                    animateFrame(elemSec);
                }
            };
        }
        var closeSearch = document.querySelectorAll(".searchBoxIcon")[0];
        if (closeSearch) {
            if (closeSearch.classList.contains("closeSearch")) {
                setTimeout(function () {
                    nav[0].classList.remove('navSlideDown');
                }, 40);
            } //nav appearance on closeIcon
        }
        if (document.getElementsByClassName("parallaxControls").length != 0) {
            parCont();
        }
        if (document.getElementsByClassName("navbar").length != 0) {
            if (window.innerWidth > 992) {
                changeNavColor(e); //navBar color change as per the sections
            }
        }
        /*Only vertical scroll bar is acrolled*/
        if (scrollFlag) {
            var elemTop = position();
            var elemL = document.getElementsByClassName("mainSliderElem");
            for (var i = 0; i < elemL.length; i++) {
                if ((elemL[i].offsetTop >= elemTop) && (elemL[i].offsetTop < elemTop + document.documentElement.clientHeight)) {
                    if (elemList[i].getElementsByClassName("scrollableDiv").length != 0) {
                        var curE = elemList[i].getElementsByClassName("scrollableDiv")[0]
                        if ((curE.scrollHeight - curE.scrollTop === curE.clientHeight) || (lastScrollTop > window.pageYOffset && curE.scrollTop == 0)) {
                            lastScrollTop = window.pageYOffset;
                            modalOpen = false;
                        }
                        lastScrollTop = window.pageYOffset;
                        anchorVal = i;
                        animateFrame(elemL[i])
                        return false;
                    } else {
                        if (elemList[i].classList.contains("noSlider")) {
                            if (elemList[i]) {
                                modalOpen = true;
                                noSliderDiv = true;
                                if (!sideScroll) {
                                    anchorVal = i;
                                }
                                ComunityFlagSet = false;
                            }
                        } else {
                            modalOpen = false;
                            stopSlide(findSlidingElem(elemL[anchorVal].getElementsByClassName("carouselDiv")))
                            stopSlide(findSlidingElem(elemL[i].getElementsByClassName("carouselDiv")))
                            animateFrame(elemL[i])
                            if (i == 0) {
                                anchorVal = i;
                                ComunityFlagSet = false;
                            } else {
                                if (anchorVal < i) {
                                    if (IncressAnchorValCountFlg == true) {
                                        ComunityFlagSet = true;
                                        anchorVal = i;
                                    } else {
                                        ComunityFlagSet = false;
                                        anchorVal = i - 1;
                                    }
                                } else if (anchorVal == i) {
                                    if (frompagename == "managementTeamPage" || frompagename == "aboutUsPage" || frompagename == "communityPage") {
                                        anchorVal++;
                                        scrollFlagCountForManageTeam = true;
                                        ComunityFlagSet = false;
                                    }
                                }
                            }
                            startSlide(findSlidingElem(elemL[i].getElementsByClassName("carouselDiv")))
                        }
                    }
                    break;
                } else if ((elemL[i].offsetTop < elemTop)) {
                    animateFrame(elemL[i]);
                }
            }
        }
    }

    /*Initialise parallex components*/
    function initParallexE() {
        if (document.getElementsByClassName("parallaxControls").length != 0) {
            if (document.getElementsByClassName("mainSliderElem").length != 0) {
                if (document.querySelector(".mainSliderElem.active")) {
                     if (!document.querySelector(".mainSliderElem.active").classList.contains("parallaxWrapper")) {
                    document.getElementsByClassName("parallaxControls")[0].classList.add("notActive")
                }
                else {
                    parCont();
                }
            }

        }
        }
        for (var j = 0; j < document.getElementsByClassName("parallaxControls").length; j++) {
            if (!document.getElementsByClassName("parallaxControls")[j].classList.contains("positioning")) {
                var slideObj = document.getElementsByClassName("parallaxControls")[j].getElementsByClassName("pointerDiv");
                for (var i = 0; i < slideObj.length; i++) {
                    slideObj[i].addEventListener('click', function (event) {
                        var elems = document.getElementsByClassName("parallaxWrapper");
                        var elem = elems[event.currentTarget.children[0].getAttribute("data-slide")];
                        if (elem) {
                            anchorVal = findElemIndex(elemList, elems[event.currentTarget.children[0].getAttribute("data-slide")]);
                            scrollTo(elem.offsetTop, event, elem, 1500);
                        }
                        parallaxCtrlClicked = true;
                    });
                }
            }
        }
    }
    /*Find index of current section from list of sections for parallex*/
    function findIndex(elems, currentElem) {
        var i = 0;
        for (i; i < elems.length; i++) {
            if (elems[i] === currentElem)
                break
        }
        return i
    }
    /*Find index of current section from list of sections for parallex*/
    function parCont() {
        var pos = position();
        var elemTop = document.getElementsByClassName("parallaxControls")[0].offsetTop + document.getElementsByClassName("parallaxControls")[0].clientHeight / 2;
        var elemL = document.getElementsByClassName("mainSliderElem");
        var elemW = document.getElementsByClassName("parallaxWrapper");
        var elem_shareOptions = document.getElementsByClassName("shareOptions");
        var elem_shareBtnParent = document.getElementsByClassName("shareBtnParent");

        for (var i = elemL.length - 1; i >= 0; i--) {
            var elementOffset = elemL[i].offsetTop - pos;
            if ((Math.abs(elementOffset) <= elemTop && activeIndex == elemL.length - 1) || (elementOffset <= elemTop && activeIndex != elemL.length - 1)) {
                if (activeIndex != i) {
                    var pointerElemPar = document.getElementsByClassName("parallaxControls")[0]
                    if (elemL[i].classList.contains("parallaxWrapper")) {
                        var ind = findIndex(elemW, elemL[i])
                        var pointerElem = document.getElementsByClassName("pointerDiv")
                        for (var index = 0; index < pointerElem.length; index++) {
                            if (index != ind) {
                                pointerElem[index].classList.remove("active")
                                /* for share panale hide and show code*/
                                if (elem_shareOptions.length != 0) {
                                    if (!pointerElemPar.classList.contains("notActive")) {
                                        if (elem_shareBtnParent[0].classList.contains("activeShare")) {
                                            elem_shareOptions[0].classList.add("active");
                                        }
                                    } else {
                                        elem_shareOptions[0].classList.remove("active");
                                        if (elem_shareBtnParent[0].classList.contains("activeShare")) {
                                            elem_shareBtnParent[0].children[1].style.display = "none";
                                            elem_shareBtnParent[0].children[0].style.display = "block";
                                        }
                                        elem_shareBtnParent[0].classList.remove("activeShare");
                                    }
                                }
                                /* for share panale hide and show code*/
                            } else {
                                pointerElem[index].classList.add("active")
                                pointerElemPar.classList.remove("notActive")
                                /* for share panale hide and show code*/
                                if (elem_shareOptions.length != 0) {
                                    if (!pointerElemPar.classList.contains("notActive")) {
                                        if (elem_shareBtnParent[0].classList.contains("activeShare")) {
                                            elem_shareOptions[0].classList.add("active");
                                        }
                                    } else {
                                        elem_shareOptions[0].classList.remove("active");
                                        if (elem_shareBtnParent[0].classList.contains("activeShare")) {
                                            elem_shareBtnParent[0].children[1].style.display = "none";
                                            elem_shareBtnParent[0].children[0].style.display = "block";
                                        }
                                        elem_shareBtnParent[0].classList.remove("activeShare");
                                    }
                                }
                                /*  for share panale hide and show code*/
                            }
                        }

                    } else {
                        pointerElemPar.classList.add("notActive")
                        /*  for share panale hide and show code*/
                        if (elem_shareOptions.length != 0) {
                            if (!pointerElemPar.classList.contains("notActive")) {
                                if (elem_shareBtnParent[0].classList.contains("activeShare")) {
                                    elem_shareOptions[0].classList.add("active");
                                }
                            } else {
                                elem_shareOptions[0].classList.remove("active");
                                if (elem_shareBtnParent[0].classList.contains("activeShare")) {
                                    elem_shareBtnParent[0].children[1].style.display = "none";
                                    elem_shareBtnParent[0].children[0].style.display = "block";
                                }
                                elem_shareBtnParent[0].classList.remove("activeShare");
                            }
                        }
                        /*  for share panale hide and show code*/
                    }
                    activeIndex = i;
                }
                break;
            }
        }
    }
    if (window.innerWidth > 992) {
        function changeNavColor(e) {
            let currPosition = position();
            sideScroll = true;
            var elemTop = position();
            for (var i = elemList.length - 1; i >= 0; i--) {
                if (!elemList[activeIndex].children[0].classList.contains("footer-bottom")) {
                    var elementOffset = elemList[activeIndex].offsetTop;
                }
                if (elementOffset == elemTop || elemTop == 0) {
                    if (elemList[i].classList.contains("grayNav")) {
                        document.getElementsByClassName('navbar')[0].classList.add('grayMenu');
                        if (nav[0].classList.contains("navBackground")) {
                            nav[0].classList.remove('navBackground');
                        }
                        // add and remove graymenu class on mouseover and mouseout event 
                        if (window.innerWidth > 991) {
                            var grayMenu = document.getElementsByClassName('grayMenu')[0];
                            var target_ul = grayMenu.getElementsByClassName('nav navbar-nav pull-right customNav paddingTopNav')[0];
                            var target_li = target_ul.getElementsByClassName('navText');
                            for (var j = 0; j < target_li.length; j++) {
                                target_li[j].onmouseover = function () {
                                    var el = this;
                                    megaMenuOnHover(el);
                                };
                                target_li[j].onmouseout = function () {
                                    var el = this;
                                    megaMenuHoverOut(el);
                                };
                            }
                        }
                    } else {
                        // remove the mouse events once the class is removed
                        target_li = document.getElementsByClassName('navText');
                        for (var j = 0; j < target_li.length; j++) {
                            target_li[j].onmouseover = function () { };
                            target_li[j].onmouseout = function () { };
                        }
                    }
                    if (elemTop == 0) {
                        if (!elemList[activeIndex].classList.contains("customScroll") && nav[0].classList.contains("navBackground")) {
                            nav[0].classList.remove('navBackground');
                        }
                        if (!elemList[activeIndex].classList.contains("grayNav") && nav[0].classList.contains("grayMenu")) {
                            nav[0].classList.remove('grayMenu');
                        }
                    }
                }
                if ((elemList[i].offsetTop <= elemTop) && ((elemList[i].offsetTop + elemList[i].scrollHeight > elemTop ))) {

                    if (elemList[i].classList.contains("grayNav")) {
                        document.getElementsByClassName('navbar')[0].classList.add('grayMenu');
                        if (nav[0].classList.contains("navBackground")) {
                            nav[0].classList.remove('navBackground');
                        }
                        //swati-- add and remove graymenu class on mouseover and mouseout event 
                        var grayMenu = document.getElementsByClassName('grayMenu')[0];
                        var target_ul = grayMenu.getElementsByClassName('nav navbar-nav pull-right customNav paddingTopNav')[0];
                        if (target_ul) {
                            var target_li = target_ul.getElementsByClassName('navText');
                            for (var j = 0; j < target_li.length; j++) {
                                target_li[j].onmouseover = function () {
                                    var el = this;
                                    megaMenuOnHover(el);
                                };
                                target_li[j].onmouseout = function () {
                                    var el = this;
                                    megaMenuHoverOut(el);
                                };
                            }
                        }
                        break;
                    }
                    let sectionList = [...document.querySelectorAll("section.customScroll")].filter((x) => { return ((x.scrollHeight > 0) && (!x.closest(".modal-dialog"))) });
                    let customScrollFlag = false
                    for (let section of sectionList) {
                        if ((section.offsetTop <= position()) && (section.offsetTop + section.scrollHeight > position())) {
                            customScrollFlag = true;
                        }
                    }
                    if (customScrollFlag && !nav[0].classList.contains("navBackground")) { // change added
                        nav[0].classList.add('navBackground');
                        nav[0].style.visibility = "visible";
                        if (manualSrollSet == true) {
                            if (!nav[0].classList.contains("navSlideDown")) {
                                nav[0].classList.add('navSlideDown'); //navBar appearance
                            }
                            setTimeout(function () {
                                manualSrollSet = false;
                            }, 300);
                        }
                        break;
                    } else {
                        document.getElementsByClassName('navbar')[0].classList.remove('grayMenu');
                        manualSrollSet = true;
                        break;
                    }
                }
            }
            let bannerHeader = false;
            for (let banner of banners) {
                if ((banner.offsetTop <= currPosition) && ((banner.offsetTop + banner.clientHeight) > currPosition)) {
                    if ((banner.offsetTop + 40 >= currPosition)) {
                        if (nav[0].style.opacity == 0) {
                            nav[0].style.opacity = 1;
                            nav[0].style.visibility = "visible";
                            nav[0].classList.add("navSlideDown");
                        }
                        nav[0].style.opacity = (40.0 - (currPosition - banner.offsetTop)) / 40.0;
                        
                    }
                    else {
                        nav[0].classList.remove("navSlideDown");
                        nav[0].style.visibility = "hidden";
                        nav[0].style.opacity = 0;
                    }
                    bannerHeader = true;
                    nav[0].classList.remove("navBackground");

                }

            }
            if (!bannerHeader) {
                nav[0].style.opacity = 1;
                nav[0].style.visibility = "visible";
                nav[0].classList.add("navSlideDown");
                nav[0].classList.add("navBackground");
                nav[0].classList.remove("grayMenu");
            }
            if (elemList.length && window.innerWidth > 992) {
                lastVideoStop(elemList);
            }
        }
    }

    var MenuBeforHoverClass = "";
    function megaMenuOnHover(el) {
        if (nav[0].classList.contains("navBackground")) {
            MenuBeforHoverClass = "navBackground";
        } else if (nav[0].classList.contains("grayMenu")) {
            MenuBeforHoverClass = "grayMenu";
        } else {
            MenuBeforHoverClass = "";
        }
        if (el.classList.contains("megaMenu")) {
            nav[0].classList.remove('grayMenu');
        } else if ((!nav[0].classList.contains("navBackground")) && (nav[0].classList.contains("grayMenu"))) {
            el.classList.add("hoverGray");
        }
    }
    function megaMenuHoverOut(el) {
        if (MenuBeforHoverClass === "navBackground") {
            nav[0].classList.remove('grayMenu');
            nav[0].classList.add('navBackground');
        } else if (MenuBeforHoverClass === "grayMenu") {
            nav[0].classList.remove('navBackground');
            nav[0].classList.add('grayMenu');
        } else {
            nav[0].classList.remove('navBackground');
            nav[0].classList.remove('grayMenu');
        }
        if (el.classList.contains("hoverGray")) {
            el.classList.remove("hoverGray");
        }
    }
    function removeActive(elemList, paramL) {
        for (var i = 0; i < elemList.length; i++) {
            if (elemList[i].classList.contains("active")) {
                elemList[i].classList.remove("active");
            }
        }
    }
    function animateFrame(elemA) {
        if (document.getElementsByClassName("captionBorder").length != 0) {
            setAnimationF(elemA, "captionBorder", "inView");
        }
        if (document.getElementsByClassName("headerCap").length != 0) {
            setAnimationF(elemA, "headerCap", "inView");
        }
        if (document.getElementsByClassName("infoWrapper").length != 0) {
            setAnimationF(elemA, "infoWrapper", "inView");
        }
        if (document.getElementsByClassName("animm").length != 0) {
            setAnimationF(elemA, "animm", "inView");
        }
		if (document.getElementsByClassName("echart").length != 0) {
            setAnimationF(elemA, "animm", "inView");
        }

        if (document.getElementsByClassName("coffContent").length != 0) {
            setAnimationF(elemA, "coffContent", "inView");
        }
        if (document.getElementsByClassName("aboutUsBorder").length != 0) {
            setAnimationF(elemA, "aboutUsBorder", "inView");
        }
        if (document.getElementsByClassName("overlayWrapper").length != 0) {
            setAnimationF(elemA, "overlayWrapper", "inView");
        }
    }

    function setAnimationF(elem, elemName, elemProp) {
        var doughnutDiv = document.getElementById("charts");

        if (doughnutDiv && startAni) {
            var companyNameFirst = document.getElementById("charts").getAttribute("companyNameFirst");
            var companyNameMiddle = document.getElementById("charts").getAttribute("companyNameMiddle");
            var companyNameLast = document.getElementById("charts").getAttribute("companyNameLast");
            var fontSizeValue;
            var companyName = "";
            if (companyNameFirst !== "") {
                if (companyNameFirst != null) {
                    companyName += companyNameFirst;
                    fontSizeValue = 20;
                }
            }
            if (companyNameMiddle !== "") {
                if (companyNameMiddle != null) {
                    companyName +=
                        "\n" + companyNameMiddle;
                    fontSizeValue = 15;
                }
            }
            if (companyNameLast) {
                if (companyNameLast != null) {
                    companyName +=
                        "\n" + companyNameLast;
                    fontSizeValue = 15;
                }
            }
            if (document.getElementsByClassName("excelPath").length !== 0 && document.getElementsByClassName("excelSheet").length !== 0) {
                var xhrRequest = new XMLHttpRequest();
                var excelPath = document.getElementsByClassName("excelPath")[0].innerHTML;
                var excelData;
                var excelCompanies = [];
                var excelSheet = document.getElementsByClassName("excelSheet")[0].innerHTML;
                xhrRequest.open('GET', "/bin/companyPieChartDataServlet?excelPath=" + excelPath + "&excelSheet=" + excelSheet, true);
                xhrRequest.onload = function () {
                    if (xhrRequest.status === 200) {
                        excelData = JSON.parse(xhrRequest.response).response;
                        for (var i = 0; i < excelData.length; i++) {
                            excelCompanies[i] = excelData[i].name;
                        }
                        // Initialize after dom ready
                        var myChart = echarts.init(document.getElementById('charts'), 'infographic');
                        option = {
                            title: {
                                text: companyName,
                                x: 'center',
                                y: 'center',
                                textStyle: {
                                    color: 'rgba(30,144,255,0.8)',
                                    fontSize: fontSizeValue,
                                    fontWeight: 'bolder'
                                },
                                subtextStyle: {
                                    color: 'rgba(30,144,255,0.8)',
                                    fontSize: 15,
                                    fontWeight: 'bolder'
                                }
                            },
                            tooltip: {
                                trigger: 'item',
                                formatter: "{a} <br/>{b} : {c} ({d}%)"
                            },
                            legend: {
                                selectedMode: false,
                                orient: 'horizontal',
                                y: 'bottom',
                                data: excelCompanies
                            },
                            toolbox: {
                                show: true,
                                feature: {}
                            },
                            calculable: false,

                            series: [{
                                name: document.querySelector(".echartHeading").innerHTML,
                                type: 'pie',
                                selectedMode: 'single',
                                radius: [100, 140],
                                emphasis: {
                                    label: {
                                        show: true,
                                        position: 'center',
                                        textStyle: {
                                            fontSize: '30',
                                            fontWeight: 'bold'
                                        }
                                    }
                                },
                                data: excelData
                            }]
                        };
                        // Load data into the ECharts instance 
                        myChart.setOption(option);
                    }
                }
                xhrRequest.send();
            }
            startAni = false;
            var echart = document.getElementsByClassName("echart")[0];
            var overflowChart = document.getElementsByClassName("overflowChart")[0];
            overflowChart.scrollBy((echart.offsetWidth - window.innerWidth) / 2 + 15, 0)
        }
        if (elem) {
            if (elem.getElementsByClassName(elemName).length != 0) {
                elemsList = elem.getElementsByClassName(elemName)
                for (var i = 0; i < elemsList.length; i++) {
                    if (!elemsList[i].classList.contains(elemProp)) {
                        elemsList[i].classList.add(elemProp)
                    }
                }
            }
        }
    }

    function animateCards(elemA) {
        setAnimationC(elemA, "fadeInUpSmall", "inView");
    }

    function setAnimationC(elem, elemName, elemProp) {
        if (elem.getElementsByClassName(elemName).length != 0) {
            elemsList = elem.getElementsByClassName(elemName)
            for (var i = 0; i < elemsList.length; i++) {
                if (!elemsList[i].classList.contains(elemProp)) {
                    elemsList[i].classList.add(elemProp
					)
                }
            }
        }
    }

    function position() {
        if (window.scrollY === 0 && document.documentElement.scrollTop === 0)
            return Math.ceil(document.documentElement.offsetTop || document.body.parentNode.offsetTop || document.body.offsetTop);
        else
            return Math.ceil(document.documentElement.scrollTop || document.body.parentNode.scrollTop || document.body.scrollTop);
    }
    var elemDir;

    function animateElem(e, flagG) {
        if (flagG != undefined)
            elemDir = flagG;
        else
            elemDir = (-e.deltaY) > 0 || e.detail < 0;
        if (elemDir) {
            ComunityFlagSet = false;
            if (anchorVal > 0) {
                //this if use for only returnScroll
                if (!document.getElementsByClassName("mainSliderElem")[anchorVal - 1].classList.contains("noSlider" && "customScroll") && document.querySelectorAll(".summaryOverlay.active").length <= 0) {
                    stopSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")))
                    stopSlide(findSlidingElem(elemList[anchorVal - 1].getElementsByClassName("carouselDiv")))
                    var elem = elemList[--anchorVal];
                    if (scrollFlagCountForManageTeam == true && frompagename == "managementTeamPage") {
                        var elem = elemList[--anchorVal];
                        downArrClicked = false;
                    }
                    removeActive(document.getElementsByClassName("mainSliderElem"), "active")
                    document.getElementsByClassName("mainSliderElem")[anchorVal].classList.add("active")
                    initSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")))
                    scrollTo(elem.offsetTop, e, document.getElementsByClassName("mainSliderElem")[anchorVal], 1500);
                    scrolled = true;
                    scrollFlag = false;
                } else {
                    if (!nav[0].classList.contains("navBackground")) {
                        nav[0].classList.add('navBackground');
                    }
                    nav[0].style.visibility = "visible";
                    returnScroll = true;
                }

            } else if (downArrClicked) {
                stopSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")))
                stopSlide(findSlidingElem(elemList[anchorVal + 1].getElementsByClassName("carouselDiv")))
                var elem = elemList[anchorVal];
                downArrClicked = false;
                removeActive(document.getElementsByClassName("mainSliderElem"), "active")
                document.getElementsByClassName("mainSliderElem")[anchorVal].classList.add("active")
                initSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")))
                scrollTo(elem.offsetTop, e, document.getElementsByClassName("mainSliderElem")[anchorVal], 1500);
                scrolled = true;
                scrollFlag = false;
            }

        } else {
            if (elemList.length > (anchorVal + 1) && document.querySelectorAll(".summaryOverlay.active").length <= 0) {
                stopSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")));
                stopSlide(findSlidingElem(elemList[anchorVal + 1].getElementsByClassName("carouselDiv")));
                scrollFlagCountForManageTeam = false;
                if (downArrClicked) {
                    ComunityFlagSet = false;
                    if (anchorVal == 0) {
                        var elem = elemList[++anchorVal];
                    } else {
                        var elem = elemList[anchorVal];
                        downArrClicked = false;
                    }
                } else {
                    if (ComunityFlagSet == true && frompagename == "communityPage") {
                        var elem = elemList[anchorVal];
                        ComunityFlagSet = false;
                    } else {
                        var elem = elemList[++anchorVal];
                    }
                }
                removeActive(document.getElementsByClassName("mainSliderElem"), "active");
                document.getElementsByClassName("mainSliderElem")[anchorVal].classList.add("active");
                initSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")));
                scrollTo(elem.offsetTop, e, document.getElementsByClassName("mainSliderElem")[anchorVal], 1500);
                scrolled = true;
                scrollFlag = false;
            }
        }
    }

    var requestAnimFrame = (function () {
        return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {
            window.setTimeout(callback, 1000 / 60);
        };
    })();
var hasInViewPort = false;
var slidesCarousel = document.querySelectorAll('.slidesCarousel');
function isElementInViewport(el) {
    var rect = el.getBoundingClientRect();
    return (rect.top <= window.innerHeight) && ((rect.top + rect.height) >= 0);
}
function slideShowPlayPause(e) {
    for (var i = 0; i < slidesCarousel.length; i++) {
        if (isElementInViewport(slidesCarousel[i]) && !hasInViewPort) {
            scrollTo(slidesCarousel[i].offsetTop,slidesCarousel[i],document.getElementsByClassName("mainSliderElem")[anchorVal],2000);
            hasInViewPort = true;
            //setTimeout(function () {
                if(localStorage.searchBar == "false" && window.location.hash != "#/searchPanel"){
                    nav[0].classList.remove('navBackground');
                }
                for (var i = 0; i < slidesCarousel.length; i++) {
                    slidesCarousel[i].scrollIntoView({
                        behavior:"smooth"
                    });
                }
            //}, 2500);
            
        }
        else if(!isElementInViewport(slidesCarousel[i]) && hasInViewPort ){  
            hasInViewPort = false;
        }
    }
}
window.addEventListener('scroll', function(e) {
    if(window.innerWidth > 991){
        slideShowPlayPause();
    }
});
    function scrollTo(to, callback, elemCur, duration) { //FIXME this always starts from '0', instead of the clicked element offsetTop -> This is because the position is calculated for the main <html> element, not the <iframe>'s <html> tag
        function move(amount) {
            document.documentElement.scrollTop = amount;
            document.body.parentNode.scrollTop = amount;
            document.body.scrollTop = amount;
        }
        var start = position(),
            to = to
        change = to - start,
            currentTime = 0,
            increment = 20;
        decrement = -20;
        var animateScroll = function () {
            currentTime += increment;
            var val = Math.easeInOutQuad(currentTime, start, change, duration);
            move(val);
            if (currentTime < duration) {
                requestAnimFrame(animateScroll);
            } else {
                /*Animation on one touch scroll*/
                animateFrame(elemCur);
                if (elemCur.classList.contains("noSlider")) {
                    modalOpen = true;
                    noSliderDiv = true;
                } else {
                    modalOpen = false;
                    noSliderDiv = false;
                }
                startSlide(findSlidingElem(elemList[anchorVal].getElementsByClassName("carouselDiv")))
                setTimeout(function () {
                    scrolled = false;
                    scrollFlag = true;
                    if (elemList[anchorVal].childNodes[1].classList === undefined || !elemList[anchorVal].childNodes[1].classList.contains("footer-bottom")) {
                        if (!nav[0].classList.contains("navSlideDown")) {
                            nav[0].classList.add('navSlideDown'); //nav appearance
                        }
                    }
                }, 100)
                if (elemList[anchorVal].getElementsByClassName("scrollableDiv").length != 0) {
                    modalOpen = true;
                }
            }
        };
        animateScroll();
    }
    window.addEventListener("hashchange", function () {
        if (document.URL.split("#")[1] == "/searchPanel") {
            nav[0].classList.add('navBackground');
        }
        else {
            nav[0].classList.remove('navBackground');
            init();
        }
    });
    init();
})();

Math.easeInOutQuad = function (t, b, c, d) {
    t /= d / 2;
    if (t < 1) {
        return c / 2 * t * t + b
    }
    t--;
    return -c / 2 * (t * (t - 2) - 1) + b;
};

function findSlidingElem(elemListG) {
    var arr = new Array();
    for (var i = 0; i < sliderObj.length; i++) {
        for (var j = 0; j < elemListG.length; j++) {
            if (elemListG[j] === sliderObj[i].el) {
                arr[arr.length] = sliderObj[i];
            }
        }
    }
    if (arr.length != 0)
        return arr
    else
        return -1;
}

function stopSlide(slideElem) {
    if (slideElem != -1) {
        for (var i = 0; i < slideElem.length; i++) {
            slideElem[i].stopImgTimer(slideElem[i]);
        }
    }
}

function startSlide(slideElem) {
    if (slideElem != -1) {
        for (var i = 0; i < slideElem.length; i++) {
            slideElem[i].startImgTimer(slideElem[i]);
        }
    }
}

function initSlide(slideElem) {
if (slideElem != -1) {
        for (var i = 0; i < slideElem.length; i++) {
            if (!slideElem[i].el.classList.contains("imgCarousel")) {
                slideElem[i].initElement(slideElem[i]);
            }
        }
    }
}

function findElemIndex(elmL, elemC) {
    for (var i = 0; i < elmL.length; i++) {
        if (elmL[i] === elemC)
            return i;
    }
}

function dropPar(elemList) {
    for (var i = 0; i < elemList.length; i++) {
        if (elemList[i].classList != undefined && (elemList[i].classList.contains("carouselDiv")) && !(elemList[i].classList.contains("carouselFade")) &&
            !event.target.parentNode.classList.contains("forBrands")) {
            return [true, elemList[i]];
        }
    }
    return [false, 0]
}

function compObj(elemLis, elemO) {
    for (var i = 0; i < elemLis.length; i++) {
        if (elemLis[i].el.classList === elemO.classList) {
            return i;
        }
    }
    return "false"
}

function swipeScroll(self, changedClientT, targetE, touchDirX) {
    self.stopImgTimer(self)
    if (changedClientT.clientX > touchDirX) {
        self.changeImageCar(true, self, false, targetE)
    } else {
        self.changeImageCar(false, self, false, targetE)
    }
    self.startImgTimer(self)

}

function lastVideoStop(elemList) {
    var videoDiv = document.querySelectorAll('.videodiv .jwplayer');
    if (!elemList[0].classList.contains('active')) {
        if (videoDiv.length) {
            for (var i = 0; i < videoDiv.length; i++) {
                if (jwplayer(videoDiv[i]).getState() == "playing" || jwplayer(videoDiv[i]).getState() == "buffering") {
                    jwplayer(videoDiv[i]).stop();
                }
            }
        }
    } else if (elemList[0].classList.contains('active')) {
        if (videoDiv.length) {
            for (var i = 0; i < videoDiv.length; i++) {
                if (jwplayer(videoDiv[i]).getState() == "idle" || jwplayer(videoDiv[i]).getState() == "stop") {
                    jwplayer(videoDiv[i]).play();
                }
            }
        }
    }
}

//Play pause HTML videos banner videos when scrolled based on scroll position
function playPauseHTMLVideos(HTMLVideo) {
    if ((HTMLVideo.hasAttribute("desktopVideo") && window.innerWidth > 991)
        || (HTMLVideo.hasAttribute("tabVideo") && window.innerWidth < 991 && window.innerWidth > 575)
        || (HTMLVideo.hasAttribute("mobileVideo") && window.innerWidth < 575)
    ) {
        if (HTMLVideo.getBoundingClientRect().top < 0 && HTMLVideo.paused === false) {
            HTMLVideo.pause();
        }
        else if (HTMLVideo.getBoundingClientRect().top >= 0 && HTMLVideo.paused === true) {
            HTMLVideo.play();
        }
    }
}
var HTMLBannerVideo = document.getElementById("bannerVideo");
if (HTMLBannerVideo) {
    document.addEventListener("scroll", function () {
        playPauseHTMLVideos(HTMLBannerVideo);
    })
    window.addEventListener("blur", function () {
        if (HTMLBannerVideo.paused === false) {
            HTMLBannerVideo.pause();
        }
    })
    window.addEventListener("focus", function () {
        playPauseHTMLVideos(HTMLBannerVideo);
    })
}
if (window.innerWidth <= 991) {
    window.addEventListener('touchmove', function () {
        if (document.getElementsByClassName('urlCopied')[0]) {
            document.getElementsByClassName("urlCopied")[0].style.display = "none";
            document.getElementsByClassName("urlCopied")[0].blur();
        }
    });
}

if (!Element.prototype.matches) Element.prototype.matches = Element.prototype.msMatchesSelector;
if (!Element.prototype.closest) Element.prototype.closest = function (selector) {
    var el = this;
    while (el) {
        if (el.matches(selector)) {
            return el;
        }
        el = el.parentElement;
    }
};
var self;

function CarousalComp(element, time) {
    self = this;
    self.el = element;
    self.intervalCarousel = time;
    self.startstop = true;
    self.init(self);

}

var vidCT, vidMD;
var testFlag = false;
var activePause = true;
var videoPopupFlag = false;
var totalTime = 15000;

function popupVideoPlayPause() {
    if (window.innerWidth > 320 && screen.width > 320) {
        videoPopupFlag = !videoPopupFlag;
        var el = document.getElementsByClassName("centerIndicator")[0];
        if (!el.classList.contains("activePause") || !activePause) {
            activePause = !activePause;
            el.classList.toggle("activePause");
            var videoDiv = document.getElementsByClassName("jwplayer");
            for (var i = 0; i < videoDiv.length; i++) {
                if (videoDiv[i].parentElement.classList.contains("active")) {

                    if (el.classList.contains("activePause")) {
                        if (jwplayer(videoDiv[i]).getState() == "playing" || jwplayer(videoDiv[i]).getState() == "buffering") {
                            jwplayer(videoDiv[i]).pause();
                        }
                        vidCT = jwplayer(videoDiv[i].id).getPosition();
                        vidMD = jwplayer(videoDiv[i].id).getDuration();
                        stopSlide(findSlidingElem(videoDiv[i].parentElement.parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
                    } else {
                        if (jwplayer(videoDiv[i]).getState() == "idle" || jwplayer(videoDiv[i]).getState() == "stop" || jwplayer(videoDiv[i]).getState() == "paused") {
                            jwplayer(videoDiv[i]).play();
                        }

                        var carouselTimeUp = Math.floor(vidMD - vidCT);
                        if (parseInt(carouselTimeUp) == 0) {
                            self.intervalCarousel = parseInt(18000);

                        } else
                            self.intervalCarousel = parseInt((carouselTimeUp + 1) * 1000);
                        testFlag = true;
                        startSlide(findSlidingElem(videoDiv[i].parentElement.parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
                    }

                }

            }

            //for carouseltimer stop on mobile and tab
            if (window.innerWidth < 991) {
                self.playPauseTimer(self);
            }
        }
    } else {
        return false;
    }
}
function extractTextWithTags(htmlString,n) {
    let count = 0;
    let result = '';
    for (let i = 0; i < htmlString.length; i++) {
        const char = htmlString[i];
        result += char;
        if (char === '<') {
            const endIndex = htmlString.indexOf('>', i);
            result += htmlString.substring(i + 1, endIndex + 1);
            i = endIndex;
        } else {
            count++;
        }
        if (count === n) {
            break;
        }
    }
    return result;
}
CarousalComp.prototype = {

    init: function (self) {

        if (self.el.classList.contains("heroCarousel")) {
            var videoDiv = document.getElementsByClassName("jwplayer");
            var playPauseBtn = document.getElementsByClassName("centerIndicator")[0];

            function videoPlayPause() {
                if (window.innerWidth > 320 && screen.width > 320) {

                    var el = this;
                    el.classList.toggle("activePause");
                    for (var i = 0; i < videoDiv.length; i++) {
                        if (videoDiv[i].parentElement.classList.contains("active")) {

                            if (el.classList.contains("activePause")) {
                                if (window.innerWidth > 992 && screen.width > 992) {
                                    if (jwplayer(videoDiv[i]).getState() == "playing" || jwplayer(videoDiv[i]).getState() == "buffering") {
                                        jwplayer(videoDiv[i]).pause();
                                    }
                                }
                                stopSlide(findSlidingElem(videoDiv[i].parentElement.parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
                            } else {
                                if (window.innerWidth > 992 && screen.width > 992) {
                                    if (jwplayer(videoDiv[i]).getState() == "idle" || jwplayer(videoDiv[i]).getState() == "stop" || jwplayer(videoDiv[i]).getState() == "paused") {
                                        jwplayer(videoDiv[i]).play();
                                    }
                                }
                                var vidCT = jwplayer(videoDiv[i].id).getPosition();
                                var vidMD = jwplayer(videoDiv[i].id).getDuration();
                                var carouselTimeUp = Math.floor(vidMD - vidCT);
                                if (parseInt(carouselTimeUp) == 0)
                                    self.intervalCarousel = parseInt(18000);
                                else
                                    self.intervalCarousel = parseInt((carouselTimeUp + 1) * 1000);
                                startSlide(findSlidingElem(videoDiv[i].parentElement.parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
                            }

                        }

                    }

                    //for carouseltimer stop on mobile and tab
                    if (window.innerWidth < 991) {
                        self.playPauseTimer(self);
                    }
                } else {
                    return false;
                }
            }
            playPauseBtn.addEventListener("click", videoPlayPause);
            if (!videoDiv.length == 0) {

                var myButton = document.getElementsByClassName("myButton");
                for (var i = 0; i < myButton.length; i++) {
                    myButton[i].addEventListener("click", popupVideoPlayPause);
                }

                if (window.innerWidth > 991) {

                    var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) {
                        return p.toString() === "[object SafariRemoteNotification]";
                    })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));
                    if (isSafari) {

                        jwplayer(videoDiv[0].id).on('time', function () {
                            var videoCT = jwplayer(videoDiv[0].id).getPosition();
                            var videoMD = jwplayer(videoDiv[0].id).getDuration();
                            var percent = Math.round((100 * videoCT / videoMD)) + "%";
                            var widthPr = percent;
                            if (videoDiv[0].previousElementSibling.classList.contains("videoSeekBar")) {
                                videoDiv[0].previousElementSibling.style.width = widthPr;
                            }

                        });


                    } else {
                        jwplayer(videoDiv[0].id).on('ready',function () {
                            jwplayer(videoDiv[0].id).on('time', function () {
                                var videoCT = jwplayer(videoDiv[0].id).getPosition();
                                var videoMD = jwplayer(videoDiv[0].id).getDuration();
                                var percent = Math.round((100 * videoCT / videoMD)) + "%";
                                var widthPr = percent;
                                if (videoDiv[0].previousElementSibling.classList.contains("videoSeekBar")) {
                                    videoDiv[0].previousElementSibling.style.width = widthPr;
                                }

                            });
                        });
                    }
                }


            }
        }
if(self.el.classList.contains("slidesCarousel")){
            var slideShowIndicator = document.getElementsByClassName("slideShowIndicator")[0];  
var checkPlayPause = false;
            function videoPlayPauseSlide(e) {
                if (window.innerWidth > 320 && screen.width > 320) {
                    var el = e;
if(checkPlayPause == false && el.classList.contains('slideShowIndicator')){
                        checkPlayPause = true;
                    }else if(checkPlayPause && el.classList.contains('slideShowIndicator')){
                        checkPlayPause = false;
                    }
                    el.classList.toggle("expanded");
                    
                    if(el.classList.contains('carItem') && el.classList.contains('active') && el.classList.contains('expanded')){
                                stopSlide(findSlidingElem(el.parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
                            }
                    else if(el.classList.contains('slideShowIndicator') && el.classList.contains('expanded')){
                        stopSlide(findSlidingElem(el.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
                    }
                    else if(el.classList.contains('carItem') && el.classList.contains('active') && !el.classList.contains('expanded')){
                        vidCT = el.querySelector('.slideSeekBar').style.width;
                        vidMD = 100;
                        var carouselTimeUp = parseInt(totalTime - ((parseInt(vidCT)) / vidMD) * totalTime);
                        self.intervalCarousel = carouselTimeUp;
                    
                        startSlide(findSlidingElem(el.parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
                    }
                    else if(el.classList.contains('slideShowIndicator') && !el.classList.contains('expanded')){
                            vidCT = el.parentElement.parentElement.parentElement.parentElement.getElementsByClassName("carItem active")[0].querySelector('.slideSeekBar').style.width;
                            vidMD = 100;
                        var carouselTimeUp = parseInt(totalTime - ((parseInt(vidCT)) / vidMD) * totalTime);
                            self.intervalCarousel = carouselTimeUp;
                            
                            startSlide(findSlidingElem(el.parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
                    }
                    
                    var videoDiv = self.el.getElementsByClassName("jwplayer");
                    for (var i = 0; i < videoDiv.length; i++) {
                        if (videoDiv[i].parentElement.parentElement.classList.contains("active")) {
                            if (el.classList.contains("expanded") || slideShowIndicator.classList.contains('expanded') || videoDiv[i].closest('.carItem').classList.contains('expanded')) {
                                if (window.innerWidth > 320 && screen.width > 320) {
                                    if (jwplayer(videoDiv[i]).getState() == "playing" || jwplayer(videoDiv[i]).getState() == "buffering") {
                                        jwplayer(videoDiv[i]).pause();
                                    }
                                }
                                stopSlide(findSlidingElem(videoDiv[i].parentElement.parentElement.parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
                            }else {
                                if (window.innerWidth > 320 && screen.width > 320) {
                                    if (jwplayer(videoDiv[i]).getState() == "idle" || jwplayer(videoDiv[i]).getState() == "stop" || jwplayer(videoDiv[i]).getState() == "paused") {
                                        jwplayer(videoDiv[i]).play();
                                    }
                                }
                               
                                startSlide(findSlidingElem(videoDiv[i].parentElement.parentElement.parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
                            }
            
                        }
            
                    }
            
                    
                    if (window.innerWidth < 991) {
                        self.playPauseTimer(self);
                    }
                } else {
                    return false;
                }
            }

            var hasInView = false;
            var slidesCarousel = document.querySelectorAll('.slidesCarousel');
            function isElementInViewport(el) {
                var rect = el.getBoundingClientRect();
                return (rect.top <= window.innerHeight) && ((rect.top + rect.height) >= 0);
            }
            function slideShowPlayPause() {
                for (var i = 0; i < slidesCarousel.length; i++) {
                    var videoD = slidesCarousel[i].getElementsByClassName("carItem active")[0].querySelector('.jwplayer');
                    var active_slide = slidesCarousel[i].getElementsByClassName('slideShowIndicator')[0].parentElement.parentElement.parentElement.parentElement.getElementsByClassName("carItem active")[0];

                    if (isElementInViewport(slidesCarousel[i]) && !hasInView) {
                        if(checkPlayPause == false){
                            slidesCarousel[i].getElementsByClassName('slideShowIndicator')[0].classList.remove('expanded');
        
                            if(active_slide.children[0].classList.contains('slideVideo') && !active_slide.classList.contains('expanded') && videoD){
                                if (window.innerWidth > 320 && screen.width > 320) {
                                    if (jwplayer(videoD).getState() == "idle" || jwplayer(videoD).getState() == "stop" || jwplayer(videoD).getState() == "paused") {
                                        jwplayer(videoD).play();
                                    }
                                }
                            }
                            vidCT = active_slide.querySelector('.slideSeekBar').style.width;
                            vidMD = 100;
                            var carouselTimeUp = parseInt(totalTime - ((parseInt(vidCT)) / vidMD) * totalTime);
                            self.intervalCarousel = carouselTimeUp;
                            
                            startSlide(findSlidingElem(slidesCarousel[i].getElementsByClassName('slideShowIndicator')[0].parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
                        }
                        hasInView = true;
                    }
                    else if(!isElementInViewport(slidesCarousel[i]) && hasInView ){
                        if(checkPlayPause == false){
                            slidesCarousel[i].getElementsByClassName('slideShowIndicator')[0].classList.add('expanded');

                            if(active_slide.children[0].classList.contains('slideVideo') && videoD){
                                if (window.innerWidth > 320 && screen.width > 320) {
                                    if (jwplayer(videoD).getState() == "playing" || jwplayer(videoD).getState() == "buffering") {
                                        jwplayer(videoD).pause();
                                    }
                                }
                            }

                            stopSlide(findSlidingElem(slidesCarousel[i].getElementsByClassName('slideShowIndicator')[0].parentElement.parentElement.parentElement.parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
                        }
                        hasInView = false;
                    }
                }
            }
            window.addEventListener('scroll', function() {
                slideShowPlayPause();
            });
            slideShowIndicator.addEventListener("click", function(){
                videoPlayPauseSlide(slideShowIndicator)
            })
            var carItem = self.el.querySelectorAll(".slidesCarousel .carItem")
        carItem.forEach((item)=> {
            var slideText = item.querySelector(".slideText");
            var expandArrow = item.querySelector(".expandArrow");
            var slideSection = item.querySelector('.slideSection');
            var closeContent = item.querySelector(".closeContent");
            var navToPage = item.querySelector(".navToPage");
            var allText = slideText.innerHTML.trim();
            var shortText;
            
            function expandUP(){

                slideText.innerHTML = allText;
                expandArrow.style.display = 'none';
                slideSection.classList.add("ContentOverlay");
                closeContent.style.display = "inline"
                    if(navToPage && !navToPage.getAttribute('href').trim() == ''){
                    navToPage.style.display = 'inline-block';

                }
            }
            function closeExpandUP(){
                expandArrow.style.display = 'inline-block';
                slideSection.classList.remove("ContentOverlay");
                closeContent.style.display = "none";
                if(allText.length <= 218 || slideText.textContent.length <= 218){
                    
                    expandArrow.style.display = "none";
                        if(navToPage && !navToPage.getAttribute('href').trim() == ''){
                        navToPage.style.display = 'inline-block';
                    }
                }else if(allText.search('<') > -1){
                    shortText = extractTextWithTags(allText,218);

                    slideText.innerHTML = shortText + "...";
                        expandArrow.style.display = "inline";
                        if(navToPage){
                    navToPage.style.display = 'none';
                        }

                    }else{
                        shortText = allText.slice(0,218)
                        slideText.innerHTML = shortText + "...";
                        expandArrow.style.display = "inline";
                        if(navToPage){
                            navToPage.style.display = 'none';
                        }
                       
                }
            }
            function slideScrollIntoView(){
                if(window.innerWidth < 768){
                if(item.classList.contains('expanded')){
                    item.scrollIntoView({
                        behavior:'smooth',
                    });
                        item.closest('body').classList.add('slideTextExpand');
                        item.closest('body').style.overflow = "hidden";
                        item.closest('body').style.touchAction = "none";
                    disabletouch();
                }else{
                    item.closest('body').classList.remove('slideTextExpand');
                        item.closest('body').style.overflow = "auto";
                        item.closest('body').style.touchAction = "auto";
                    enabletouch();
                }
            }
            }
            closeExpandUP();
            expandArrow.addEventListener('click',function(e){

                expandUP();                
                videoPlayPauseSlide(item);
                    slideScrollIntoView();                    

            });

            closeContent.addEventListener('click', function(e){
                videoPlayPauseSlide(item);    
                closeExpandUP();
                slideScrollIntoView();
            });
            if(window.innerWidth > 320){
                item.addEventListener('click', closeOverlay);
                    function closeOverlay(e){
                    if(!e.target.closest('.ContentOverlay') && item.classList.contains('expanded')){
                        videoPlayPauseSlide(item);
                            closeExpandUP();
                    slideScrollIntoView();
                }
                    }
                var nav = document.getElementsByTagName('nav');
                nav[0].addEventListener("click", (e) => {
                    if(item.classList.contains('expanded')){
                        videoPlayPauseSlide(item);
                        closeExpandUP();
                        slideScrollIntoView();
                        }
                })
            }   
            });
        }

        self.setVisable(self);
        if (self.el.querySelectorAll(".carItemParent").length != 0) {
            self.links = self.el.querySelectorAll(".navDivParent .navDivRedirect a");
            self.linkschild = self.el.querySelectorAll(".navDivChild.navDivRedirect a");
            self.playpause = self.el.querySelectorAll(".playpause");
            self.addPlayPause(self.playpause, self);
            self.addPrevAndNextChild(self.linkschild, self);
            if (self.el.closest("section").getElementsByClassName("backImgD").length != 0) {
                //self.el.closest("section").getElementsByClassName("backImgD")[0].children[0].setAttribute("src", self.el.querySelectorAll(".carItemParent.active")[0].getElementsByClassName("backImg")[0].getAttribute("src"))
                self.el.closest("section").getElementsByClassName("backImgD")[0].children[0].setAttribute("src", self.el.querySelectorAll(".carItemParent.active")[0].getElementsByClassName("backImg")[0].currentSrc);
                self.el.closest("section").getElementsByClassName("backImgD")[0].children[0].classList.add("setBack")
            }
        } else {
            self.links = self.el.querySelectorAll(".navDivRedirect a");
        }
        self.addPrevAndNext(self.links, self);
        self.startImgTimer(self);
        self.indicators = self.el.querySelectorAll(".carouselIndicators li");
        self.navIndicators(self.indicators, self);
    },
    //for changing activated fold slide Change
    changeImageCar: function (dirParam, self, flagChild, elemCur) {
        var dataElem, dataElemF = [];
        if (!flagChild) {
            dataElem = self.el.getElementsByClassName("carItem");
            var videoElem = document.getElementsByClassName("jwplayer");
            if (videoElem.length !== 0) {
                for (var i = 0; i < videoElem.length; i++) { }
            }
            if (self.el.querySelectorAll(".carItemParent").length != 0) {
                dataElemF = [];
                for (var i = 0; i < dataElem.length; i++) {
                    if (dataElem[i].classList.contains("carItemParent")) {
                        dataElemF[dataElemF.length] = dataElem[i]
                    }
                }
                dataElem = dataElemF
            }

        } else {
            dataElem = elemCur.getElementsByClassName("carItemChild")
        }
        var activateElem = 1;
        var elemIdVisible = self.searchVisibleElem(dataElem);
        if (!dirParam) {
            var activateElem = self.nextElem(elemIdVisible, dataElem.length);
            self.slideImage(dataElem, elemIdVisible, activateElem, "next", "left", self)
        } else {
            var result = self.prevElem(elemIdVisible, dataElem.length)
            activateElem = result;
            self.slideImage(dataElem, elemIdVisible, activateElem, "prev", "right", self)
        }


    },
    //for prev and next arrow manual click 
    addPrevAndNext: function (elems, self) {
        var arrLink = [0, 1]
        if (self.el.classList.contains("imgCarousel")) {
            arrLink = [1, 0]
        }
        if (elems.length != 0) {
            elems[arrLink[0]].addEventListener("click", function () {
                self.stopImgTimer(self);
                self.changeImageCar(true, self, false, "");

                var videoDivs = document.querySelectorAll(".carouselDiv .jwplayer");
                if (videoDivs.length != 0) {
                    for (var j = 0; j < videoDivs.length; j++) {
                        var videoId = videoDivs[j].getAttribute("id");
                        jwplayer(document.getElementById(videoId)).stop();
                    }
                }
                self.startImgTimer(self);

            }, false);

            elems[arrLink[1]].addEventListener("click", function () {
                self.stopImgTimer(self);
                self.changeImageCar(false, self, false, "");

                var videoDivs = document.querySelectorAll(".carouselDiv .jwplayer");
                if (videoDivs.length != 0) {
                    for (var j = 0; j < videoDivs.length; j++) {
                        var videoId = videoDivs[j].getAttribute("id");
                        jwplayer(document.getElementById(videoId)).stop();
                    }
                }
                self.startImgTimer(self);
            }, false);
        }
    },
    //carousel play pause on click / toggle
    addPlayPause: function (elems, self) {
        if (elems.length != 0) {
            for (var i = 0; i < elems.length; i++) {
                elems[i].addEventListener("click", function () {

                    self.playPauseTimer(self);
                }, false);
            }
        }

    },
    // carousel play pause on click / toggle
    playPauseTimer: function (self) {
        if (self.startstop) {
            self.stopImgTimer(self);
            self.startstop = false;
        } else {
            self.startImgTimer(self);
            self.startstop = true;
        }
        var elem = self.el.querySelectorAll(".carItemParent.active .playpause");
        if (elem.length != 0) {
            for (var i = 0; i < elem[0].children.length; i++) {
                if (elem[0].children[i].classList.contains("noDisplay")) {
                    elem[0].children[i].classList.remove("noDisplay")
                } else
                    elem[0].children[i].classList.add("noDisplay")
            }
        }
    },
    // child carousel indicators prev and next click
    addPrevAndNextChild: function (elems, self) {
        if (elems.length != 0) {
            for (var i = 0; i < elems.length; i++) {
                if (elems[i].classList.contains("prevAr")) {
                    elems[i].addEventListener("click", function (event) {
                        self.stopImgTimer(self)
                        self.changeImageCar(true, self, true, event.currentTarget)
                        self.startImgTimer(self)
                    }, false);
                } else {

                    elems[i].addEventListener("click", function () {
                        self.stopImgTimer(self)
                        self.changeImageCar(false, self, true, event.currentTarget)
                        self.startImgTimer(self)
                    }, false);
                }
            }
        }
    },
    // auto slide carousel
    slideImage: function (elemList, currentIndex, nextIndex, dirClass1, dirClass2, self) {


        if (self.el.classList.contains("heroCarousel") || self.el.classList.contains("slidesCarousel")) {
            if (self.el.classList.contains("heroCarousel") && self.intervalCarousel != parseInt(18000)) {
                self.intervalCarousel = parseInt(18000);
            }else{
                counter=0;
                if(self.intervalCarousel != parseInt(totalTime)){
                    self.intervalCarousel = parseInt(totalTime);
                }
                if(elemList[currentIndex].classList.contains('expanded')){
                    closeCurrentElem(elemList,currentIndex);
                }            
            }
            stopSlide(findSlidingElem(elemList[0].parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));
            startSlide(findSlidingElem(elemList[0].parentElement.parentElement.parentElement.getElementsByClassName("carouselDiv")));

        }

        elemList[nextIndex].classList.add(dirClass1);
        if (elemList[nextIndex].classList.contains("carItemParent")) {
            self.removeActive(elemList[nextIndex].getElementsByClassName("carItem"), "");

            elemList[nextIndex].getElementsByClassName("carItem")[0].className = "carItem carItemChild active";

        }
        setTimeout(function () {
            elemList[currentIndex].classList.add(dirClass2);
            elemList[nextIndex].classList.add(dirClass2);



            if (elemList[nextIndex].classList.contains("carItemParent")) {
                elemList[nextIndex].closest("section").getElementsByClassName("backImgD")[0].children[0].classList.remove("setBack")
                //elemList[nextIndex].closest("section").getElementsByClassName("backImgD")[0].children[0].setAttribute("src", elemList[nextIndex].getElementsByClassName("backImg")[0].getAttribute("src"))
                                elemList[nextIndex].closest("section").getElementsByClassName("backImgD")[0].children[0].setAttribute("src", elemList[nextIndex].getElementsByClassName("backImg")[0].currentSrc);
            }
            setTimeout(function () {
                self.removeActive(elemList, "");
                if(self.el.classList.contains("slidesCarousel")){
                    var progressBar1 = elemList[currentIndex].getElementsByClassName('slideSeekBar')[0]
                    var progressBar2 = elemList[nextIndex].getElementsByClassName('slideSeekBar')[0]
                    progressBar1.style.width = 0 + "%";
                    progressBar2.style.width = 0 + "%";
                }

                if (elemList[nextIndex].classList.contains("carItemParent")) {
                    elemList[nextIndex].closest("section").getElementsByClassName("backImgD")[0].children[0].classList.add("setBack")


                    elemList[nextIndex].className = "carItem carItemParent active";

                    if (elemList[nextIndex].getElementsByClassName("carouselIndicators").length != 0) {
                        self.removeActive(elemList[nextIndex].getElementsByClassName("carouselIndicators")[0].children, "list");
                        elemList[nextIndex].getElementsByClassName("carouselIndicators")[0].children[0].classList.add("active")
                    }
                } else if (elemList[nextIndex].classList.contains("carItemChild"))
                    elemList[nextIndex].className = "carItem carItemChild active";
                else if(elemList[nextIndex].closest("section").getElementsByClassName("slidesCarousel")[0]){
                    elemList[nextIndex].className = "carItem active";
                }else
                    elemList[nextIndex].className = "carItem active";
                var itemsActivated = elemList[nextIndex].children;
                var playPauseBtn = document.getElementsByClassName("centerIndicator")[0];
                var slideShowIndicator = document.getElementsByClassName("slideShowIndicator")[0];

                
                if ((window.innerWidth > 767) || (self.el.classList.contains("slidesCarousel"))) {
                    if (self.intervalCarousel != 18000 && self.el.classList.contains("heroCarousel")) {
                        self.intervalCarousel = 18000;
                    }
                    var videoDivs = document.querySelectorAll(".carouselDiv .jwplayer");
                    if (videoDivs.length != 0) {
                        for (var j = 0; j < videoDivs.length; j++) {
                            if (!((videoDivs[j].parentElement.classList.contains("active")) || (videoDivs[j].parentElement.parentElement.classList.contains("active")))) {
                                var videoId = videoDivs[j].getAttribute("id");
                                jwplayer(document.getElementById(videoId)).stop();
                            }
                        }
                    }

                    for (var i = 0; i < itemsActivated.length; i++) {
                        if (itemsActivated[i].classList.contains("jwplayer")) {
                            var videoTag = itemsActivated[i];
                            if (videoTag.previousElementSibling.classList.contains("videoSeekBar")) {
                                videoTag.previousElementSibling.style.width = 0;
                            }
                            if (self.intervalCarousel != 18000) {
                                self.intervalCarousel = parseInt(18000);
                                self.switching = 0;
                            }
                            if (!playPauseBtn.classList.contains("activePause")) {
                                if (jwplayer(videoTag).getState() == "idle" || jwplayer(videoTag).getState() == "stop" || jwplayer(videoTag).getState() == "paused") {
                                    jwplayer(videoTag).play();
                                }
                            }

                            jwplayer(videoTag.id).on('time', function () {
                                var videoCT = jwplayer(videoTag.id).getPosition();
                                var videoMD = jwplayer(videoTag.id).getDuration();
                                var percent = Math.round((100 * videoCT / videoMD)) + "%";
                                var widthPr = percent;
                                videoTag.previousElementSibling.style.width = widthPr;
                            });
                        }else if(itemsActivated[i].children[0] && itemsActivated[i].children[0].classList.contains('jwplayer')){
                            var videoTag = itemsActivated[i].children[0];
                            if (self.intervalCarousel != totalTime) {
                                self.intervalCarousel = parseInt(totalTime);
                                self.switching = 0;
                        }
                        if (itemsActivated[i].parentElement.classList.contains("active") && !slideShowIndicator.classList.contains("expanded")) {
                            if (jwplayer(videoTag).getState() == "idle" || jwplayer(videoTag).getState() == "stop" || jwplayer(videoTag).getState() == "paused") {
                                jwplayer(videoTag).play();
                            }

                    }
                }
            }
        }

                if (elemList[nextIndex].parentNode.parentNode.getElementsByClassName("carouselIndicators").length != 0) {
                    self.removeActive(elemList[nextIndex].parentNode.parentNode.getElementsByClassName("carouselIndicators")[0].children, "list");
                    elemList[nextIndex].parentNode.parentNode.getElementsByClassName("carouselIndicators")[0].children[nextIndex].classList.add("active")
                }
                self.setVisable(self);
            }, 600);

        }, 60);
    },
    // for removing active class while auto slide carousel
    removeActive: function (elemList, paramL) {

        if (elemList.length != 0) {
            if (paramL != "list") {
                for (var i = 0; i < elemList.length; i++) {
                    if (elemList[i].classList.contains("carItemParent"))

                        elemList[i].className = "carItem carItemParent";
                    else if (elemList[i].classList.contains("carItemChild")) { } else
                        elemList[i].className = "carItem"
                }
            } else {
                for (var i = 0; i < elemList.length; i++) {
                    if (elemList[i].classList.contains("active")) {
                        elemList[i].classList.remove("active")
                    }
                }

            }
        }

    },
    // current active slide in carousel on current fold
    searchVisibleElem: function (elements) {
        var visibleID = -1;
        for (var i = 0; i < elements.length; i++) {
            if (elements[i].classList.contains("active")) {
                visibleID = i;
                break;
            }
        }
        return visibleID;
    },

    // for stop the carousel slide
    stopImgTimer: function (self) {
        if (self.intervalCarousel != 0 && self.el.getElementsByClassName("carItem").length > 1) {
            clearInterval(self.switching);
        }
    },

    //for start the carousel slide
    startImgTimer: function (self) {
        if (self.el.querySelectorAll(".carItemParent").length != 0) {
            if (self.intervalCarousel != 0) {
                clearInterval(self.switching)
                self.switching = setInterval(function () {
                    var elems = self.el.querySelectorAll(".carItemParent.active")[0].getElementsByClassName("carItemChild");
                    for (i = 0; i < elems.length; i++) {
                        if (elems[i].classList.contains("active"))
                            break
                    }
                    if (i == (elems.length - 1)) {
                        self.changeImageCar(false, self, false, "");

                    } else
                        self.changeImageCar(false, self, true, self.el.querySelectorAll(".carItemParent.active")[0])

                }, self.intervalCarousel);
            }

        } else {
            if (testFlag) {
                var carouselTimeUp = Math.floor(vidMD - vidCT);
                self.intervalCarousel = parseInt((carouselTimeUp + 1) * 1000);
                testFlag = false;
            }
            if (self.intervalCarousel != 0 && self.el.getElementsByClassName("carItem").length > 1) {
                clearInterval(self.switching);
                self.switching = setInterval(function () {

                    if (self.el.classList.contains("heroCarousel")) {
                        if (!document.querySelector(".heroControlsArrow .centerIndicator").classList.contains("activePause")) {
                            self.changeImageCar(false, self)
                        }
                    } 
                    else if (self.el.classList.contains("slidesCarousel")) {
                        if((self.el.querySelectorAll(".slidesCarousel .carItem.expanded").length == 1 || document.querySelector(".slidesCarousel .slideShowIndicator").classList.contains("expanded"))){
                            
                        }else{
                            self.changeImageCar(false, self)
                        }
                    }
                     else {                        
                        self.changeImageCar(false, self)
                    }
                }, self.intervalCarousel);

            }
        }
    },

    // int setting the carousel slide count in indicators(total count and current count)
    setVisable: function (self) {
        if (self.el.getElementsByClassName("carItemParent").length != 0) {
            if (self.el.getElementsByClassName("navDivParent")[0] != undefined) {
                var elem = self.el.getElementsByClassName("navDivParent")[0]
            } else
                var elem = self.el;
            self.setSlideNumber(elem, self.el.getElementsByClassName("carItemParent"), self)

            if (self.el.getElementsByClassName("carItemParent")[0] != undefined) {
                if (self.el.querySelectorAll(".carItemParent.active")[0].getElementsByClassName("carItemChild").length != 0) {
                    self.setSlideNumber(self.el.querySelectorAll(".carItemParent.active")[0].getElementsByClassName("carIndicators")[0], self.el.querySelectorAll(".carItemParent.active")[0].getElementsByClassName("carItemChild"), self)

                }
            }
        } else {
            self.setSlideNumber(self.el, self.el.getElementsByClassName("carItem"), self)

        }

    },

    // for setting the current and total count of carousel slides in indicators
    setSlideNumber: function (elem, dataElem, self) {
        if (elem.getElementsByClassName("slideNumber").length != 0) {
            var visibleElem = self.searchVisibleElem(dataElem) + 1;
            if (elem.getElementsByClassName("totalSlide").length != 0) {
                elem.getElementsByClassName("slideNumber")[0].innerHTML = visibleElem;
                elem.getElementsByClassName("totalSlide")[0].innerHTML = dataElem.length
            } else {
                elem.getElementsByClassName("slideNumber")[0].innerHTML = visibleElem + " / " + dataElem.length;
            }
        }
        if (window.innerWidth < 992) {
            if (self.el.classList.contains("brandCarousel") && self.indicators != undefined) {
                for (var i = 0; i < self.indicators.length; i++) {
                    var getAttr = self.indicators[i].getAttribute("data-slide-to");
                    if (self.indicators[i].classList.contains("forBrands") && self.indicators[i].classList.contains("active")) {

                        if (self.indicators[i].getBoundingClientRect().left > (window.innerWidth - self.indicators[i].offsetHeight) && self.indicators[i].classList.contains("forBrands")) {
                            brandsThumbnail[0].scrollBy(0, window.innerWidth - self.indicators[i].offsetWidth);
                        }
                        if (self.indicators[i].getBoundingClientRect().left < 0 && self.indicators[i].classList.contains("forBrands")) {
                            brandsThumbnail[0].scrollBy(0, self.indicators[i].getBoundingClientRect().left)
                        }
                        if (getAttr == "0") {
                            brandsThumbnail[0].scrollBy(0, -(self.indicators[0].offsetWidth * self.indicators.length));
                        }
                        if (getAttr == self.indicators.length - 1) {
                            brandsThumbnail[0].scrollBy(0, (self.indicators[0].offsetWidth * self.indicators.length));
                        }
                    }
                }
            }
        }
    },

    // for finding prev element
    prevElem: function (num, arrayLength) {
        if (num == 0) return arrayLength - 1;
        else return num - 1;
    },

    // for finding next element
    nextElem: function (num, arrayLength) {
        if (num == (arrayLength - 1)) return 0;
        else return num + 1;
    },

    // not getting used
    hasClass: function (element, className) {
        return ("" + element.className + "").indexOf("" + className + "") > -1
    },

    // for indicators for manual click
    navIndicators: function (indicators, self) {
        if (indicators.length != 0) {
            for (var i = 0; i < indicators.length; i++) {

                indicators[i].addEventListener("click", function (event) {
                    var elem;
                    if (event.currentTarget.closest(".carouselDiv").getElementsByClassName("carItem")[0].classList.contains("carItemChild")) {
                        elem = event.currentTarget.closest(".carItem");
                        self.stopImgTimer(self);
                        self.changeElem(parseInt(event.currentTarget.getAttribute("data-slide-to")), self, elem);
                        self.startImgTimer(self);
                    } else {

                        self.stopImgTimer(self);
                        self.changeElem(parseInt(event.currentTarget.getAttribute("data-slide-to")), self, "");
                        self.startImgTimer(self);
                    }
                });

            }
        }

    },

    // for auto slide item in carousel
    changeElem: function (elemIndex, self, elem) {
        if (elem == "")
            var dataElem = self.el.getElementsByClassName("carItem");
        else
            dataElem = elem.getElementsByClassName("carItem");
        var elemIdVisible = self.searchVisibleElem(dataElem);
        if (elemIdVisible != elemIndex) {
            if (elemIdVisible < elemIndex) {
                self.slideImage(dataElem, elemIdVisible, elemIndex, "next", "left", self)
            } else {
                self.slideImage(dataElem, elemIdVisible, elemIndex, "prev", "right", self)
            }
        }
    },

    // not getting used
    initElement: function (self) {
        var dataElem = self.el.getElementsByClassName("carItem")
        self.slideImage(dataElem, self.searchVisibleElem(dataElem), 0, "next", "left", self)
    },
    
    initElementActive: function (self,lastElement) {
        var dataElem = self.el.getElementsByClassName("carItem")
        self.slideImage(dataElem, self.searchVisibleElem(dataElem), lastElement, "next", "left", self)
    }
}

function findSlidingElem(elemListG) {

    var arr = new Array();
    for (var i = 0; i < sliderObj.length; i++) {
        for (var j = 0; j < elemListG.length; j++) {
            if (elemListG[j] === sliderObj[i].el) {
                arr[arr.length] = sliderObj[i];
            }
        }
    }
    if (arr.length != 0)
        return arr
    else
        return -1;
}

function stopSlide(slideElem) {

    if (slideElem != -1) {
        for (var i = 0; i < slideElem.length; i++) {
            slideElem[i].stopImgTimer(slideElem[i]);
        }

    }
}

function startSlide(slideElem) {

    if (slideElem != -1) {
        for (var i = 0; i < slideElem.length; i++) {
            slideElem[i].startImgTimer(slideElem[i]);
        }

    }
}

function initSlide(slideElem) {


    if (slideElem != -1) {
        for (var i = 0; i < slideElem.length; i++) {
            if (!slideElem[i].el.classList.contains("imgCarousel")) {
                slideElem[i].initElement(slideElem[i]);
            }
        }
    }
}
function sliderPause(expandArrow){
    expandArrow.closest('.carItem').classList.add("expanded");
}
function sliderPlay(closeContent){
    closeContent.closest('.carItem').classList.remove("expanded");
}
function closeCurrentElem(elemList, currentIndex){
var slideText = elemList[currentIndex].querySelector(".slideText");
var expandArrow = elemList[currentIndex].querySelector(".expandArrow");
var slideSection = elemList[currentIndex].querySelector('.slideSection');
var closeContent = elemList[currentIndex].querySelector(".closeContent");
var navToPage = elemList[currentIndex].querySelector(".navToPage")
    var allText = slideText.innerHTML.trim();
    var shortText;

    expandArrow.style.display = 'inline';
slideSection.classList.remove("ContentOverlay");
closeContent.style.display = "none";

if(allText.length <= 218 || slideText.textContent.length <= 218){
    
    expandArrow.style.display = "none";
    if(navToPage && !navToPage.getAttribute('href').trim() == ''){
        navToPage.style.display = 'inline-block';
    }
    }else if(allText.search('<') > -1){
    shortText = extractTextWithTags(allText,218);
    slideText.innerHTML = shortText + "...";
    expandArrow.style.display = "inline";
    if(navToPage){
        navToPage.style.display = 'none';
    }
}else{
    shortText = allText.slice(0,218)
    slideText.innerHTML = shortText + "...";
        expandArrow.style.display = "inline";
    if(navToPage){
    navToPage.style.display = 'none';
    }
}
}
//code for dropdown

var customSelect, i, j, selElmnt, div, div2, div3;
var toggleFlag = false;

customSelect = document.getElementsByClassName("custom-select");
for (i = 0; i < customSelect.length; i++) {
  selElmnt = customSelect[i].getElementsByTagName("select")[0];
  div = document.createElement("DIV");
  div.setAttribute("class", "select-selected");
  div.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
  customSelect[i].appendChild(div);
  div2 = document.createElement("DIV");
  div2.setAttribute("class", "select-items select-hide");
  for (j = 0; j < selElmnt.length; j++) {
    div3 = document.createElement("DIV");
    div3.innerHTML = selElmnt.options[j].innerHTML;
    div3.addEventListener("click", function (e) {
      var y, i, k, s, h;
      s = this.parentNode.parentNode.getElementsByTagName("select")[0];
      h = this.parentNode.previousSibling;
      for (i = 0; i < s.length; i++) {
        if (s.options[i].innerHTML == this.innerHTML) {
          s.selectedIndex = i;
          h.innerHTML = this.innerHTML;
          y = this.parentNode.getElementsByClassName("same-as-selected");
          for (k = 0; k < y.length; k++) {
            y[k].removeAttribute("class");
          }
          this.setAttribute("class", "same-as-selected");
          break;
        }
      }
      h.click();
    });
    div2.appendChild(div3);
  }
  customSelect[i].appendChild(div2);
  div.addEventListener("click", function (e) {
    e.stopPropagation();
    closeAllSelect(this);
    this.nextSibling.classList.toggle("select-hide");
    this.classList.toggle("select-arrow-active");
  });
}

function closeAllSelect(elmnt) {
  var x,
    y,
    i,
    arrNo = [];
  x = document.getElementsByClassName("select-items");
  y = document.getElementsByClassName("select-selected");
  for (i = 0; i < y.length; i++) {
    if (elmnt == y[i]) {
      arrNo.push(i);
    } else {
      y[i].classList.remove("select-arrow-active");
    }
  }
  for (i = 0; i < x.length; i++) {
    if (arrNo.indexOf(i)) {
      x[i].classList.add("select-hide");
    }
  }
}
document.addEventListener("click", closeAllSelect);
if (customSelect.length != 0) {
  customSelect[0].addEventListener("click", function () {});
}

// load more and load less content
var loadBtn = document.getElementsByClassName("loadMoreBtn");
if (loadBtn.length != 0) {
  for (var i = 0; i < loadBtn.length; i++) {
    loadBtn[i].addEventListener("click", function (event) {
      loadContent(event);
    });
  }
}

function loadContent(event) {
  if (!toggleFlag) {
    var displayContent = event.currentTarget.previousElementSibling.children[1];
    displayContent.classList.remove("noDisplay");
    displayContent.classList.add("active");
    var forAnimation = displayContent.children;
    var line = event.currentTarget.previousElementSibling.children[1].getElementsByClassName(
      "feedArticleBorder"
    );
    //animating cards and lines after clicking on load more button
    for (var i = 0; i < forAnimation.length; i++) {
      forAnimation[i].classList.remove("come-in", "already-visible");
      line[i].classList.remove("comeInBorder", "already-visible");
    }
    for (var i = 0; i < forAnimation.length; i++) {
      if (animateCard(true, forAnimation[i])) {
        forAnimation[i].classList.add("come-in");
        line[i].classList.add("comeInBorder");
      }
    }
    event.currentTarget.children[0].style.display = "none";
    event.currentTarget.children[1].style.display = "block";
    toggleFlag = true;
  } else {
    toggleFlag = false;
    var displayContent = event.currentTarget.previousElementSibling.children[1];
    var focusElem = displayContent.previousElementSibling.children[5];

    displayContent.classList.add("noDisplay");
    displayContent.classList.remove("active");
    event.currentTarget.children[0].style.display = "block";
    event.currentTarget.children[1].style.display = "none";

    focusElem.scrollIntoView();
  }
}

//show hide for filter
var selectItem = document.getElementsByClassName("select-items");
if (selectItem.length != 0) {
  selectItem[0].addEventListener("click", function () {
    window.scrollBy(0, 1);
    if (toggleFlag) {
      toggleFlag = false;
      var filterAplly = document.querySelectorAll(".flexContainer.active");
      filterAplly[0].classList.add("noDisplay");
      filterAplly[0].classList.remove("active");
      filterAplly[0].parentNode.nextElementSibling.getElementsByClassName(
        "loadmore"
      )[0].style.display = "block";
      filterAplly[0].parentNode.nextElementSibling.getElementsByClassName(
        "loadless"
      )[0].style.display = "none";
    }

    var dispCards = document.getElementsByClassName("dispCards");
    for (var k = 0; k < dispCards.length; k++) {
      var dispLine = dispCards[k].getElementsByClassName("feedArticleBorder");
      for (var i = 0; i < dispCards[k].children.length; i++) {
        dispCards[k].children[i].classList.remove("come-in", "already-visible");
        dispLine[i].classList.remove("comeInBorder", "already-visible");
      }
    }
    for (var i = 0; i < selectItem[0].children.length; i++) {
      var selected = selectItem[0].children[i].classList.contains(
        "same-as-selected"
      );
      if (selected) {
        document
          .getElementsByClassName("selectFilter")[i].classList.remove("noDisplay");
      } else {
        document
          .getElementsByClassName("selectFilter")[i].classList.add("noDisplay");
      }
    }
  });
}

// inr usd tables
var currency = document.getElementsByClassName("currency");

if (currency.length != 0) {
  for (var i = 0; i < currency.length; i++) {
    //usd
    if (currency[i].children[1]) {
    currency[i].children[1].children[0].addEventListener("click", function () {
      var el = this;
      var showUSD = el.parentNode.parentNode.nextElementSibling;
      var hideRuppee =
        el.parentNode.parentNode.nextElementSibling.nextElementSibling;
      showUSD.classList.add("noDisplay");
      hideRuppee.classList.remove("noDisplay");
      el.style.color = "#e2a330";
      el.parentNode.parentNode.children[0].children[0].style.color = "#454545";
    });
}
    //inr
      if (currency[i].children[1]) {
    currency[i].children[0].children[0].addEventListener("click", function () {
      var el = this;
      var showUSD = el.parentNode.parentNode.nextElementSibling;
      var hideRuppee =
        el.parentNode.parentNode.nextElementSibling.nextElementSibling;
      showUSD.classList.remove("noDisplay");
      hideRuppee.classList.add("noDisplay");
      el.style.color = "";
      el.parentNode.parentNode.children[1].children[0].style.color = "";
    });
      }
  }
}

//removing mainSliderElem class from ymlSalt class section to remove ontouch scroll for aem integration
var ymlSalt = document.getElementsByClassName("ymlSalt");
if (ymlSalt.length != 0) {
  for (var i = 0; i < ymlSalt.length; i++) {
    ymlSalt[i].classList.remove("mainSliderElem");
  }
}

if (window.innerWidth < 992) {
  var positioning = document.getElementsByClassName("positioning")[0];
  if (positioning) {
    if (positioning.classList.contains("animm")) {
      positioning.classList.remove("animm");
    }
  }
}
